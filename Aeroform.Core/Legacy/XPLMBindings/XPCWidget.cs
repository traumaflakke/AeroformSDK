//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.2.1
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Aeroform.Core.Legacy.XPLMBindings {

public class XPCWidget : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal XPCWidget(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(XPCWidget obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  internal static global::System.Runtime.InteropServices.HandleRef swigRelease(XPCWidget obj) {
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new global::System.ApplicationException("Cannot release ownership as memory is not owned");
      global::System.Runtime.InteropServices.HandleRef ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.Dispose();
      return ptr;
    } else {
      return new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
    }
  }

  ~XPCWidget() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          XPlaneWrappersPINVOKE.delete_XPCWidget(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public XPCWidget(int inLeft, int inTop, int inRight, int inBottom, bool inVisible, string inDescriptor, bool inIsRoot, SWIGTYPE_p_void inParent, int inClass) : this(XPlaneWrappersPINVOKE.new_XPCWidget__SWIG_0(inLeft, inTop, inRight, inBottom, inVisible, inDescriptor, inIsRoot, SWIGTYPE_p_void.getCPtr(inParent), inClass), true) {
    if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
  }

  public XPCWidget(SWIGTYPE_p_void inWidget, bool inOwnsWidget) : this(XPlaneWrappersPINVOKE.new_XPCWidget__SWIG_1(SWIGTYPE_p_void.getCPtr(inWidget), inOwnsWidget), true) {
    if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetOwnsWidget(bool inOwnsWidget) {
    XPlaneWrappersPINVOKE.XPCWidget_SetOwnsWidget(swigCPtr, inOwnsWidget);
    if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetOwnsChildren(bool inOwnsChildren) {
    XPlaneWrappersPINVOKE.XPCWidget_SetOwnsChildren(swigCPtr, inOwnsChildren);
    if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
  }

  public SWIGTYPE_p_void Get() {
    global::System.IntPtr cPtr = XPlaneWrappersPINVOKE.XPCWidget_Get(swigCPtr);
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void AddAttachment(XPCWidgetAttachment inAttachment, bool inOwnsAttachment, bool inPrefilter) {
    XPlaneWrappersPINVOKE.XPCWidget_AddAttachment(swigCPtr, XPCWidgetAttachment.getCPtr(inAttachment), inOwnsAttachment, inPrefilter);
    if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
  }

  public void RemoveAttachment(XPCWidgetAttachment inAttachment) {
    XPlaneWrappersPINVOKE.XPCWidget_RemoveAttachment(swigCPtr, XPCWidgetAttachment.getCPtr(inAttachment));
    if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual int HandleWidgetMessage(int inMessage, SWIGTYPE_p_void inWidget, SWIGTYPE_p_intptr_t inParam1, SWIGTYPE_p_intptr_t inParam2) {
    int ret = XPlaneWrappersPINVOKE.XPCWidget_HandleWidgetMessage(swigCPtr, inMessage, SWIGTYPE_p_void.getCPtr(inWidget), SWIGTYPE_p_intptr_t.getCPtr(inParam1), SWIGTYPE_p_intptr_t.getCPtr(inParam2));
    if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}

}
