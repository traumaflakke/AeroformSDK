//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.2.1
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Aeroform.Core.Legacy.XPLMBindings {

public class XPLMCreateAvionics_t : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal XPLMCreateAvionics_t(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(XPLMCreateAvionics_t obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  internal static global::System.Runtime.InteropServices.HandleRef swigRelease(XPLMCreateAvionics_t obj) {
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new global::System.ApplicationException("Cannot release ownership as memory is not owned");
      global::System.Runtime.InteropServices.HandleRef ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.Dispose();
      return ptr;
    } else {
      return new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
    }
  }

  ~XPLMCreateAvionics_t() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          XPlaneWrappersPINVOKE.delete_XPLMCreateAvionics_t(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public int structSize {
    set {
      XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_structSize_set(swigCPtr, value);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      int ret = XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_structSize_get(swigCPtr);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int screenWidth {
    set {
      XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_screenWidth_set(swigCPtr, value);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      int ret = XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_screenWidth_get(swigCPtr);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int screenHeight {
    set {
      XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_screenHeight_set(swigCPtr, value);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      int ret = XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_screenHeight_get(swigCPtr);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int bezelWidth {
    set {
      XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_bezelWidth_set(swigCPtr, value);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      int ret = XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_bezelWidth_get(swigCPtr);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int bezelHeight {
    set {
      XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_bezelHeight_set(swigCPtr, value);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      int ret = XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_bezelHeight_get(swigCPtr);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int screenOffsetX {
    set {
      XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_screenOffsetX_set(swigCPtr, value);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      int ret = XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_screenOffsetX_get(swigCPtr);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int screenOffsetY {
    set {
      XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_screenOffsetY_set(swigCPtr, value);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      int ret = XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_screenOffsetY_get(swigCPtr);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int drawOnDemand {
    set {
      XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_drawOnDemand_set(swigCPtr, value);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      int ret = XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_drawOnDemand_get(swigCPtr);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_f_float_float_float_p_void__void bezelDrawCallback {
    set {
      XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_bezelDrawCallback_set(swigCPtr, SWIGTYPE_p_f_float_float_float_p_void__void.getCPtr(value));
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      global::System.IntPtr cPtr = XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_bezelDrawCallback_get(swigCPtr);
      SWIGTYPE_p_f_float_float_float_p_void__void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_float_float_float_p_void__void(cPtr, false);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_void__void drawCallback {
    set {
      XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_drawCallback_set(swigCPtr, SWIGTYPE_p_f_p_void__void.getCPtr(value));
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      global::System.IntPtr cPtr = XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_drawCallback_get(swigCPtr);
      SWIGTYPE_p_f_p_void__void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_void__void(cPtr, false);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_f_int_int_int_p_void__int bezelClickCallback {
    set {
      XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_bezelClickCallback_set(swigCPtr, SWIGTYPE_p_f_int_int_int_p_void__int.getCPtr(value));
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      global::System.IntPtr cPtr = XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_bezelClickCallback_get(swigCPtr);
      SWIGTYPE_p_f_int_int_int_p_void__int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_int_int_int_p_void__int(cPtr, false);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_f_int_int_int_p_void__int bezelRightClickCallback {
    set {
      XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_bezelRightClickCallback_set(swigCPtr, SWIGTYPE_p_f_int_int_int_p_void__int.getCPtr(value));
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      global::System.IntPtr cPtr = XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_bezelRightClickCallback_get(swigCPtr);
      SWIGTYPE_p_f_int_int_int_p_void__int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_int_int_int_p_void__int(cPtr, false);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_f_int_int_int_int_p_void__int bezelScrollCallback {
    set {
      XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_bezelScrollCallback_set(swigCPtr, SWIGTYPE_p_f_int_int_int_int_p_void__int.getCPtr(value));
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      global::System.IntPtr cPtr = XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_bezelScrollCallback_get(swigCPtr);
      SWIGTYPE_p_f_int_int_int_int_p_void__int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_int_int_int_int_p_void__int(cPtr, false);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_f_int_int_p_void__int bezelCursorCallback {
    set {
      XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_bezelCursorCallback_set(swigCPtr, SWIGTYPE_p_f_int_int_p_void__int.getCPtr(value));
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      global::System.IntPtr cPtr = XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_bezelCursorCallback_get(swigCPtr);
      SWIGTYPE_p_f_int_int_p_void__int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_int_int_p_void__int(cPtr, false);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_f_int_int_int_p_void__int screenTouchCallback {
    set {
      XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_screenTouchCallback_set(swigCPtr, SWIGTYPE_p_f_int_int_int_p_void__int.getCPtr(value));
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      global::System.IntPtr cPtr = XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_screenTouchCallback_get(swigCPtr);
      SWIGTYPE_p_f_int_int_int_p_void__int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_int_int_int_p_void__int(cPtr, false);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_f_int_int_int_p_void__int screenRightTouchCallback {
    set {
      XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_screenRightTouchCallback_set(swigCPtr, SWIGTYPE_p_f_int_int_int_p_void__int.getCPtr(value));
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      global::System.IntPtr cPtr = XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_screenRightTouchCallback_get(swigCPtr);
      SWIGTYPE_p_f_int_int_int_p_void__int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_int_int_int_p_void__int(cPtr, false);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_f_int_int_int_int_p_void__int screenScrollCallback {
    set {
      XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_screenScrollCallback_set(swigCPtr, SWIGTYPE_p_f_int_int_int_int_p_void__int.getCPtr(value));
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      global::System.IntPtr cPtr = XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_screenScrollCallback_get(swigCPtr);
      SWIGTYPE_p_f_int_int_int_int_p_void__int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_int_int_int_int_p_void__int(cPtr, false);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_f_int_int_p_void__int screenCursorCallback {
    set {
      XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_screenCursorCallback_set(swigCPtr, SWIGTYPE_p_f_int_int_p_void__int.getCPtr(value));
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      global::System.IntPtr cPtr = XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_screenCursorCallback_get(swigCPtr);
      SWIGTYPE_p_f_int_int_p_void__int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_int_int_p_void__int(cPtr, false);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_f_char_int_char_p_void_int__int keyboardCallback {
    set {
      XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_keyboardCallback_set(swigCPtr, SWIGTYPE_p_f_char_int_char_p_void_int__int.getCPtr(value));
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      global::System.IntPtr cPtr = XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_keyboardCallback_get(swigCPtr);
      SWIGTYPE_p_f_char_int_char_p_void_int__int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_char_int_char_p_void_int__int(cPtr, false);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_f_float_float_float_p_void__float brightnessCallback {
    set {
      XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_brightnessCallback_set(swigCPtr, SWIGTYPE_p_f_float_float_float_p_void__float.getCPtr(value));
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      global::System.IntPtr cPtr = XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_brightnessCallback_get(swigCPtr);
      SWIGTYPE_p_f_float_float_float_p_void__float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_float_float_float_p_void__float(cPtr, false);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string deviceID {
    set {
      XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_deviceID_set(swigCPtr, value);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_deviceID_get(swigCPtr);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string deviceName {
    set {
      XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_deviceName_set(swigCPtr, value);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_deviceName_get(swigCPtr);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_void refcon {
    set {
      XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_refcon_set(swigCPtr, SWIGTYPE_p_void.getCPtr(value));
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      global::System.IntPtr cPtr = XPlaneWrappersPINVOKE.XPLMCreateAvionics_t_refcon_get(swigCPtr);
      SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public XPLMCreateAvionics_t() : this(XPlaneWrappersPINVOKE.new_XPLMCreateAvionics_t(), true) {
    if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
  }

}

}
