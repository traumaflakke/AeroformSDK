//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.2.1
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Aeroform.Unmanaged.XPLMBindings {

public class XPLMCustomizeAvionics_t : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal XPLMCustomizeAvionics_t(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(XPLMCustomizeAvionics_t obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  internal static global::System.Runtime.InteropServices.HandleRef swigRelease(XPLMCustomizeAvionics_t obj) {
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new global::System.ApplicationException("Cannot release ownership as memory is not owned");
      global::System.Runtime.InteropServices.HandleRef ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.Dispose();
      return ptr;
    } else {
      return new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
    }
  }

  ~XPLMCustomizeAvionics_t() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          XPlaneWrappersPINVOKE.delete_XPLMCustomizeAvionics_t(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public int structSize {
    set {
      XPlaneWrappersPINVOKE.XPLMCustomizeAvionics_t_structSize_set(swigCPtr, value);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      int ret = XPlaneWrappersPINVOKE.XPLMCustomizeAvionics_t_structSize_get(swigCPtr);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int deviceId {
    set {
      XPlaneWrappersPINVOKE.XPLMCustomizeAvionics_t_deviceId_set(swigCPtr, value);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      int ret = XPlaneWrappersPINVOKE.XPLMCustomizeAvionics_t_deviceId_get(swigCPtr);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_f_int_int_p_void__int drawCallbackBefore {
    set {
      XPlaneWrappersPINVOKE.XPLMCustomizeAvionics_t_drawCallbackBefore_set(swigCPtr, SWIGTYPE_p_f_int_int_p_void__int.getCPtr(value));
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      global::System.IntPtr cPtr = XPlaneWrappersPINVOKE.XPLMCustomizeAvionics_t_drawCallbackBefore_get(swigCPtr);
      SWIGTYPE_p_f_int_int_p_void__int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_int_int_p_void__int(cPtr, false);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_f_int_int_p_void__int drawCallbackAfter {
    set {
      XPlaneWrappersPINVOKE.XPLMCustomizeAvionics_t_drawCallbackAfter_set(swigCPtr, SWIGTYPE_p_f_int_int_p_void__int.getCPtr(value));
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      global::System.IntPtr cPtr = XPlaneWrappersPINVOKE.XPLMCustomizeAvionics_t_drawCallbackAfter_get(swigCPtr);
      SWIGTYPE_p_f_int_int_p_void__int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_int_int_p_void__int(cPtr, false);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_f_int_int_int_p_void__int bezelClickCallback {
    set {
      XPlaneWrappersPINVOKE.XPLMCustomizeAvionics_t_bezelClickCallback_set(swigCPtr, SWIGTYPE_p_f_int_int_int_p_void__int.getCPtr(value));
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      global::System.IntPtr cPtr = XPlaneWrappersPINVOKE.XPLMCustomizeAvionics_t_bezelClickCallback_get(swigCPtr);
      SWIGTYPE_p_f_int_int_int_p_void__int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_int_int_int_p_void__int(cPtr, false);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_f_int_int_int_p_void__int bezelRightClickCallback {
    set {
      XPlaneWrappersPINVOKE.XPLMCustomizeAvionics_t_bezelRightClickCallback_set(swigCPtr, SWIGTYPE_p_f_int_int_int_p_void__int.getCPtr(value));
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      global::System.IntPtr cPtr = XPlaneWrappersPINVOKE.XPLMCustomizeAvionics_t_bezelRightClickCallback_get(swigCPtr);
      SWIGTYPE_p_f_int_int_int_p_void__int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_int_int_int_p_void__int(cPtr, false);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_f_int_int_int_int_p_void__int bezelScrollCallback {
    set {
      XPlaneWrappersPINVOKE.XPLMCustomizeAvionics_t_bezelScrollCallback_set(swigCPtr, SWIGTYPE_p_f_int_int_int_int_p_void__int.getCPtr(value));
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      global::System.IntPtr cPtr = XPlaneWrappersPINVOKE.XPLMCustomizeAvionics_t_bezelScrollCallback_get(swigCPtr);
      SWIGTYPE_p_f_int_int_int_int_p_void__int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_int_int_int_int_p_void__int(cPtr, false);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_f_int_int_p_void__int bezelCursorCallback {
    set {
      XPlaneWrappersPINVOKE.XPLMCustomizeAvionics_t_bezelCursorCallback_set(swigCPtr, SWIGTYPE_p_f_int_int_p_void__int.getCPtr(value));
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      global::System.IntPtr cPtr = XPlaneWrappersPINVOKE.XPLMCustomizeAvionics_t_bezelCursorCallback_get(swigCPtr);
      SWIGTYPE_p_f_int_int_p_void__int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_int_int_p_void__int(cPtr, false);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_f_int_int_int_p_void__int screenTouchCallback {
    set {
      XPlaneWrappersPINVOKE.XPLMCustomizeAvionics_t_screenTouchCallback_set(swigCPtr, SWIGTYPE_p_f_int_int_int_p_void__int.getCPtr(value));
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      global::System.IntPtr cPtr = XPlaneWrappersPINVOKE.XPLMCustomizeAvionics_t_screenTouchCallback_get(swigCPtr);
      SWIGTYPE_p_f_int_int_int_p_void__int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_int_int_int_p_void__int(cPtr, false);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_f_int_int_int_p_void__int screenRightTouchCallback {
    set {
      XPlaneWrappersPINVOKE.XPLMCustomizeAvionics_t_screenRightTouchCallback_set(swigCPtr, SWIGTYPE_p_f_int_int_int_p_void__int.getCPtr(value));
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      global::System.IntPtr cPtr = XPlaneWrappersPINVOKE.XPLMCustomizeAvionics_t_screenRightTouchCallback_get(swigCPtr);
      SWIGTYPE_p_f_int_int_int_p_void__int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_int_int_int_p_void__int(cPtr, false);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_f_int_int_int_int_p_void__int screenScrollCallback {
    set {
      XPlaneWrappersPINVOKE.XPLMCustomizeAvionics_t_screenScrollCallback_set(swigCPtr, SWIGTYPE_p_f_int_int_int_int_p_void__int.getCPtr(value));
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      global::System.IntPtr cPtr = XPlaneWrappersPINVOKE.XPLMCustomizeAvionics_t_screenScrollCallback_get(swigCPtr);
      SWIGTYPE_p_f_int_int_int_int_p_void__int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_int_int_int_int_p_void__int(cPtr, false);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_f_int_int_p_void__int screenCursorCallback {
    set {
      XPlaneWrappersPINVOKE.XPLMCustomizeAvionics_t_screenCursorCallback_set(swigCPtr, SWIGTYPE_p_f_int_int_p_void__int.getCPtr(value));
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      global::System.IntPtr cPtr = XPlaneWrappersPINVOKE.XPLMCustomizeAvionics_t_screenCursorCallback_get(swigCPtr);
      SWIGTYPE_p_f_int_int_p_void__int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_int_int_p_void__int(cPtr, false);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_f_char_int_char_p_void_int__int keyboardCallback {
    set {
      XPlaneWrappersPINVOKE.XPLMCustomizeAvionics_t_keyboardCallback_set(swigCPtr, SWIGTYPE_p_f_char_int_char_p_void_int__int.getCPtr(value));
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      global::System.IntPtr cPtr = XPlaneWrappersPINVOKE.XPLMCustomizeAvionics_t_keyboardCallback_get(swigCPtr);
      SWIGTYPE_p_f_char_int_char_p_void_int__int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_char_int_char_p_void_int__int(cPtr, false);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_void refcon {
    set {
      XPlaneWrappersPINVOKE.XPLMCustomizeAvionics_t_refcon_set(swigCPtr, SWIGTYPE_p_void.getCPtr(value));
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      global::System.IntPtr cPtr = XPlaneWrappersPINVOKE.XPLMCustomizeAvionics_t_refcon_get(swigCPtr);
      SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
      if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public XPLMCustomizeAvionics_t() : this(XPlaneWrappersPINVOKE.new_XPLMCustomizeAvionics_t(), true) {
    if (XPlaneWrappersPINVOKE.SWIGPendingException.Pending) throw XPlaneWrappersPINVOKE.SWIGPendingException.Retrieve();
  }

}

}
