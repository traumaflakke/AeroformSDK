/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


#define SWIG_VERSION 0x040201
#define SWIGCSHARP

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif

#if defined(__cplusplus) && __cplusplus >=201103L
# define SWIG_NULLPTR nullptr
#else
# define SWIG_NULLPTR NULL
#endif 

/* -----------------------------------------------------------------------------
 * swigcompat.swg
 *
 * Macros to provide support compatibility with older C and C++ standards.
 * ----------------------------------------------------------------------------- */

/* C99 and C++11 should provide snprintf, but define SWIG_NO_SNPRINTF
 * if you're missing it.
 */
#if ((defined __STDC_VERSION__ && __STDC_VERSION__ >= 199901L) || \
     (defined __cplusplus && __cplusplus >= 201103L) || \
     defined SWIG_HAVE_SNPRINTF) && \
    !defined SWIG_NO_SNPRINTF
# define SWIG_snprintf(O,S,F,A) snprintf(O,S,F,A)
# define SWIG_snprintf2(O,S,F,A,B) snprintf(O,S,F,A,B)
#else
/* Fallback versions ignore the buffer size, but most of our uses either have a
 * fixed maximum possible size or dynamically allocate a buffer that's large
 * enough.
 */
# define SWIG_snprintf(O,S,F,A) sprintf(O,F,A)
# define SWIG_snprintf2(O,S,F,A,B) sprintf(O,F,A,B)
#endif


#include <stdlib.h>
#include <string.h>
#include <stdio.h>]

#include <aeroform_common.h>

/* Support for throwing C# exceptions from C/C++. There are two types: 
 * Exceptions that take a message and ArgumentExceptions that take a message and a parameter name. */
typedef enum {
  SWIG_CSharpApplicationException,
  SWIG_CSharpArithmeticException,
  SWIG_CSharpDivideByZeroException,
  SWIG_CSharpIndexOutOfRangeException,
  SWIG_CSharpInvalidCastException,
  SWIG_CSharpInvalidOperationException,
  SWIG_CSharpIOException,
  SWIG_CSharpNullReferenceException,
  SWIG_CSharpOutOfMemoryException,
  SWIG_CSharpOverflowException,
  SWIG_CSharpSystemException
} SWIG_CSharpExceptionCodes;

typedef enum {
  SWIG_CSharpArgumentException,
  SWIG_CSharpArgumentNullException,
  SWIG_CSharpArgumentOutOfRangeException
} SWIG_CSharpExceptionArgumentCodes;

typedef void (SWIGSTDCALL* SWIG_CSharpExceptionCallback_t)(const char *);
typedef void (SWIGSTDCALL* SWIG_CSharpExceptionArgumentCallback_t)(const char *, const char *);

typedef struct {
  SWIG_CSharpExceptionCodes code;
  SWIG_CSharpExceptionCallback_t callback;
} SWIG_CSharpException_t;

typedef struct {
  SWIG_CSharpExceptionArgumentCodes code;
  SWIG_CSharpExceptionArgumentCallback_t callback;
} SWIG_CSharpExceptionArgument_t;

static SWIG_CSharpException_t SWIG_csharp_exceptions[] = {
  { SWIG_CSharpApplicationException, NULL },
  { SWIG_CSharpArithmeticException, NULL },
  { SWIG_CSharpDivideByZeroException, NULL },
  { SWIG_CSharpIndexOutOfRangeException, NULL },
  { SWIG_CSharpInvalidCastException, NULL },
  { SWIG_CSharpInvalidOperationException, NULL },
  { SWIG_CSharpIOException, NULL },
  { SWIG_CSharpNullReferenceException, NULL },
  { SWIG_CSharpOutOfMemoryException, NULL },
  { SWIG_CSharpOverflowException, NULL },
  { SWIG_CSharpSystemException, NULL }
};

static SWIG_CSharpExceptionArgument_t SWIG_csharp_exceptions_argument[] = {
  { SWIG_CSharpArgumentException, NULL },
  { SWIG_CSharpArgumentNullException, NULL },
  { SWIG_CSharpArgumentOutOfRangeException, NULL }
};

static void SWIGUNUSED SWIG_CSharpSetPendingException(SWIG_CSharpExceptionCodes code, const char *msg) {
  SWIG_CSharpExceptionCallback_t callback = SWIG_csharp_exceptions[SWIG_CSharpApplicationException].callback;
  if ((size_t)code < sizeof(SWIG_csharp_exceptions)/sizeof(SWIG_CSharpException_t)) {
    callback = SWIG_csharp_exceptions[code].callback;
  }
  callback(msg);
}

static void SWIGUNUSED SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpExceptionArgumentCodes code, const char *msg, const char *param_name) {
  SWIG_CSharpExceptionArgumentCallback_t callback = SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentException].callback;
  if ((size_t)code < sizeof(SWIG_csharp_exceptions_argument)/sizeof(SWIG_CSharpExceptionArgument_t)) {
    callback = SWIG_csharp_exceptions_argument[code].callback;
  }
  callback(msg, param_name);
}


#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterExceptionCallbacks_XPlaneWrappers(
                                                SWIG_CSharpExceptionCallback_t applicationCallback,
                                                SWIG_CSharpExceptionCallback_t arithmeticCallback,
                                                SWIG_CSharpExceptionCallback_t divideByZeroCallback, 
                                                SWIG_CSharpExceptionCallback_t indexOutOfRangeCallback, 
                                                SWIG_CSharpExceptionCallback_t invalidCastCallback,
                                                SWIG_CSharpExceptionCallback_t invalidOperationCallback,
                                                SWIG_CSharpExceptionCallback_t ioCallback,
                                                SWIG_CSharpExceptionCallback_t nullReferenceCallback,
                                                SWIG_CSharpExceptionCallback_t outOfMemoryCallback, 
                                                SWIG_CSharpExceptionCallback_t overflowCallback, 
                                                SWIG_CSharpExceptionCallback_t systemCallback) {
  SWIG_csharp_exceptions[SWIG_CSharpApplicationException].callback = applicationCallback;
  SWIG_csharp_exceptions[SWIG_CSharpArithmeticException].callback = arithmeticCallback;
  SWIG_csharp_exceptions[SWIG_CSharpDivideByZeroException].callback = divideByZeroCallback;
  SWIG_csharp_exceptions[SWIG_CSharpIndexOutOfRangeException].callback = indexOutOfRangeCallback;
  SWIG_csharp_exceptions[SWIG_CSharpInvalidCastException].callback = invalidCastCallback;
  SWIG_csharp_exceptions[SWIG_CSharpInvalidOperationException].callback = invalidOperationCallback;
  SWIG_csharp_exceptions[SWIG_CSharpIOException].callback = ioCallback;
  SWIG_csharp_exceptions[SWIG_CSharpNullReferenceException].callback = nullReferenceCallback;
  SWIG_csharp_exceptions[SWIG_CSharpOutOfMemoryException].callback = outOfMemoryCallback;
  SWIG_csharp_exceptions[SWIG_CSharpOverflowException].callback = overflowCallback;
  SWIG_csharp_exceptions[SWIG_CSharpSystemException].callback = systemCallback;
}

#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterExceptionArgumentCallbacks_XPlaneWrappers(
                                                SWIG_CSharpExceptionArgumentCallback_t argumentCallback,
                                                SWIG_CSharpExceptionArgumentCallback_t argumentNullCallback,
                                                SWIG_CSharpExceptionArgumentCallback_t argumentOutOfRangeCallback) {
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentException].callback = argumentCallback;
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentNullException].callback = argumentNullCallback;
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentOutOfRangeException].callback = argumentOutOfRangeCallback;
}


/* Callback for returning strings to C# without leaking memory */
typedef char * (SWIGSTDCALL* SWIG_CSharpStringHelperCallback)(const char *);
static SWIG_CSharpStringHelperCallback SWIG_csharp_string_callback = NULL;


#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterStringCallback_XPlaneWrappers(SWIG_CSharpStringHelperCallback callback) {
  SWIG_csharp_string_callback = callback;
}


/* Contract support */

#define SWIG_contract_assert(nullreturn, expr, msg) do { if (!(expr)) {SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, msg, ""); return nullreturn; } } while (0)

/* SWIG Errors applicable to all language modules, values are reserved from -1 to -99 */
#define  SWIG_UnknownError    	   -1
#define  SWIG_IOError        	   -2
#define  SWIG_RuntimeError   	   -3
#define  SWIG_IndexError     	   -4
#define  SWIG_TypeError      	   -5
#define  SWIG_DivisionByZero 	   -6
#define  SWIG_OverflowError  	   -7
#define  SWIG_SyntaxError    	   -8
#define  SWIG_ValueError     	   -9
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12
#define  SWIG_NullReferenceError   -13



#ifdef __cplusplus
#include <utility>
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigSmartPointer {
    T *ptr;
    SwigSmartPointer(T *p) : ptr(p) { }
    ~SwigSmartPointer() { delete ptr; }
    SwigSmartPointer& operator=(SwigSmartPointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
    void reset(T *p) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = p; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigSmartPointer tmp(new T(t)); pointer = tmp; return *this; }
#if __cplusplus >=201103L
  SwigValueWrapper& operator=(T&& t) { SwigSmartPointer tmp(new T(std::move(t))); pointer = tmp; return *this; }
  operator T&&() const { return std::move(*pointer.ptr); }
#else
  operator T&() const { return *pointer.ptr; }
#endif
  T *operator&() const { return pointer.ptr; }
  static void reset(SwigValueWrapper& t, T *p) { t.pointer.reset(p); }
};

/*
 * SwigValueInit() is a generic initialisation solution as the following approach:
 * 
 *       T c_result = T();
 * 
 * doesn't compile for all types for example:
 * 
 *       unsigned int c_result = unsigned int();
 */
template <typename T> T SwigValueInit() {
  return T();
}

#if __cplusplus >=201103L
# define SWIG_STD_MOVE(OBJ) std::move(OBJ)
#else
# define SWIG_STD_MOVE(OBJ) OBJ
#endif

#endif


#include <stdexcept>


SWIGINTERN void SWIG_CSharpException(int code, const char *msg) {
  if (code == SWIG_ValueError) {
    SWIG_CSharpExceptionArgumentCodes exception_code = SWIG_CSharpArgumentOutOfRangeException;
    SWIG_CSharpSetPendingExceptionArgument(exception_code, msg, 0);
  } else {
    SWIG_CSharpExceptionCodes exception_code = SWIG_CSharpApplicationException;
    switch(code) {
    case SWIG_MemoryError:
      exception_code = SWIG_CSharpOutOfMemoryException;
      break;
    case SWIG_IndexError:
      exception_code = SWIG_CSharpIndexOutOfRangeException;
      break;
    case SWIG_DivisionByZero:
      exception_code = SWIG_CSharpDivideByZeroException;
      break;
    case SWIG_IOError:
      exception_code = SWIG_CSharpIOException;
      break;
    case SWIG_OverflowError:
      exception_code = SWIG_CSharpOverflowException;
      break;
    case SWIG_RuntimeError:
    case SWIG_TypeError:
    case SWIG_SyntaxError:
    case SWIG_SystemError:
    case SWIG_UnknownError:
    default:
      exception_code = SWIG_CSharpApplicationException;
      break;
    }
    SWIG_CSharpSetPendingException(exception_code, msg);
  }
}


#include <typeinfo>
#include <stdexcept>


#include "XPLM/XPLMDefs.h"
#include "XPLM/XPLMPlugin.h"
#include "XPLM/XPLMPlanes.h"
#include "XPLM/XPLMSound.h"
#include "XPLM/XPLMDataAccess.h"
#include "XPLM/XPLMNavigation.h"
#include "XPLM/XPLMGraphics.h"
#include "XPLM/XPLMInstance.h"
#include "XPLM/XPLMDisplay.h"
#include "XPLM/XPLMProcessing.h"
#include "XPLM/XPLMUtilities.h"
#include "XPLM/XPLMMenus.h"
#include "XPLM/XPLMWeather.h"
#include "XPLM/XPLMCamera.h"
#include "XPLM/XPLMMap.h"
#include "XPLM/XPLMScenery.h"
#include "Widgets/XPWidgetDefs.h"
#include "Widgets/XPStandardWidgets.h"
#include "Widgets/XPWidgetUtils.h"
#include "Widgets/XPWidgets.h"
#include "Widgets/XPUIGraphics.h"
#include "Wrappers/XPCWidgetAttachments.h"
#include "Wrappers/XPCListener.h"
#include "Wrappers/XPCWidget.h"
#include "Wrappers/XPCProcessing.h"
#include "Wrappers/XPCBroadcaster.h"
#include "Wrappers/XPCDisplay.h"


#include <string.h>


#ifdef __cplusplus
extern "C" {
#endif

SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings___APPLE___get___() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM200_get___() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM210_get___() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM300_get___() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM301_get___() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM302_get___() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM303_get___() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM400_get___() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM410_get___() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_AEROFORM_PLUGIN_NAME_get___() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)("Aeroform Bridge");
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_AEROFORM_PLUGIN_SIG_get___() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)("aeroform.plugin.bridge");
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_AEROFORM_PLUGIN_DESC_get___() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)("Aeroform Bridge for X-Plane");
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_AEROFORM_VERSION_get___() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)("0.0.1");
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_AEROFORM_AUTHOR_get___() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)("@traumaflakke");
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_APL_get___() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_IBM_get___() {
  int jresult ;
  int result;
  
  result = (int)(0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_LIN_get___() {
  int jresult ;
  int result;
  
  result = (int)(0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_AEROFORM_PLUGIN_FILENAME_get___() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)("mac.xpl");
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_AEROFORM_BRIDGE_LIB_FILENAME_get___() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)("Aeroform.dll");
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_NO_PLUGIN_ID_get___() {
  int jresult ;
  int result;
  
  result = (int)((-1));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_PLUGIN_XPLANE_get___() {
  int jresult ;
  int result;
  
  result = (int)((0));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_kXPLM_Version_get___() {
  int jresult ;
  int result;
  
  result = (int)((410));
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_ShiftFlag_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_ShiftFlag;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_OptionAltFlag_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_OptionAltFlag;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_ControlFlag_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_ControlFlag;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_DownFlag_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_DownFlag;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_UpFlag_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_UpFlag;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_KEY_RETURN_get___() {
  int jresult ;
  int result;
  
  result = (int)(13);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_KEY_ESCAPE_get___() {
  int jresult ;
  int result;
  
  result = (int)(27);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_KEY_TAB_get___() {
  int jresult ;
  int result;
  
  result = (int)(9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_KEY_DELETE_get___() {
  int jresult ;
  int result;
  
  result = (int)(8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_KEY_LEFT_get___() {
  int jresult ;
  int result;
  
  result = (int)(28);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_KEY_RIGHT_get___() {
  int jresult ;
  int result;
  
  result = (int)(29);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_KEY_UP_get___() {
  int jresult ;
  int result;
  
  result = (int)(30);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_KEY_DOWN_get___() {
  int jresult ;
  int result;
  
  result = (int)(31);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_KEY_0_get___() {
  int jresult ;
  int result;
  
  result = (int)(48);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_KEY_1_get___() {
  int jresult ;
  int result;
  
  result = (int)(49);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_KEY_2_get___() {
  int jresult ;
  int result;
  
  result = (int)(50);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_KEY_3_get___() {
  int jresult ;
  int result;
  
  result = (int)(51);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_KEY_4_get___() {
  int jresult ;
  int result;
  
  result = (int)(52);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_KEY_5_get___() {
  int jresult ;
  int result;
  
  result = (int)(53);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_KEY_6_get___() {
  int jresult ;
  int result;
  
  result = (int)(54);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_KEY_7_get___() {
  int jresult ;
  int result;
  
  result = (int)(55);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_KEY_8_get___() {
  int jresult ;
  int result;
  
  result = (int)(56);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_KEY_9_get___() {
  int jresult ;
  int result;
  
  result = (int)(57);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_KEY_DECIMAL_get___() {
  int jresult ;
  int result;
  
  result = (int)(46);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_BACK_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x08);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_TAB_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x09);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_CLEAR_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x0C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_RETURN_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x0D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_ESCAPE_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x1B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_SPACE_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x20);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_PRIOR_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x21);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_NEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x22);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_END_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x23);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_HOME_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x24);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_LEFT_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x25);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_UP_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x26);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_RIGHT_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x27);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_DOWN_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x28);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_SELECT_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x29);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_PRINT_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x2A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_EXECUTE_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x2B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_SNAPSHOT_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x2C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_INSERT_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x2D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_DELETE_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x2E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_HELP_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x2F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_0_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x30);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_1_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x31);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_2_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x32);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_3_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x33);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_4_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x34);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_5_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x35);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_6_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x36);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_7_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x37);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_8_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x38);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_9_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x39);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_A_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x41);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_B_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x42);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_C_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x43);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_D_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x44);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_E_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x45);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_F_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x46);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_G_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x47);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_H_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x48);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_I_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x49);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_J_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x4A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_K_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x4B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_L_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x4C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_M_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x4D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_N_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x4E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_O_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x4F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_P_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x50);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_Q_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x51);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_R_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x52);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_S_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x53);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_T_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x54);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_U_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x55);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_V_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x56);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_W_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x57);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_X_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x58);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_Y_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x59);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_Z_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x5A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_NUMPAD0_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x60);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_NUMPAD1_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x61);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_NUMPAD2_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x62);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_NUMPAD3_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x63);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_NUMPAD4_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x64);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_NUMPAD5_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x65);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_NUMPAD6_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x66);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_NUMPAD7_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x67);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_NUMPAD8_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x68);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_NUMPAD9_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x69);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_MULTIPLY_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x6A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_ADD_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x6B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_SEPARATOR_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x6C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_SUBTRACT_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x6D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_DECIMAL_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x6E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_DIVIDE_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x6F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_F1_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x70);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_F2_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x71);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_F3_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x72);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_F4_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x73);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_F5_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x74);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_F6_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x75);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_F7_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x76);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_F8_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x77);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_F9_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x78);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_F10_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x79);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_F11_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x7A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_F12_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x7B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_F13_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x7C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_F14_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x7D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_F15_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x7E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_F16_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x7F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_F17_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x80);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_F18_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x81);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_F19_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x82);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_F20_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x83);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_F21_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x84);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_F22_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x85);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_F23_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x86);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_F24_get___() {
  int jresult ;
  int result;
  
  result = (int)(0x87);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_EQUAL_get___() {
  int jresult ;
  int result;
  
  result = (int)(0xB0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_MINUS_get___() {
  int jresult ;
  int result;
  
  result = (int)(0xB1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_RBRACE_get___() {
  int jresult ;
  int result;
  
  result = (int)(0xB2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_LBRACE_get___() {
  int jresult ;
  int result;
  
  result = (int)(0xB3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_QUOTE_get___() {
  int jresult ;
  int result;
  
  result = (int)(0xB4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_SEMICOLON_get___() {
  int jresult ;
  int result;
  
  result = (int)(0xB5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_BACKSLASH_get___() {
  int jresult ;
  int result;
  
  result = (int)(0xB6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_COMMA_get___() {
  int jresult ;
  int result;
  
  result = (int)(0xB7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_SLASH_get___() {
  int jresult ;
  int result;
  
  result = (int)(0xB8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_PERIOD_get___() {
  int jresult ;
  int result;
  
  result = (int)(0xB9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_BACKQUOTE_get___() {
  int jresult ;
  int result;
  
  result = (int)(0xBA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_ENTER_get___() {
  int jresult ;
  int result;
  
  result = (int)(0xBB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_NUMPAD_ENT_get___() {
  int jresult ;
  int result;
  
  result = (int)(0xBC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_VK_NUMPAD_EQ_get___() {
  int jresult ;
  int result;
  
  result = (int)(0xBD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMFixedString150_t_buffer_set___(void * jarg1, char * jarg2) {
  XPLMFixedString150_t *arg1 = (XPLMFixedString150_t *) 0 ;
  char *arg2 = (char *) (char *)0 ;
  
  arg1 = (XPLMFixedString150_t *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->buffer, (const char *)arg2, 150-1);
      arg1->buffer[150-1] = 0;
    } else {
      arg1->buffer[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMFixedString150_t_buffer_get___(void * jarg1) {
  char * jresult ;
  XPLMFixedString150_t *arg1 = (XPLMFixedString150_t *) 0 ;
  char *result = 0 ;
  
  arg1 = (XPLMFixedString150_t *)jarg1; 
  result = (char *)(char *) ((arg1)->buffer);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_new_XPLMFixedString150_t___() {
  void * jresult ;
  XPLMFixedString150_t *result = 0 ;
  
  {
    try {
      result = (XPLMFixedString150_t *)new XPLMFixedString150_t();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_delete_XPLMFixedString150_t___(void * jarg1) {
  XPLMFixedString150_t *arg1 = (XPLMFixedString150_t *) 0 ;
  
  arg1 = (XPLMFixedString150_t *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_CursorDefault_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_CursorDefault;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_CursorHidden_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_CursorHidden;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_CursorArrow_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_CursorArrow;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_CursorCustom_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_CursorCustom;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_MouseDown_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_MouseDown;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_MouseDrag_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_MouseDrag;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_MouseUp_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_MouseUp;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetMyID___() {
  int jresult ;
  XPLMPluginID result;
  
  {
    try {
      result = (XPLMPluginID)XPLMGetMyID();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCountPlugins___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)XPLMCountPlugins();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetNthPlugin___(int jarg1) {
  int jresult ;
  int arg1 ;
  XPLMPluginID result;
  
  arg1 = (int)jarg1; 
  {
    try {
      result = (XPLMPluginID)XPLMGetNthPlugin(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMFindPluginByPath___(char * jarg1) {
  int jresult ;
  char *arg1 = (char *) 0 ;
  XPLMPluginID result;
  
  arg1 = (char *)jarg1; 
  {
    try {
      result = (XPLMPluginID)XPLMFindPluginByPath((char const *)arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMFindPluginBySignature___(char * jarg1) {
  int jresult ;
  char *arg1 = (char *) 0 ;
  XPLMPluginID result;
  
  arg1 = (char *)jarg1; 
  {
    try {
      result = (XPLMPluginID)XPLMFindPluginBySignature((char const *)arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetPluginInfo___(int jarg1, char * jarg2, char * jarg3, char * jarg4, char * jarg5) {
  XPLMPluginID arg1 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  
  arg1 = (XPLMPluginID)jarg1; 
  arg2 = (char *)jarg2; 
  arg3 = (char *)jarg3; 
  arg4 = (char *)jarg4; 
  arg5 = (char *)jarg5; 
  {
    try {
      XPLMGetPluginInfo(arg1,arg2,arg3,arg4,arg5);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMIsPluginEnabled___(int jarg1) {
  int jresult ;
  XPLMPluginID arg1 ;
  int result;
  
  arg1 = (XPLMPluginID)jarg1; 
  {
    try {
      result = (int)XPLMIsPluginEnabled(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMEnablePlugin___(int jarg1) {
  int jresult ;
  XPLMPluginID arg1 ;
  int result;
  
  arg1 = (XPLMPluginID)jarg1; 
  {
    try {
      result = (int)XPLMEnablePlugin(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMDisablePlugin___(int jarg1) {
  XPLMPluginID arg1 ;
  
  arg1 = (XPLMPluginID)jarg1; 
  {
    try {
      XPLMDisablePlugin(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMReloadPlugins___() {
  {
    try {
      XPLMReloadPlugins();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_MSG_PLANE_CRASHED_get___() {
  int jresult ;
  int result;
  
  result = (int)(101);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_MSG_PLANE_LOADED_get___() {
  int jresult ;
  int result;
  
  result = (int)(102);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_MSG_AIRPORT_LOADED_get___() {
  int jresult ;
  int result;
  
  result = (int)(103);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_MSG_SCENERY_LOADED_get___() {
  int jresult ;
  int result;
  
  result = (int)(104);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_MSG_AIRPLANE_COUNT_CHANGED_get___() {
  int jresult ;
  int result;
  
  result = (int)(105);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_MSG_PLANE_UNLOADED_get___() {
  int jresult ;
  int result;
  
  result = (int)(106);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_MSG_WILL_WRITE_PREFS_get___() {
  int jresult ;
  int result;
  
  result = (int)(107);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_MSG_LIVERY_LOADED_get___() {
  int jresult ;
  int result;
  
  result = (int)(108);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_MSG_ENTERED_VR_get___() {
  int jresult ;
  int result;
  
  result = (int)(109);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_MSG_EXITING_VR_get___() {
  int jresult ;
  int result;
  
  result = (int)(110);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_MSG_RELEASE_PLANES_get___() {
  int jresult ;
  int result;
  
  result = (int)(111);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_MSG_FMOD_BANK_LOADED_get___() {
  int jresult ;
  int result;
  
  result = (int)(112);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_MSG_FMOD_BANK_UNLOADING_get___() {
  int jresult ;
  int result;
  
  result = (int)(113);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_MSG_DATAREFS_ADDED_get___() {
  int jresult ;
  int result;
  
  result = (int)(114);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSendMessageToPlugin___(int jarg1, int jarg2, void * jarg3) {
  XPLMPluginID arg1 ;
  int arg2 ;
  void *arg3 = (void *) 0 ;
  
  arg1 = (XPLMPluginID)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (void *)jarg3; 
  {
    try {
      XPLMSendMessageToPlugin(arg1,arg2,arg3);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMHasFeature___(char * jarg1) {
  int jresult ;
  char *arg1 = (char *) 0 ;
  int result;
  
  arg1 = (char *)jarg1; 
  {
    try {
      result = (int)XPLMHasFeature((char const *)arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMIsFeatureEnabled___(char * jarg1) {
  int jresult ;
  char *arg1 = (char *) 0 ;
  int result;
  
  arg1 = (char *)jarg1; 
  {
    try {
      result = (int)XPLMIsFeatureEnabled((char const *)arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMEnableFeature___(char * jarg1, int jarg2) {
  char *arg1 = (char *) 0 ;
  int arg2 ;
  
  arg1 = (char *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      XPLMEnableFeature((char const *)arg1,arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMEnumerateFeatures___(void * jarg1, void * jarg2) {
  XPLMFeatureEnumerator_f arg1 = (XPLMFeatureEnumerator_f) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = (XPLMFeatureEnumerator_f)jarg1; 
  arg2 = (void *)jarg2; 
  {
    try {
      XPLMEnumerateFeatures(arg1,arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSetUsersAircraft___(char * jarg1) {
  char *arg1 = (char *) 0 ;
  
  arg1 = (char *)jarg1; 
  {
    try {
      XPLMSetUsersAircraft((char const *)arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMPlaceUserAtAirport___(char * jarg1) {
  char *arg1 = (char *) 0 ;
  
  arg1 = (char *)jarg1; 
  {
    try {
      XPLMPlaceUserAtAirport((char const *)arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMPlaceUserAtLocation___(double jarg1, double jarg2, float jarg3, float jarg4, float jarg5) {
  double arg1 ;
  double arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  {
    try {
      XPLMPlaceUserAtLocation(arg1,arg2,arg3,arg4,arg5);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_USER_AIRCRAFT_get___() {
  int jresult ;
  int result;
  
  result = (int)(0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCountAircraft___(void * jarg1, void * jarg2, void * jarg3) {
  int *arg1 = (int *) 0 ;
  int *arg2 = (int *) 0 ;
  XPLMPluginID *arg3 = (XPLMPluginID *) 0 ;
  
  arg1 = (int *)jarg1; 
  arg2 = (int *)jarg2; 
  arg3 = (XPLMPluginID *)jarg3; 
  {
    try {
      XPLMCountAircraft(arg1,arg2,arg3);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetNthAircraftModel___(int jarg1, char * jarg2, char * jarg3) {
  int arg1 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (char *)jarg2; 
  arg3 = (char *)jarg3; 
  {
    try {
      XPLMGetNthAircraftModel(arg1,arg2,arg3);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMAcquirePlanes___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  char **arg1 = (char **) 0 ;
  XPLMPlanesAvailable_f arg2 = (XPLMPlanesAvailable_f) 0 ;
  void *arg3 = (void *) 0 ;
  int result;
  
  arg1 = (char **)jarg1; 
  arg2 = (XPLMPlanesAvailable_f)jarg2; 
  arg3 = (void *)jarg3; 
  {
    try {
      result = (int)XPLMAcquirePlanes(arg1,arg2,arg3);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMReleasePlanes___() {
  {
    try {
      XPLMReleasePlanes();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSetActiveAircraftCount___(int jarg1) {
  int arg1 ;
  
  arg1 = (int)jarg1; 
  {
    try {
      XPLMSetActiveAircraftCount(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSetAircraftModel___(int jarg1, char * jarg2) {
  int arg1 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (char *)jarg2; 
  {
    try {
      XPLMSetAircraftModel(arg1,(char const *)arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMDisableAIForPlane___(int jarg1) {
  int arg1 ;
  
  arg1 = (int)jarg1; 
  {
    try {
      XPLMDisableAIForPlane(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_AudioRadioCom1_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_AudioRadioCom1;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_AudioRadioCom2_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_AudioRadioCom2;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_AudioRadioPilot_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_AudioRadioPilot;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_AudioRadioCopilot_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_AudioRadioCopilot;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_AudioExteriorAircraft_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_AudioExteriorAircraft;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_AudioExteriorEnvironment_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_AudioExteriorEnvironment;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_AudioExteriorUnprocessed_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_AudioExteriorUnprocessed;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_AudioInterior_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_AudioInterior;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_AudioUI_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_AudioUI;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_AudioGround_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_AudioGround;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Master_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Master;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_MasterBank_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_MasterBank;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_RadioBank_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_RadioBank;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_FMOD_VECTOR_x_set___(void * jarg1, float jarg2) {
  FMOD_VECTOR *arg1 = (FMOD_VECTOR *) 0 ;
  float arg2 ;
  
  arg1 = (FMOD_VECTOR *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->x = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_FMOD_VECTOR_x_get___(void * jarg1) {
  float jresult ;
  FMOD_VECTOR *arg1 = (FMOD_VECTOR *) 0 ;
  float result;
  
  arg1 = (FMOD_VECTOR *)jarg1; 
  result = (float) ((arg1)->x);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_FMOD_VECTOR_y_set___(void * jarg1, float jarg2) {
  FMOD_VECTOR *arg1 = (FMOD_VECTOR *) 0 ;
  float arg2 ;
  
  arg1 = (FMOD_VECTOR *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->y = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_FMOD_VECTOR_y_get___(void * jarg1) {
  float jresult ;
  FMOD_VECTOR *arg1 = (FMOD_VECTOR *) 0 ;
  float result;
  
  arg1 = (FMOD_VECTOR *)jarg1; 
  result = (float) ((arg1)->y);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_FMOD_VECTOR_z_set___(void * jarg1, float jarg2) {
  FMOD_VECTOR *arg1 = (FMOD_VECTOR *) 0 ;
  float arg2 ;
  
  arg1 = (FMOD_VECTOR *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->z = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_FMOD_VECTOR_z_get___(void * jarg1) {
  float jresult ;
  FMOD_VECTOR *arg1 = (FMOD_VECTOR *) 0 ;
  float result;
  
  arg1 = (FMOD_VECTOR *)jarg1; 
  result = (float) ((arg1)->z);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_new_FMOD_VECTOR___() {
  void * jresult ;
  FMOD_VECTOR *result = 0 ;
  
  {
    try {
      result = (FMOD_VECTOR *)new FMOD_VECTOR();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_delete_FMOD_VECTOR___(void * jarg1) {
  FMOD_VECTOR *arg1 = (FMOD_VECTOR *) 0 ;
  
  arg1 = (FMOD_VECTOR *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMPlayPCMOnBus___(void * jarg1, void * jarg2, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7, void * jarg8, void * jarg9) {
  void * jresult ;
  void *arg1 = (void *) 0 ;
  uint32_t arg2 ;
  FMOD_SOUND_FORMAT arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  XPLMAudioBus arg7 ;
  XPLMPCMComplete_f arg8 = (XPLMPCMComplete_f) 0 ;
  void *arg9 = (void *) 0 ;
  uint32_t *argp2 ;
  FMOD_CHANNEL *result = 0 ;
  
  arg1 = (void *)jarg1; 
  argp2 = (uint32_t *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null uint32_t", 0);
    return 0;
  }
  arg2 = *argp2; 
  arg3 = (FMOD_SOUND_FORMAT)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (int)jarg6; 
  arg7 = (XPLMAudioBus)jarg7; 
  arg8 = (XPLMPCMComplete_f)jarg8; 
  arg9 = (void *)jarg9; 
  {
    try {
      result = (FMOD_CHANNEL *)XPLMPlayPCMOnBus(arg1,SWIG_STD_MOVE(arg2),arg3,arg4,arg5,arg6,arg7,arg8,arg9);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMStopAudio___(void * jarg1) {
  int jresult ;
  FMOD_CHANNEL *arg1 = (FMOD_CHANNEL *) 0 ;
  FMOD_RESULT result;
  
  arg1 = (FMOD_CHANNEL *)jarg1; 
  {
    try {
      result = (FMOD_RESULT)XPLMStopAudio(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSetAudioPosition___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  FMOD_CHANNEL *arg1 = (FMOD_CHANNEL *) 0 ;
  FMOD_VECTOR *arg2 = (FMOD_VECTOR *) 0 ;
  FMOD_VECTOR *arg3 = (FMOD_VECTOR *) 0 ;
  FMOD_RESULT result;
  
  arg1 = (FMOD_CHANNEL *)jarg1; 
  arg2 = (FMOD_VECTOR *)jarg2; 
  arg3 = (FMOD_VECTOR *)jarg3; 
  {
    try {
      result = (FMOD_RESULT)XPLMSetAudioPosition(arg1,arg2,arg3);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSetAudioFadeDistance___(void * jarg1, float jarg2, float jarg3) {
  int jresult ;
  FMOD_CHANNEL *arg1 = (FMOD_CHANNEL *) 0 ;
  float arg2 ;
  float arg3 ;
  FMOD_RESULT result;
  
  arg1 = (FMOD_CHANNEL *)jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  {
    try {
      result = (FMOD_RESULT)XPLMSetAudioFadeDistance(arg1,arg2,arg3);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSetAudioVolume___(void * jarg1, float jarg2) {
  int jresult ;
  FMOD_CHANNEL *arg1 = (FMOD_CHANNEL *) 0 ;
  float arg2 ;
  FMOD_RESULT result;
  
  arg1 = (FMOD_CHANNEL *)jarg1; 
  arg2 = (float)jarg2; 
  {
    try {
      result = (FMOD_RESULT)XPLMSetAudioVolume(arg1,arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSetAudioPitch___(void * jarg1, float jarg2) {
  int jresult ;
  FMOD_CHANNEL *arg1 = (FMOD_CHANNEL *) 0 ;
  float arg2 ;
  FMOD_RESULT result;
  
  arg1 = (FMOD_CHANNEL *)jarg1; 
  arg2 = (float)jarg2; 
  {
    try {
      result = (FMOD_RESULT)XPLMSetAudioPitch(arg1,arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSetAudioCone___(void * jarg1, float jarg2, float jarg3, float jarg4, void * jarg5) {
  int jresult ;
  FMOD_CHANNEL *arg1 = (FMOD_CHANNEL *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  FMOD_VECTOR *arg5 = (FMOD_VECTOR *) 0 ;
  FMOD_RESULT result;
  
  arg1 = (FMOD_CHANNEL *)jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = (float)jarg4; 
  arg5 = (FMOD_VECTOR *)jarg5; 
  {
    try {
      result = (FMOD_RESULT)XPLMSetAudioCone(arg1,arg2,arg3,arg4,arg5);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplmType_Unknown_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplmType_Unknown;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplmType_Int_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplmType_Int;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplmType_Float_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplmType_Float;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplmType_Double_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplmType_Double;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplmType_FloatArray_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplmType_FloatArray;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplmType_IntArray_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplmType_IntArray;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplmType_Data_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplmType_Data;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCountDataRefs___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)XPLMCountDataRefs();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetDataRefsByIndex___(int jarg1, int jarg2, void * jarg3) {
  int arg1 ;
  int arg2 ;
  XPLMDataRef *arg3 = (XPLMDataRef *) 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (XPLMDataRef *)jarg3; 
  {
    try {
      XPLMGetDataRefsByIndex(arg1,arg2,arg3);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMDataRefInfo_t_structSize_set___(void * jarg1, int jarg2) {
  XPLMDataRefInfo_t *arg1 = (XPLMDataRefInfo_t *) 0 ;
  int arg2 ;
  
  arg1 = (XPLMDataRefInfo_t *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->structSize = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMDataRefInfo_t_structSize_get___(void * jarg1) {
  int jresult ;
  XPLMDataRefInfo_t *arg1 = (XPLMDataRefInfo_t *) 0 ;
  int result;
  
  arg1 = (XPLMDataRefInfo_t *)jarg1; 
  result = (int) ((arg1)->structSize);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMDataRefInfo_t_name_set___(void * jarg1, char * jarg2) {
  XPLMDataRefInfo_t *arg1 = (XPLMDataRefInfo_t *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (XPLMDataRefInfo_t *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->name = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->name, (const char *)arg2);
    } else {
      arg1->name = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMDataRefInfo_t_name_get___(void * jarg1) {
  char * jresult ;
  XPLMDataRefInfo_t *arg1 = (XPLMDataRefInfo_t *) 0 ;
  char *result = 0 ;
  
  arg1 = (XPLMDataRefInfo_t *)jarg1; 
  result = (char *) ((arg1)->name);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMDataRefInfo_t_type_set___(void * jarg1, int jarg2) {
  XPLMDataRefInfo_t *arg1 = (XPLMDataRefInfo_t *) 0 ;
  XPLMDataTypeID arg2 ;
  
  arg1 = (XPLMDataRefInfo_t *)jarg1; 
  arg2 = (XPLMDataTypeID)jarg2; 
  if (arg1) (arg1)->type = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMDataRefInfo_t_type_get___(void * jarg1) {
  int jresult ;
  XPLMDataRefInfo_t *arg1 = (XPLMDataRefInfo_t *) 0 ;
  XPLMDataTypeID result;
  
  arg1 = (XPLMDataRefInfo_t *)jarg1; 
  result = (XPLMDataTypeID) ((arg1)->type);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMDataRefInfo_t_writable_set___(void * jarg1, int jarg2) {
  XPLMDataRefInfo_t *arg1 = (XPLMDataRefInfo_t *) 0 ;
  int arg2 ;
  
  arg1 = (XPLMDataRefInfo_t *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->writable = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMDataRefInfo_t_writable_get___(void * jarg1) {
  int jresult ;
  XPLMDataRefInfo_t *arg1 = (XPLMDataRefInfo_t *) 0 ;
  int result;
  
  arg1 = (XPLMDataRefInfo_t *)jarg1; 
  result = (int) ((arg1)->writable);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMDataRefInfo_t_owner_set___(void * jarg1, int jarg2) {
  XPLMDataRefInfo_t *arg1 = (XPLMDataRefInfo_t *) 0 ;
  XPLMPluginID arg2 ;
  
  arg1 = (XPLMDataRefInfo_t *)jarg1; 
  arg2 = (XPLMPluginID)jarg2; 
  if (arg1) (arg1)->owner = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMDataRefInfo_t_owner_get___(void * jarg1) {
  int jresult ;
  XPLMDataRefInfo_t *arg1 = (XPLMDataRefInfo_t *) 0 ;
  XPLMPluginID result;
  
  arg1 = (XPLMDataRefInfo_t *)jarg1; 
  result = (XPLMPluginID) ((arg1)->owner);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_new_XPLMDataRefInfo_t___() {
  void * jresult ;
  XPLMDataRefInfo_t *result = 0 ;
  
  {
    try {
      result = (XPLMDataRefInfo_t *)new XPLMDataRefInfo_t();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_delete_XPLMDataRefInfo_t___(void * jarg1) {
  XPLMDataRefInfo_t *arg1 = (XPLMDataRefInfo_t *) 0 ;
  
  arg1 = (XPLMDataRefInfo_t *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetDataRefInfo___(void * jarg1, void * jarg2) {
  XPLMDataRef arg1 = (XPLMDataRef) 0 ;
  XPLMDataRefInfo_t *arg2 = (XPLMDataRefInfo_t *) 0 ;
  
  arg1 = (XPLMDataRef)jarg1; 
  arg2 = (XPLMDataRefInfo_t *)jarg2; 
  {
    try {
      XPLMGetDataRefInfo(arg1,arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMFindDataRef___(char * jarg1) {
  void * jresult ;
  char *arg1 = (char *) 0 ;
  XPLMDataRef result;
  
  arg1 = (char *)jarg1; 
  {
    try {
      result = (XPLMDataRef)XPLMFindDataRef((char const *)arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCanWriteDataRef___(void * jarg1) {
  int jresult ;
  XPLMDataRef arg1 = (XPLMDataRef) 0 ;
  int result;
  
  arg1 = (XPLMDataRef)jarg1; 
  {
    try {
      result = (int)XPLMCanWriteDataRef(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMIsDataRefGood___(void * jarg1) {
  int jresult ;
  XPLMDataRef arg1 = (XPLMDataRef) 0 ;
  int result;
  
  arg1 = (XPLMDataRef)jarg1; 
  {
    try {
      result = (int)XPLMIsDataRefGood(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetDataRefTypes___(void * jarg1) {
  int jresult ;
  XPLMDataRef arg1 = (XPLMDataRef) 0 ;
  XPLMDataTypeID result;
  
  arg1 = (XPLMDataRef)jarg1; 
  {
    try {
      result = (XPLMDataTypeID)XPLMGetDataRefTypes(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetDatai___(void * jarg1) {
  int jresult ;
  XPLMDataRef arg1 = (XPLMDataRef) 0 ;
  int result;
  
  arg1 = (XPLMDataRef)jarg1; 
  {
    try {
      result = (int)XPLMGetDatai(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSetDatai___(void * jarg1, int jarg2) {
  XPLMDataRef arg1 = (XPLMDataRef) 0 ;
  int arg2 ;
  
  arg1 = (XPLMDataRef)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      XPLMSetDatai(arg1,arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetDataf___(void * jarg1) {
  float jresult ;
  XPLMDataRef arg1 = (XPLMDataRef) 0 ;
  float result;
  
  arg1 = (XPLMDataRef)jarg1; 
  {
    try {
      result = (float)XPLMGetDataf(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSetDataf___(void * jarg1, float jarg2) {
  XPLMDataRef arg1 = (XPLMDataRef) 0 ;
  float arg2 ;
  
  arg1 = (XPLMDataRef)jarg1; 
  arg2 = (float)jarg2; 
  {
    try {
      XPLMSetDataf(arg1,arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT double SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetDatad___(void * jarg1) {
  double jresult ;
  XPLMDataRef arg1 = (XPLMDataRef) 0 ;
  double result;
  
  arg1 = (XPLMDataRef)jarg1; 
  {
    try {
      result = (double)XPLMGetDatad(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSetDatad___(void * jarg1, double jarg2) {
  XPLMDataRef arg1 = (XPLMDataRef) 0 ;
  double arg2 ;
  
  arg1 = (XPLMDataRef)jarg1; 
  arg2 = (double)jarg2; 
  {
    try {
      XPLMSetDatad(arg1,arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetDatavi___(void * jarg1, void * jarg2, int jarg3, int jarg4) {
  int jresult ;
  XPLMDataRef arg1 = (XPLMDataRef) 0 ;
  int *arg2 = (int *) 0 ;
  int arg3 ;
  int arg4 ;
  int result;
  
  arg1 = (XPLMDataRef)jarg1; 
  arg2 = (int *)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      result = (int)XPLMGetDatavi(arg1,arg2,arg3,arg4);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSetDatavi___(void * jarg1, void * jarg2, int jarg3, int jarg4) {
  XPLMDataRef arg1 = (XPLMDataRef) 0 ;
  int *arg2 = (int *) 0 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = (XPLMDataRef)jarg1; 
  arg2 = (int *)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      XPLMSetDatavi(arg1,arg2,arg3,arg4);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetDatavf___(void * jarg1, void * jarg2, int jarg3, int jarg4) {
  int jresult ;
  XPLMDataRef arg1 = (XPLMDataRef) 0 ;
  float *arg2 = (float *) 0 ;
  int arg3 ;
  int arg4 ;
  int result;
  
  arg1 = (XPLMDataRef)jarg1; 
  arg2 = (float *)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      result = (int)XPLMGetDatavf(arg1,arg2,arg3,arg4);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSetDatavf___(void * jarg1, void * jarg2, int jarg3, int jarg4) {
  XPLMDataRef arg1 = (XPLMDataRef) 0 ;
  float *arg2 = (float *) 0 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = (XPLMDataRef)jarg1; 
  arg2 = (float *)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      XPLMSetDatavf(arg1,arg2,arg3,arg4);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetDatab___(void * jarg1, void * jarg2, int jarg3, int jarg4) {
  int jresult ;
  XPLMDataRef arg1 = (XPLMDataRef) 0 ;
  void *arg2 = (void *) 0 ;
  int arg3 ;
  int arg4 ;
  int result;
  
  arg1 = (XPLMDataRef)jarg1; 
  arg2 = (void *)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      result = (int)XPLMGetDatab(arg1,arg2,arg3,arg4);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSetDatab___(void * jarg1, void * jarg2, int jarg3, int jarg4) {
  XPLMDataRef arg1 = (XPLMDataRef) 0 ;
  void *arg2 = (void *) 0 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = (XPLMDataRef)jarg1; 
  arg2 = (void *)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      XPLMSetDatab(arg1,arg2,arg3,arg4);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMRegisterDataAccessor___(char * jarg1, int jarg2, int jarg3, void * jarg4, void * jarg5, void * jarg6, void * jarg7, void * jarg8, void * jarg9, void * jarg10, void * jarg11, void * jarg12, void * jarg13, void * jarg14, void * jarg15, void * jarg16, void * jarg17) {
  void * jresult ;
  char *arg1 = (char *) 0 ;
  XPLMDataTypeID arg2 ;
  int arg3 ;
  XPLMGetDatai_f arg4 = (XPLMGetDatai_f) 0 ;
  XPLMSetDatai_f arg5 = (XPLMSetDatai_f) 0 ;
  XPLMGetDataf_f arg6 = (XPLMGetDataf_f) 0 ;
  XPLMSetDataf_f arg7 = (XPLMSetDataf_f) 0 ;
  XPLMGetDatad_f arg8 = (XPLMGetDatad_f) 0 ;
  XPLMSetDatad_f arg9 = (XPLMSetDatad_f) 0 ;
  XPLMGetDatavi_f arg10 = (XPLMGetDatavi_f) 0 ;
  XPLMSetDatavi_f arg11 = (XPLMSetDatavi_f) 0 ;
  XPLMGetDatavf_f arg12 = (XPLMGetDatavf_f) 0 ;
  XPLMSetDatavf_f arg13 = (XPLMSetDatavf_f) 0 ;
  XPLMGetDatab_f arg14 = (XPLMGetDatab_f) 0 ;
  XPLMSetDatab_f arg15 = (XPLMSetDatab_f) 0 ;
  void *arg16 = (void *) 0 ;
  void *arg17 = (void *) 0 ;
  XPLMDataRef result;
  
  arg1 = (char *)jarg1; 
  arg2 = (XPLMDataTypeID)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (XPLMGetDatai_f)jarg4; 
  arg5 = (XPLMSetDatai_f)jarg5; 
  arg6 = (XPLMGetDataf_f)jarg6; 
  arg7 = (XPLMSetDataf_f)jarg7; 
  arg8 = (XPLMGetDatad_f)jarg8; 
  arg9 = (XPLMSetDatad_f)jarg9; 
  arg10 = (XPLMGetDatavi_f)jarg10; 
  arg11 = (XPLMSetDatavi_f)jarg11; 
  arg12 = (XPLMGetDatavf_f)jarg12; 
  arg13 = (XPLMSetDatavf_f)jarg13; 
  arg14 = (XPLMGetDatab_f)jarg14; 
  arg15 = (XPLMSetDatab_f)jarg15; 
  arg16 = (void *)jarg16; 
  arg17 = (void *)jarg17; 
  {
    try {
      result = (XPLMDataRef)XPLMRegisterDataAccessor((char const *)arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMUnregisterDataAccessor___(void * jarg1) {
  XPLMDataRef arg1 = (XPLMDataRef) 0 ;
  
  arg1 = (XPLMDataRef)jarg1; 
  {
    try {
      XPLMUnregisterDataAccessor(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMShareData___(char * jarg1, int jarg2, void * jarg3, void * jarg4) {
  int jresult ;
  char *arg1 = (char *) 0 ;
  XPLMDataTypeID arg2 ;
  XPLMDataChanged_f arg3 = (XPLMDataChanged_f) 0 ;
  void *arg4 = (void *) 0 ;
  int result;
  
  arg1 = (char *)jarg1; 
  arg2 = (XPLMDataTypeID)jarg2; 
  arg3 = (XPLMDataChanged_f)jarg3; 
  arg4 = (void *)jarg4; 
  {
    try {
      result = (int)XPLMShareData((char const *)arg1,arg2,arg3,arg4);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMUnshareData___(char * jarg1, int jarg2, void * jarg3, void * jarg4) {
  int jresult ;
  char *arg1 = (char *) 0 ;
  XPLMDataTypeID arg2 ;
  XPLMDataChanged_f arg3 = (XPLMDataChanged_f) 0 ;
  void *arg4 = (void *) 0 ;
  int result;
  
  arg1 = (char *)jarg1; 
  arg2 = (XPLMDataTypeID)jarg2; 
  arg3 = (XPLMDataChanged_f)jarg3; 
  arg4 = (void *)jarg4; 
  {
    try {
      result = (int)XPLMUnshareData((char const *)arg1,arg2,arg3,arg4);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Nav_Unknown_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Nav_Unknown;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Nav_Airport_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Nav_Airport;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Nav_NDB_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Nav_NDB;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Nav_VOR_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Nav_VOR;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Nav_ILS_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Nav_ILS;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Nav_Localizer_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Nav_Localizer;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Nav_GlideSlope_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Nav_GlideSlope;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Nav_OuterMarker_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Nav_OuterMarker;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Nav_MiddleMarker_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Nav_MiddleMarker;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Nav_InnerMarker_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Nav_InnerMarker;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Nav_Fix_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Nav_Fix;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Nav_DME_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Nav_DME;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Nav_LatLon_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Nav_LatLon;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Nav_TACAN_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Nav_TACAN;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_NAV_NOT_FOUND_get___() {
  int jresult ;
  int result;
  
  result = (int)(-1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetFirstNavAid___() {
  int jresult ;
  XPLMNavRef result;
  
  {
    try {
      result = (XPLMNavRef)XPLMGetFirstNavAid();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetNextNavAid___(int jarg1) {
  int jresult ;
  XPLMNavRef arg1 ;
  XPLMNavRef result;
  
  arg1 = (XPLMNavRef)jarg1; 
  {
    try {
      result = (XPLMNavRef)XPLMGetNextNavAid(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMFindFirstNavAidOfType___(int jarg1) {
  int jresult ;
  XPLMNavType arg1 ;
  XPLMNavRef result;
  
  arg1 = (XPLMNavType)jarg1; 
  {
    try {
      result = (XPLMNavRef)XPLMFindFirstNavAidOfType(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMFindLastNavAidOfType___(int jarg1) {
  int jresult ;
  XPLMNavType arg1 ;
  XPLMNavRef result;
  
  arg1 = (XPLMNavType)jarg1; 
  {
    try {
      result = (XPLMNavRef)XPLMFindLastNavAidOfType(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMFindNavAid___(char * jarg1, char * jarg2, void * jarg3, void * jarg4, void * jarg5, int jarg6) {
  int jresult ;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  float *arg3 = (float *) 0 ;
  float *arg4 = (float *) 0 ;
  int *arg5 = (int *) 0 ;
  XPLMNavType arg6 ;
  XPLMNavRef result;
  
  arg1 = (char *)jarg1; 
  arg2 = (char *)jarg2; 
  arg3 = (float *)jarg3; 
  arg4 = (float *)jarg4; 
  arg5 = (int *)jarg5; 
  arg6 = (XPLMNavType)jarg6; 
  {
    try {
      result = (XPLMNavRef)XPLMFindNavAid((char const *)arg1,(char const *)arg2,arg3,arg4,arg5,arg6);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetNavAidInfo___(int jarg1, void * jarg2, void * jarg3, void * jarg4, void * jarg5, void * jarg6, void * jarg7, char * jarg8, char * jarg9, char * jarg10) {
  XPLMNavRef arg1 ;
  XPLMNavType *arg2 = (XPLMNavType *) 0 ;
  float *arg3 = (float *) 0 ;
  float *arg4 = (float *) 0 ;
  float *arg5 = (float *) 0 ;
  int *arg6 = (int *) 0 ;
  float *arg7 = (float *) 0 ;
  char *arg8 = (char *) 0 ;
  char *arg9 = (char *) 0 ;
  char *arg10 = (char *) 0 ;
  
  arg1 = (XPLMNavRef)jarg1; 
  arg2 = (XPLMNavType *)jarg2; 
  arg3 = (float *)jarg3; 
  arg4 = (float *)jarg4; 
  arg5 = (float *)jarg5; 
  arg6 = (int *)jarg6; 
  arg7 = (float *)jarg7; 
  arg8 = (char *)jarg8; 
  arg9 = (char *)jarg9; 
  arg10 = (char *)jarg10; 
  {
    try {
      XPLMGetNavAidInfo(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCountFMSEntries___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)XPLMCountFMSEntries();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetDisplayedFMSEntry___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)XPLMGetDisplayedFMSEntry();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetDestinationFMSEntry___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)XPLMGetDestinationFMSEntry();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSetDisplayedFMSEntry___(int jarg1) {
  int arg1 ;
  
  arg1 = (int)jarg1; 
  {
    try {
      XPLMSetDisplayedFMSEntry(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSetDestinationFMSEntry___(int jarg1) {
  int arg1 ;
  
  arg1 = (int)jarg1; 
  {
    try {
      XPLMSetDestinationFMSEntry(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetFMSEntryInfo___(int jarg1, void * jarg2, char * jarg3, void * jarg4, void * jarg5, void * jarg6, void * jarg7) {
  int arg1 ;
  XPLMNavType *arg2 = (XPLMNavType *) 0 ;
  char *arg3 = (char *) 0 ;
  XPLMNavRef *arg4 = (XPLMNavRef *) 0 ;
  int *arg5 = (int *) 0 ;
  float *arg6 = (float *) 0 ;
  float *arg7 = (float *) 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (XPLMNavType *)jarg2; 
  arg3 = (char *)jarg3; 
  arg4 = (XPLMNavRef *)jarg4; 
  arg5 = (int *)jarg5; 
  arg6 = (float *)jarg6; 
  arg7 = (float *)jarg7; 
  {
    try {
      XPLMGetFMSEntryInfo(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSetFMSEntryInfo___(int jarg1, int jarg2, int jarg3) {
  int arg1 ;
  XPLMNavRef arg2 ;
  int arg3 ;
  
  arg1 = (int)jarg1; 
  arg2 = (XPLMNavRef)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      XPLMSetFMSEntryInfo(arg1,arg2,arg3);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSetFMSEntryLatLon___(int jarg1, float jarg2, float jarg3, int jarg4) {
  int arg1 ;
  float arg2 ;
  float arg3 ;
  int arg4 ;
  
  arg1 = (int)jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      XPLMSetFMSEntryLatLon(arg1,arg2,arg3,arg4);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMClearFMSEntry___(int jarg1) {
  int arg1 ;
  
  arg1 = (int)jarg1; 
  {
    try {
      XPLMClearFMSEntry(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Fpl_Pilot_Primary_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Fpl_Pilot_Primary;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Fpl_CoPilot_Primary_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Fpl_CoPilot_Primary;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Fpl_Pilot_Approach_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Fpl_Pilot_Approach;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Fpl_CoPilot_Approach_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Fpl_CoPilot_Approach;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Fpl_Pilot_Temporary_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Fpl_Pilot_Temporary;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Fpl_CoPilot_Temporary_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Fpl_CoPilot_Temporary;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCountFMSFlightPlanEntries___(int jarg1) {
  int jresult ;
  XPLMNavFlightPlan arg1 ;
  int result;
  
  arg1 = (XPLMNavFlightPlan)jarg1; 
  {
    try {
      result = (int)XPLMCountFMSFlightPlanEntries(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetDisplayedFMSFlightPlanEntry___(int jarg1) {
  int jresult ;
  XPLMNavFlightPlan arg1 ;
  int result;
  
  arg1 = (XPLMNavFlightPlan)jarg1; 
  {
    try {
      result = (int)XPLMGetDisplayedFMSFlightPlanEntry(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetDestinationFMSFlightPlanEntry___(int jarg1) {
  int jresult ;
  XPLMNavFlightPlan arg1 ;
  int result;
  
  arg1 = (XPLMNavFlightPlan)jarg1; 
  {
    try {
      result = (int)XPLMGetDestinationFMSFlightPlanEntry(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSetDisplayedFMSFlightPlanEntry___(int jarg1, int jarg2) {
  XPLMNavFlightPlan arg1 ;
  int arg2 ;
  
  arg1 = (XPLMNavFlightPlan)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      XPLMSetDisplayedFMSFlightPlanEntry(arg1,arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSetDestinationFMSFlightPlanEntry___(int jarg1, int jarg2) {
  XPLMNavFlightPlan arg1 ;
  int arg2 ;
  
  arg1 = (XPLMNavFlightPlan)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      XPLMSetDestinationFMSFlightPlanEntry(arg1,arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSetDirectToFMSFlightPlanEntry___(int jarg1, int jarg2) {
  XPLMNavFlightPlan arg1 ;
  int arg2 ;
  
  arg1 = (XPLMNavFlightPlan)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      XPLMSetDirectToFMSFlightPlanEntry(arg1,arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetFMSFlightPlanEntryInfo___(int jarg1, int jarg2, void * jarg3, char * jarg4, void * jarg5, void * jarg6, void * jarg7, void * jarg8) {
  XPLMNavFlightPlan arg1 ;
  int arg2 ;
  XPLMNavType *arg3 = (XPLMNavType *) 0 ;
  char *arg4 = (char *) 0 ;
  XPLMNavRef *arg5 = (XPLMNavRef *) 0 ;
  int *arg6 = (int *) 0 ;
  float *arg7 = (float *) 0 ;
  float *arg8 = (float *) 0 ;
  
  arg1 = (XPLMNavFlightPlan)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (XPLMNavType *)jarg3; 
  arg4 = (char *)jarg4; 
  arg5 = (XPLMNavRef *)jarg5; 
  arg6 = (int *)jarg6; 
  arg7 = (float *)jarg7; 
  arg8 = (float *)jarg8; 
  {
    try {
      XPLMGetFMSFlightPlanEntryInfo(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSetFMSFlightPlanEntryInfo___(int jarg1, int jarg2, int jarg3, int jarg4) {
  XPLMNavFlightPlan arg1 ;
  int arg2 ;
  XPLMNavRef arg3 ;
  int arg4 ;
  
  arg1 = (XPLMNavFlightPlan)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (XPLMNavRef)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      XPLMSetFMSFlightPlanEntryInfo(arg1,arg2,arg3,arg4);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSetFMSFlightPlanEntryLatLon___(int jarg1, int jarg2, float jarg3, float jarg4, int jarg5) {
  XPLMNavFlightPlan arg1 ;
  int arg2 ;
  float arg3 ;
  float arg4 ;
  int arg5 ;
  
  arg1 = (XPLMNavFlightPlan)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = (float)jarg4; 
  arg5 = (int)jarg5; 
  {
    try {
      XPLMSetFMSFlightPlanEntryLatLon(arg1,arg2,arg3,arg4,arg5);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSetFMSFlightPlanEntryLatLonWithId___(int jarg1, int jarg2, float jarg3, float jarg4, int jarg5, char * jarg6, unsigned int jarg7) {
  XPLMNavFlightPlan arg1 ;
  int arg2 ;
  float arg3 ;
  float arg4 ;
  int arg5 ;
  char *arg6 = (char *) 0 ;
  unsigned int arg7 ;
  
  arg1 = (XPLMNavFlightPlan)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = (float)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (char *)jarg6; 
  arg7 = (unsigned int)jarg7; 
  {
    try {
      XPLMSetFMSFlightPlanEntryLatLonWithId(arg1,arg2,arg3,arg4,arg5,(char const *)arg6,arg7);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMClearFMSFlightPlanEntry___(int jarg1, int jarg2) {
  XPLMNavFlightPlan arg1 ;
  int arg2 ;
  
  arg1 = (XPLMNavFlightPlan)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      XPLMClearFMSFlightPlanEntry(arg1,arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMLoadFMSFlightPlan___(int jarg1, char * jarg2, unsigned int jarg3) {
  int arg1 ;
  char *arg2 = (char *) 0 ;
  unsigned int arg3 ;
  
  arg1 = (int)jarg1; 
  arg2 = (char *)jarg2; 
  arg3 = (unsigned int)jarg3; 
  {
    try {
      XPLMLoadFMSFlightPlan(arg1,(char const *)arg2,arg3);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSaveFMSFlightPlan___(int jarg1, char * jarg2, unsigned int jarg3) {
  unsigned int jresult ;
  int arg1 ;
  char *arg2 = (char *) 0 ;
  unsigned int arg3 ;
  unsigned int result;
  
  arg1 = (int)jarg1; 
  arg2 = (char *)jarg2; 
  arg3 = (unsigned int)jarg3; 
  {
    try {
      result = (unsigned int)XPLMSaveFMSFlightPlan(arg1,arg2,arg3);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetGPSDestinationType___() {
  int jresult ;
  XPLMNavType result;
  
  {
    try {
      result = (XPLMNavType)XPLMGetGPSDestinationType();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetGPSDestination___() {
  int jresult ;
  XPLMNavRef result;
  
  {
    try {
      result = (XPLMNavRef)XPLMGetGPSDestination();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Tex_GeneralInterface_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Tex_GeneralInterface;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSetGraphicsState___(int jarg1, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7) {
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (int)jarg6; 
  arg7 = (int)jarg7; 
  {
    try {
      XPLMSetGraphicsState(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMBindTexture2d___(int jarg1, int jarg2) {
  int arg1 ;
  int arg2 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      XPLMBindTexture2d(arg1,arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGenerateTextureNumbers___(void * jarg1, int jarg2) {
  int *arg1 = (int *) 0 ;
  int arg2 ;
  
  arg1 = (int *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      XPLMGenerateTextureNumbers(arg1,arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWorldToLocal___(double jarg1, double jarg2, double jarg3, void * jarg4, void * jarg5, void * jarg6) {
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double *arg4 = (double *) 0 ;
  double *arg5 = (double *) 0 ;
  double *arg6 = (double *) 0 ;
  
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double *)jarg4; 
  arg5 = (double *)jarg5; 
  arg6 = (double *)jarg6; 
  {
    try {
      XPLMWorldToLocal(arg1,arg2,arg3,arg4,arg5,arg6);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMLocalToWorld___(double jarg1, double jarg2, double jarg3, void * jarg4, void * jarg5, void * jarg6) {
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double *arg4 = (double *) 0 ;
  double *arg5 = (double *) 0 ;
  double *arg6 = (double *) 0 ;
  
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double *)jarg4; 
  arg5 = (double *)jarg5; 
  arg6 = (double *)jarg6; 
  {
    try {
      XPLMLocalToWorld(arg1,arg2,arg3,arg4,arg5,arg6);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMDrawTranslucentDarkBox___(int jarg1, int jarg2, int jarg3, int jarg4) {
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      XPLMDrawTranslucentDarkBox(arg1,arg2,arg3,arg4);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplmFont_Basic_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplmFont_Basic;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplmFont_Proportional_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplmFont_Proportional;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMDrawString___(void * jarg1, int jarg2, int jarg3, char * jarg4, void * jarg5, int jarg6) {
  float *arg1 = (float *) 0 ;
  int arg2 ;
  int arg3 ;
  char *arg4 = (char *) 0 ;
  int *arg5 = (int *) 0 ;
  XPLMFontID arg6 ;
  
  arg1 = (float *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (char *)jarg4; 
  arg5 = (int *)jarg5; 
  arg6 = (XPLMFontID)jarg6; 
  {
    try {
      XPLMDrawString(arg1,arg2,arg3,(char const *)arg4,arg5,arg6);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMDrawNumber___(void * jarg1, int jarg2, int jarg3, double jarg4, int jarg5, int jarg6, int jarg7, int jarg8) {
  float *arg1 = (float *) 0 ;
  int arg2 ;
  int arg3 ;
  double arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  XPLMFontID arg8 ;
  
  arg1 = (float *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (int)jarg6; 
  arg7 = (int)jarg7; 
  arg8 = (XPLMFontID)jarg8; 
  {
    try {
      XPLMDrawNumber(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetFontDimensions___(int jarg1, void * jarg2, void * jarg3, void * jarg4) {
  XPLMFontID arg1 ;
  int *arg2 = (int *) 0 ;
  int *arg3 = (int *) 0 ;
  int *arg4 = (int *) 0 ;
  
  arg1 = (XPLMFontID)jarg1; 
  arg2 = (int *)jarg2; 
  arg3 = (int *)jarg3; 
  arg4 = (int *)jarg4; 
  {
    try {
      XPLMGetFontDimensions(arg1,arg2,arg3,arg4);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMMeasureString___(int jarg1, char * jarg2, int jarg3) {
  float jresult ;
  XPLMFontID arg1 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  float result;
  
  arg1 = (XPLMFontID)jarg1; 
  arg2 = (char *)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      result = (float)XPLMMeasureString(arg1,(char const *)arg2,arg3);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateInstance___(void * jarg1, void * jarg2) {
  void * jresult ;
  XPLMObjectRef arg1 = (XPLMObjectRef) 0 ;
  char **arg2 = (char **) 0 ;
  XPLMInstanceRef result;
  
  arg1 = (XPLMObjectRef)jarg1; 
  arg2 = (char **)jarg2; 
  {
    try {
      result = (XPLMInstanceRef)XPLMCreateInstance(arg1,(char const **)arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMDestroyInstance___(void * jarg1) {
  XPLMInstanceRef arg1 = (XPLMInstanceRef) 0 ;
  
  arg1 = (XPLMInstanceRef)jarg1; 
  {
    try {
      XPLMDestroyInstance(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMInstanceSetPosition___(void * jarg1, void * jarg2, void * jarg3) {
  XPLMInstanceRef arg1 = (XPLMInstanceRef) 0 ;
  XPLMDrawInfo_t *arg2 = (XPLMDrawInfo_t *) 0 ;
  float *arg3 = (float *) 0 ;
  
  arg1 = (XPLMInstanceRef)jarg1; 
  arg2 = (XPLMDrawInfo_t *)jarg2; 
  arg3 = (float *)jarg3; 
  {
    try {
      XPLMInstanceSetPosition(arg1,(XPLMDrawInfo_t const *)arg2,(float const *)arg3);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Phase_Modern3D_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Phase_Modern3D;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Phase_FirstCockpit_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Phase_FirstCockpit;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Phase_Panel_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Phase_Panel;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Phase_Gauges_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Phase_Gauges;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Phase_Window_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Phase_Window;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Phase_LastCockpit_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Phase_LastCockpit;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Phase_LocalMap3D_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Phase_LocalMap3D;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Phase_LocalMap2D_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Phase_LocalMap2D;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Phase_LocalMapProfile_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Phase_LocalMapProfile;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMRegisterDrawCallback___(void * jarg1, int jarg2, int jarg3, void * jarg4) {
  int jresult ;
  XPLMDrawCallback_f arg1 = (XPLMDrawCallback_f) 0 ;
  XPLMDrawingPhase arg2 ;
  int arg3 ;
  void *arg4 = (void *) 0 ;
  int result;
  
  arg1 = (XPLMDrawCallback_f)jarg1; 
  arg2 = (XPLMDrawingPhase)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (void *)jarg4; 
  {
    try {
      result = (int)XPLMRegisterDrawCallback(arg1,arg2,arg3,arg4);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMUnregisterDrawCallback___(void * jarg1, int jarg2, int jarg3, void * jarg4) {
  int jresult ;
  XPLMDrawCallback_f arg1 = (XPLMDrawCallback_f) 0 ;
  XPLMDrawingPhase arg2 ;
  int arg3 ;
  void *arg4 = (void *) 0 ;
  int result;
  
  arg1 = (XPLMDrawCallback_f)jarg1; 
  arg2 = (XPLMDrawingPhase)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (void *)jarg4; 
  {
    try {
      result = (int)XPLMUnregisterDrawCallback(arg1,arg2,arg3,arg4);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_device_GNS430_1_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_device_GNS430_1;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_device_GNS430_2_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_device_GNS430_2;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_device_GNS530_1_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_device_GNS530_1;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_device_GNS530_2_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_device_GNS530_2;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_device_CDU739_1_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_device_CDU739_1;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_device_CDU739_2_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_device_CDU739_2;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_device_G1000_PFD_1_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_device_G1000_PFD_1;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_device_G1000_MFD_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_device_G1000_MFD;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_device_G1000_PFD_2_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_device_G1000_PFD_2;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_device_CDU815_1_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_device_CDU815_1;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_device_CDU815_2_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_device_CDU815_2;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_device_Primus_PFD_1_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_device_Primus_PFD_1;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_device_Primus_PFD_2_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_device_Primus_PFD_2;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_device_Primus_MFD_1_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_device_Primus_MFD_1;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_device_Primus_MFD_2_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_device_Primus_MFD_2;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_device_Primus_MFD_3_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_device_Primus_MFD_3;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_device_Primus_RMU_1_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_device_Primus_RMU_1;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_device_Primus_RMU_2_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_device_Primus_RMU_2;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCustomizeAvionics_t_structSize_set___(void * jarg1, int jarg2) {
  XPLMCustomizeAvionics_t *arg1 = (XPLMCustomizeAvionics_t *) 0 ;
  int arg2 ;
  
  arg1 = (XPLMCustomizeAvionics_t *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->structSize = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCustomizeAvionics_t_structSize_get___(void * jarg1) {
  int jresult ;
  XPLMCustomizeAvionics_t *arg1 = (XPLMCustomizeAvionics_t *) 0 ;
  int result;
  
  arg1 = (XPLMCustomizeAvionics_t *)jarg1; 
  result = (int) ((arg1)->structSize);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCustomizeAvionics_t_deviceId_set___(void * jarg1, int jarg2) {
  XPLMCustomizeAvionics_t *arg1 = (XPLMCustomizeAvionics_t *) 0 ;
  XPLMDeviceID arg2 ;
  
  arg1 = (XPLMCustomizeAvionics_t *)jarg1; 
  arg2 = (XPLMDeviceID)jarg2; 
  if (arg1) (arg1)->deviceId = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCustomizeAvionics_t_deviceId_get___(void * jarg1) {
  int jresult ;
  XPLMCustomizeAvionics_t *arg1 = (XPLMCustomizeAvionics_t *) 0 ;
  XPLMDeviceID result;
  
  arg1 = (XPLMCustomizeAvionics_t *)jarg1; 
  result = (XPLMDeviceID) ((arg1)->deviceId);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCustomizeAvionics_t_drawCallbackBefore_set___(void * jarg1, void * jarg2) {
  XPLMCustomizeAvionics_t *arg1 = (XPLMCustomizeAvionics_t *) 0 ;
  XPLMAvionicsCallback_f arg2 = (XPLMAvionicsCallback_f) 0 ;
  
  arg1 = (XPLMCustomizeAvionics_t *)jarg1; 
  arg2 = (XPLMAvionicsCallback_f)jarg2; 
  if (arg1) (arg1)->drawCallbackBefore = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCustomizeAvionics_t_drawCallbackBefore_get___(void * jarg1) {
  void * jresult ;
  XPLMCustomizeAvionics_t *arg1 = (XPLMCustomizeAvionics_t *) 0 ;
  XPLMAvionicsCallback_f result;
  
  arg1 = (XPLMCustomizeAvionics_t *)jarg1; 
  result = (XPLMAvionicsCallback_f) ((arg1)->drawCallbackBefore);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCustomizeAvionics_t_drawCallbackAfter_set___(void * jarg1, void * jarg2) {
  XPLMCustomizeAvionics_t *arg1 = (XPLMCustomizeAvionics_t *) 0 ;
  XPLMAvionicsCallback_f arg2 = (XPLMAvionicsCallback_f) 0 ;
  
  arg1 = (XPLMCustomizeAvionics_t *)jarg1; 
  arg2 = (XPLMAvionicsCallback_f)jarg2; 
  if (arg1) (arg1)->drawCallbackAfter = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCustomizeAvionics_t_drawCallbackAfter_get___(void * jarg1) {
  void * jresult ;
  XPLMCustomizeAvionics_t *arg1 = (XPLMCustomizeAvionics_t *) 0 ;
  XPLMAvionicsCallback_f result;
  
  arg1 = (XPLMCustomizeAvionics_t *)jarg1; 
  result = (XPLMAvionicsCallback_f) ((arg1)->drawCallbackAfter);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCustomizeAvionics_t_bezelClickCallback_set___(void * jarg1, void * jarg2) {
  XPLMCustomizeAvionics_t *arg1 = (XPLMCustomizeAvionics_t *) 0 ;
  XPLMAvionicsMouse_f arg2 = (XPLMAvionicsMouse_f) 0 ;
  
  arg1 = (XPLMCustomizeAvionics_t *)jarg1; 
  arg2 = (XPLMAvionicsMouse_f)jarg2; 
  if (arg1) (arg1)->bezelClickCallback = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCustomizeAvionics_t_bezelClickCallback_get___(void * jarg1) {
  void * jresult ;
  XPLMCustomizeAvionics_t *arg1 = (XPLMCustomizeAvionics_t *) 0 ;
  XPLMAvionicsMouse_f result;
  
  arg1 = (XPLMCustomizeAvionics_t *)jarg1; 
  result = (XPLMAvionicsMouse_f) ((arg1)->bezelClickCallback);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCustomizeAvionics_t_bezelRightClickCallback_set___(void * jarg1, void * jarg2) {
  XPLMCustomizeAvionics_t *arg1 = (XPLMCustomizeAvionics_t *) 0 ;
  XPLMAvionicsMouse_f arg2 = (XPLMAvionicsMouse_f) 0 ;
  
  arg1 = (XPLMCustomizeAvionics_t *)jarg1; 
  arg2 = (XPLMAvionicsMouse_f)jarg2; 
  if (arg1) (arg1)->bezelRightClickCallback = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCustomizeAvionics_t_bezelRightClickCallback_get___(void * jarg1) {
  void * jresult ;
  XPLMCustomizeAvionics_t *arg1 = (XPLMCustomizeAvionics_t *) 0 ;
  XPLMAvionicsMouse_f result;
  
  arg1 = (XPLMCustomizeAvionics_t *)jarg1; 
  result = (XPLMAvionicsMouse_f) ((arg1)->bezelRightClickCallback);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCustomizeAvionics_t_bezelScrollCallback_set___(void * jarg1, void * jarg2) {
  XPLMCustomizeAvionics_t *arg1 = (XPLMCustomizeAvionics_t *) 0 ;
  XPLMAvionicsMouseWheel_f arg2 = (XPLMAvionicsMouseWheel_f) 0 ;
  
  arg1 = (XPLMCustomizeAvionics_t *)jarg1; 
  arg2 = (XPLMAvionicsMouseWheel_f)jarg2; 
  if (arg1) (arg1)->bezelScrollCallback = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCustomizeAvionics_t_bezelScrollCallback_get___(void * jarg1) {
  void * jresult ;
  XPLMCustomizeAvionics_t *arg1 = (XPLMCustomizeAvionics_t *) 0 ;
  XPLMAvionicsMouseWheel_f result;
  
  arg1 = (XPLMCustomizeAvionics_t *)jarg1; 
  result = (XPLMAvionicsMouseWheel_f) ((arg1)->bezelScrollCallback);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCustomizeAvionics_t_bezelCursorCallback_set___(void * jarg1, void * jarg2) {
  XPLMCustomizeAvionics_t *arg1 = (XPLMCustomizeAvionics_t *) 0 ;
  XPLMAvionicsCursor_f arg2 = (XPLMAvionicsCursor_f) 0 ;
  
  arg1 = (XPLMCustomizeAvionics_t *)jarg1; 
  arg2 = (XPLMAvionicsCursor_f)jarg2; 
  if (arg1) (arg1)->bezelCursorCallback = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCustomizeAvionics_t_bezelCursorCallback_get___(void * jarg1) {
  void * jresult ;
  XPLMCustomizeAvionics_t *arg1 = (XPLMCustomizeAvionics_t *) 0 ;
  XPLMAvionicsCursor_f result;
  
  arg1 = (XPLMCustomizeAvionics_t *)jarg1; 
  result = (XPLMAvionicsCursor_f) ((arg1)->bezelCursorCallback);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCustomizeAvionics_t_screenTouchCallback_set___(void * jarg1, void * jarg2) {
  XPLMCustomizeAvionics_t *arg1 = (XPLMCustomizeAvionics_t *) 0 ;
  XPLMAvionicsMouse_f arg2 = (XPLMAvionicsMouse_f) 0 ;
  
  arg1 = (XPLMCustomizeAvionics_t *)jarg1; 
  arg2 = (XPLMAvionicsMouse_f)jarg2; 
  if (arg1) (arg1)->screenTouchCallback = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCustomizeAvionics_t_screenTouchCallback_get___(void * jarg1) {
  void * jresult ;
  XPLMCustomizeAvionics_t *arg1 = (XPLMCustomizeAvionics_t *) 0 ;
  XPLMAvionicsMouse_f result;
  
  arg1 = (XPLMCustomizeAvionics_t *)jarg1; 
  result = (XPLMAvionicsMouse_f) ((arg1)->screenTouchCallback);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCustomizeAvionics_t_screenRightTouchCallback_set___(void * jarg1, void * jarg2) {
  XPLMCustomizeAvionics_t *arg1 = (XPLMCustomizeAvionics_t *) 0 ;
  XPLMAvionicsMouse_f arg2 = (XPLMAvionicsMouse_f) 0 ;
  
  arg1 = (XPLMCustomizeAvionics_t *)jarg1; 
  arg2 = (XPLMAvionicsMouse_f)jarg2; 
  if (arg1) (arg1)->screenRightTouchCallback = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCustomizeAvionics_t_screenRightTouchCallback_get___(void * jarg1) {
  void * jresult ;
  XPLMCustomizeAvionics_t *arg1 = (XPLMCustomizeAvionics_t *) 0 ;
  XPLMAvionicsMouse_f result;
  
  arg1 = (XPLMCustomizeAvionics_t *)jarg1; 
  result = (XPLMAvionicsMouse_f) ((arg1)->screenRightTouchCallback);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCustomizeAvionics_t_screenScrollCallback_set___(void * jarg1, void * jarg2) {
  XPLMCustomizeAvionics_t *arg1 = (XPLMCustomizeAvionics_t *) 0 ;
  XPLMAvionicsMouseWheel_f arg2 = (XPLMAvionicsMouseWheel_f) 0 ;
  
  arg1 = (XPLMCustomizeAvionics_t *)jarg1; 
  arg2 = (XPLMAvionicsMouseWheel_f)jarg2; 
  if (arg1) (arg1)->screenScrollCallback = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCustomizeAvionics_t_screenScrollCallback_get___(void * jarg1) {
  void * jresult ;
  XPLMCustomizeAvionics_t *arg1 = (XPLMCustomizeAvionics_t *) 0 ;
  XPLMAvionicsMouseWheel_f result;
  
  arg1 = (XPLMCustomizeAvionics_t *)jarg1; 
  result = (XPLMAvionicsMouseWheel_f) ((arg1)->screenScrollCallback);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCustomizeAvionics_t_screenCursorCallback_set___(void * jarg1, void * jarg2) {
  XPLMCustomizeAvionics_t *arg1 = (XPLMCustomizeAvionics_t *) 0 ;
  XPLMAvionicsCursor_f arg2 = (XPLMAvionicsCursor_f) 0 ;
  
  arg1 = (XPLMCustomizeAvionics_t *)jarg1; 
  arg2 = (XPLMAvionicsCursor_f)jarg2; 
  if (arg1) (arg1)->screenCursorCallback = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCustomizeAvionics_t_screenCursorCallback_get___(void * jarg1) {
  void * jresult ;
  XPLMCustomizeAvionics_t *arg1 = (XPLMCustomizeAvionics_t *) 0 ;
  XPLMAvionicsCursor_f result;
  
  arg1 = (XPLMCustomizeAvionics_t *)jarg1; 
  result = (XPLMAvionicsCursor_f) ((arg1)->screenCursorCallback);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCustomizeAvionics_t_keyboardCallback_set___(void * jarg1, void * jarg2) {
  XPLMCustomizeAvionics_t *arg1 = (XPLMCustomizeAvionics_t *) 0 ;
  XPLMAvionicsKeyboard_f arg2 = (XPLMAvionicsKeyboard_f) 0 ;
  
  arg1 = (XPLMCustomizeAvionics_t *)jarg1; 
  arg2 = (XPLMAvionicsKeyboard_f)jarg2; 
  if (arg1) (arg1)->keyboardCallback = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCustomizeAvionics_t_keyboardCallback_get___(void * jarg1) {
  void * jresult ;
  XPLMCustomizeAvionics_t *arg1 = (XPLMCustomizeAvionics_t *) 0 ;
  XPLMAvionicsKeyboard_f result;
  
  arg1 = (XPLMCustomizeAvionics_t *)jarg1; 
  result = (XPLMAvionicsKeyboard_f) ((arg1)->keyboardCallback);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCustomizeAvionics_t_refcon_set___(void * jarg1, void * jarg2) {
  XPLMCustomizeAvionics_t *arg1 = (XPLMCustomizeAvionics_t *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = (XPLMCustomizeAvionics_t *)jarg1; 
  arg2 = (void *)jarg2; 
  if (arg1) (arg1)->refcon = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCustomizeAvionics_t_refcon_get___(void * jarg1) {
  void * jresult ;
  XPLMCustomizeAvionics_t *arg1 = (XPLMCustomizeAvionics_t *) 0 ;
  void *result = 0 ;
  
  arg1 = (XPLMCustomizeAvionics_t *)jarg1; 
  result = (void *) ((arg1)->refcon);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_new_XPLMCustomizeAvionics_t___() {
  void * jresult ;
  XPLMCustomizeAvionics_t *result = 0 ;
  
  {
    try {
      result = (XPLMCustomizeAvionics_t *)new XPLMCustomizeAvionics_t();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_delete_XPLMCustomizeAvionics_t___(void * jarg1) {
  XPLMCustomizeAvionics_t *arg1 = (XPLMCustomizeAvionics_t *) 0 ;
  
  arg1 = (XPLMCustomizeAvionics_t *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMRegisterAvionicsCallbacksEx___(void * jarg1) {
  void * jresult ;
  XPLMCustomizeAvionics_t *arg1 = (XPLMCustomizeAvionics_t *) 0 ;
  XPLMAvionicsID result;
  
  arg1 = (XPLMCustomizeAvionics_t *)jarg1; 
  {
    try {
      result = (XPLMAvionicsID)XPLMRegisterAvionicsCallbacksEx(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetAvionicsHandle___(int jarg1) {
  void * jresult ;
  XPLMDeviceID arg1 ;
  XPLMAvionicsID result;
  
  arg1 = (XPLMDeviceID)jarg1; 
  {
    try {
      result = (XPLMAvionicsID)XPLMGetAvionicsHandle(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMUnregisterAvionicsCallbacks___(void * jarg1) {
  XPLMAvionicsID arg1 = (XPLMAvionicsID) 0 ;
  
  arg1 = (XPLMAvionicsID)jarg1; 
  {
    try {
      XPLMUnregisterAvionicsCallbacks(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_structSize_set___(void * jarg1, int jarg2) {
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  int arg2 ;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->structSize = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_structSize_get___(void * jarg1) {
  int jresult ;
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  int result;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  result = (int) ((arg1)->structSize);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_screenWidth_set___(void * jarg1, int jarg2) {
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  int arg2 ;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->screenWidth = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_screenWidth_get___(void * jarg1) {
  int jresult ;
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  int result;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  result = (int) ((arg1)->screenWidth);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_screenHeight_set___(void * jarg1, int jarg2) {
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  int arg2 ;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->screenHeight = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_screenHeight_get___(void * jarg1) {
  int jresult ;
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  int result;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  result = (int) ((arg1)->screenHeight);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_bezelWidth_set___(void * jarg1, int jarg2) {
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  int arg2 ;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->bezelWidth = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_bezelWidth_get___(void * jarg1) {
  int jresult ;
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  int result;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  result = (int) ((arg1)->bezelWidth);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_bezelHeight_set___(void * jarg1, int jarg2) {
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  int arg2 ;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->bezelHeight = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_bezelHeight_get___(void * jarg1) {
  int jresult ;
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  int result;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  result = (int) ((arg1)->bezelHeight);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_screenOffsetX_set___(void * jarg1, int jarg2) {
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  int arg2 ;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->screenOffsetX = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_screenOffsetX_get___(void * jarg1) {
  int jresult ;
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  int result;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  result = (int) ((arg1)->screenOffsetX);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_screenOffsetY_set___(void * jarg1, int jarg2) {
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  int arg2 ;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->screenOffsetY = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_screenOffsetY_get___(void * jarg1) {
  int jresult ;
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  int result;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  result = (int) ((arg1)->screenOffsetY);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_drawOnDemand_set___(void * jarg1, int jarg2) {
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  int arg2 ;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->drawOnDemand = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_drawOnDemand_get___(void * jarg1) {
  int jresult ;
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  int result;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  result = (int) ((arg1)->drawOnDemand);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_bezelDrawCallback_set___(void * jarg1, void * jarg2) {
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  XPLMAvionicsBezelCallback_f arg2 = (XPLMAvionicsBezelCallback_f) 0 ;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  arg2 = (XPLMAvionicsBezelCallback_f)jarg2; 
  if (arg1) (arg1)->bezelDrawCallback = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_bezelDrawCallback_get___(void * jarg1) {
  void * jresult ;
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  XPLMAvionicsBezelCallback_f result;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  result = (XPLMAvionicsBezelCallback_f) ((arg1)->bezelDrawCallback);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_drawCallback_set___(void * jarg1, void * jarg2) {
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  XPLMAvionicsScreenCallback_f arg2 = (XPLMAvionicsScreenCallback_f) 0 ;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  arg2 = (XPLMAvionicsScreenCallback_f)jarg2; 
  if (arg1) (arg1)->drawCallback = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_drawCallback_get___(void * jarg1) {
  void * jresult ;
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  XPLMAvionicsScreenCallback_f result;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  result = (XPLMAvionicsScreenCallback_f) ((arg1)->drawCallback);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_bezelClickCallback_set___(void * jarg1, void * jarg2) {
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  XPLMAvionicsMouse_f arg2 = (XPLMAvionicsMouse_f) 0 ;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  arg2 = (XPLMAvionicsMouse_f)jarg2; 
  if (arg1) (arg1)->bezelClickCallback = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_bezelClickCallback_get___(void * jarg1) {
  void * jresult ;
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  XPLMAvionicsMouse_f result;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  result = (XPLMAvionicsMouse_f) ((arg1)->bezelClickCallback);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_bezelRightClickCallback_set___(void * jarg1, void * jarg2) {
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  XPLMAvionicsMouse_f arg2 = (XPLMAvionicsMouse_f) 0 ;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  arg2 = (XPLMAvionicsMouse_f)jarg2; 
  if (arg1) (arg1)->bezelRightClickCallback = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_bezelRightClickCallback_get___(void * jarg1) {
  void * jresult ;
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  XPLMAvionicsMouse_f result;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  result = (XPLMAvionicsMouse_f) ((arg1)->bezelRightClickCallback);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_bezelScrollCallback_set___(void * jarg1, void * jarg2) {
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  XPLMAvionicsMouseWheel_f arg2 = (XPLMAvionicsMouseWheel_f) 0 ;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  arg2 = (XPLMAvionicsMouseWheel_f)jarg2; 
  if (arg1) (arg1)->bezelScrollCallback = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_bezelScrollCallback_get___(void * jarg1) {
  void * jresult ;
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  XPLMAvionicsMouseWheel_f result;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  result = (XPLMAvionicsMouseWheel_f) ((arg1)->bezelScrollCallback);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_bezelCursorCallback_set___(void * jarg1, void * jarg2) {
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  XPLMAvionicsCursor_f arg2 = (XPLMAvionicsCursor_f) 0 ;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  arg2 = (XPLMAvionicsCursor_f)jarg2; 
  if (arg1) (arg1)->bezelCursorCallback = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_bezelCursorCallback_get___(void * jarg1) {
  void * jresult ;
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  XPLMAvionicsCursor_f result;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  result = (XPLMAvionicsCursor_f) ((arg1)->bezelCursorCallback);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_screenTouchCallback_set___(void * jarg1, void * jarg2) {
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  XPLMAvionicsMouse_f arg2 = (XPLMAvionicsMouse_f) 0 ;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  arg2 = (XPLMAvionicsMouse_f)jarg2; 
  if (arg1) (arg1)->screenTouchCallback = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_screenTouchCallback_get___(void * jarg1) {
  void * jresult ;
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  XPLMAvionicsMouse_f result;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  result = (XPLMAvionicsMouse_f) ((arg1)->screenTouchCallback);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_screenRightTouchCallback_set___(void * jarg1, void * jarg2) {
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  XPLMAvionicsMouse_f arg2 = (XPLMAvionicsMouse_f) 0 ;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  arg2 = (XPLMAvionicsMouse_f)jarg2; 
  if (arg1) (arg1)->screenRightTouchCallback = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_screenRightTouchCallback_get___(void * jarg1) {
  void * jresult ;
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  XPLMAvionicsMouse_f result;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  result = (XPLMAvionicsMouse_f) ((arg1)->screenRightTouchCallback);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_screenScrollCallback_set___(void * jarg1, void * jarg2) {
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  XPLMAvionicsMouseWheel_f arg2 = (XPLMAvionicsMouseWheel_f) 0 ;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  arg2 = (XPLMAvionicsMouseWheel_f)jarg2; 
  if (arg1) (arg1)->screenScrollCallback = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_screenScrollCallback_get___(void * jarg1) {
  void * jresult ;
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  XPLMAvionicsMouseWheel_f result;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  result = (XPLMAvionicsMouseWheel_f) ((arg1)->screenScrollCallback);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_screenCursorCallback_set___(void * jarg1, void * jarg2) {
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  XPLMAvionicsCursor_f arg2 = (XPLMAvionicsCursor_f) 0 ;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  arg2 = (XPLMAvionicsCursor_f)jarg2; 
  if (arg1) (arg1)->screenCursorCallback = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_screenCursorCallback_get___(void * jarg1) {
  void * jresult ;
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  XPLMAvionicsCursor_f result;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  result = (XPLMAvionicsCursor_f) ((arg1)->screenCursorCallback);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_keyboardCallback_set___(void * jarg1, void * jarg2) {
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  XPLMAvionicsKeyboard_f arg2 = (XPLMAvionicsKeyboard_f) 0 ;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  arg2 = (XPLMAvionicsKeyboard_f)jarg2; 
  if (arg1) (arg1)->keyboardCallback = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_keyboardCallback_get___(void * jarg1) {
  void * jresult ;
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  XPLMAvionicsKeyboard_f result;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  result = (XPLMAvionicsKeyboard_f) ((arg1)->keyboardCallback);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_brightnessCallback_set___(void * jarg1, void * jarg2) {
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  XPLMAvionicsBrightness_f arg2 = (XPLMAvionicsBrightness_f) 0 ;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  arg2 = (XPLMAvionicsBrightness_f)jarg2; 
  if (arg1) (arg1)->brightnessCallback = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_brightnessCallback_get___(void * jarg1) {
  void * jresult ;
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  XPLMAvionicsBrightness_f result;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  result = (XPLMAvionicsBrightness_f) ((arg1)->brightnessCallback);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_deviceID_set___(void * jarg1, char * jarg2) {
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    delete [] arg1->deviceID;
    if (arg2) {
      arg1->deviceID = (char *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->deviceID, (const char *)arg2);
    } else {
      arg1->deviceID = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_deviceID_get___(void * jarg1) {
  char * jresult ;
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  char *result = 0 ;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  result = (char *) ((arg1)->deviceID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_deviceName_set___(void * jarg1, char * jarg2) {
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    delete [] arg1->deviceName;
    if (arg2) {
      arg1->deviceName = (char *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->deviceName, (const char *)arg2);
    } else {
      arg1->deviceName = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_deviceName_get___(void * jarg1) {
  char * jresult ;
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  char *result = 0 ;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  result = (char *) ((arg1)->deviceName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_refcon_set___(void * jarg1, void * jarg2) {
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  arg2 = (void *)jarg2; 
  if (arg1) (arg1)->refcon = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionics_t_refcon_get___(void * jarg1) {
  void * jresult ;
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  void *result = 0 ;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  result = (void *) ((arg1)->refcon);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_new_XPLMCreateAvionics_t___() {
  void * jresult ;
  XPLMCreateAvionics_t *result = 0 ;
  
  {
    try {
      result = (XPLMCreateAvionics_t *)new XPLMCreateAvionics_t();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_delete_XPLMCreateAvionics_t___(void * jarg1) {
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateAvionicsEx___(void * jarg1) {
  void * jresult ;
  XPLMCreateAvionics_t *arg1 = (XPLMCreateAvionics_t *) 0 ;
  XPLMAvionicsID result;
  
  arg1 = (XPLMCreateAvionics_t *)jarg1; 
  {
    try {
      result = (XPLMAvionicsID)XPLMCreateAvionicsEx(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMDestroyAvionics___(void * jarg1) {
  XPLMAvionicsID arg1 = (XPLMAvionicsID) 0 ;
  
  arg1 = (XPLMAvionicsID)jarg1; 
  {
    try {
      XPLMDestroyAvionics(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMIsAvionicsBound___(void * jarg1) {
  int jresult ;
  XPLMAvionicsID arg1 = (XPLMAvionicsID) 0 ;
  int result;
  
  arg1 = (XPLMAvionicsID)jarg1; 
  {
    try {
      result = (int)XPLMIsAvionicsBound(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSetAvionicsBrightnessRheo___(void * jarg1, float jarg2) {
  XPLMAvionicsID arg1 = (XPLMAvionicsID) 0 ;
  float arg2 ;
  
  arg1 = (XPLMAvionicsID)jarg1; 
  arg2 = (float)jarg2; 
  {
    try {
      XPLMSetAvionicsBrightnessRheo(arg1,arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetAvionicsBrightnessRheo___(void * jarg1) {
  float jresult ;
  XPLMAvionicsID arg1 = (XPLMAvionicsID) 0 ;
  float result;
  
  arg1 = (XPLMAvionicsID)jarg1; 
  {
    try {
      result = (float)XPLMGetAvionicsBrightnessRheo(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetAvionicsBusVoltsRatio___(void * jarg1) {
  float jresult ;
  XPLMAvionicsID arg1 = (XPLMAvionicsID) 0 ;
  float result;
  
  arg1 = (XPLMAvionicsID)jarg1; 
  {
    try {
      result = (float)XPLMGetAvionicsBusVoltsRatio(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMIsCursorOverAvionics___(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  XPLMAvionicsID arg1 = (XPLMAvionicsID) 0 ;
  int *arg2 = (int *) 0 ;
  int *arg3 = (int *) 0 ;
  int result;
  
  arg1 = (XPLMAvionicsID)jarg1; 
  arg2 = (int *)jarg2; 
  arg3 = (int *)jarg3; 
  {
    try {
      result = (int)XPLMIsCursorOverAvionics(arg1,arg2,arg3);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMAvionicsNeedsDrawing___(void * jarg1) {
  XPLMAvionicsID arg1 = (XPLMAvionicsID) 0 ;
  
  arg1 = (XPLMAvionicsID)jarg1; 
  {
    try {
      XPLMAvionicsNeedsDrawing(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSetAvionicsPopupVisible___(void * jarg1, int jarg2) {
  XPLMAvionicsID arg1 = (XPLMAvionicsID) 0 ;
  int arg2 ;
  
  arg1 = (XPLMAvionicsID)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      XPLMSetAvionicsPopupVisible(arg1,arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMIsAvionicsPopupVisible___(void * jarg1) {
  int jresult ;
  XPLMAvionicsID arg1 = (XPLMAvionicsID) 0 ;
  int result;
  
  arg1 = (XPLMAvionicsID)jarg1; 
  {
    try {
      result = (int)XPLMIsAvionicsPopupVisible(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMPopOutAvionics___(void * jarg1) {
  XPLMAvionicsID arg1 = (XPLMAvionicsID) 0 ;
  
  arg1 = (XPLMAvionicsID)jarg1; 
  {
    try {
      XPLMPopOutAvionics(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMIsAvionicsPoppedOut___(void * jarg1) {
  int jresult ;
  XPLMAvionicsID arg1 = (XPLMAvionicsID) 0 ;
  int result;
  
  arg1 = (XPLMAvionicsID)jarg1; 
  {
    try {
      result = (int)XPLMIsAvionicsPoppedOut(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMTakeAvionicsKeyboardFocus___(void * jarg1) {
  XPLMAvionicsID arg1 = (XPLMAvionicsID) 0 ;
  
  arg1 = (XPLMAvionicsID)jarg1; 
  {
    try {
      XPLMTakeAvionicsKeyboardFocus(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMHasAvionicsKeyboardFocus___(void * jarg1) {
  int jresult ;
  XPLMAvionicsID arg1 = (XPLMAvionicsID) 0 ;
  int result;
  
  arg1 = (XPLMAvionicsID)jarg1; 
  {
    try {
      result = (int)XPLMHasAvionicsKeyboardFocus(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetAvionicsGeometry___(void * jarg1, void * jarg2, void * jarg3, void * jarg4, void * jarg5) {
  XPLMAvionicsID arg1 = (XPLMAvionicsID) 0 ;
  int *arg2 = (int *) 0 ;
  int *arg3 = (int *) 0 ;
  int *arg4 = (int *) 0 ;
  int *arg5 = (int *) 0 ;
  
  arg1 = (XPLMAvionicsID)jarg1; 
  arg2 = (int *)jarg2; 
  arg3 = (int *)jarg3; 
  arg4 = (int *)jarg4; 
  arg5 = (int *)jarg5; 
  {
    try {
      XPLMGetAvionicsGeometry(arg1,arg2,arg3,arg4,arg5);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSetAvionicsGeometry___(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  XPLMAvionicsID arg1 = (XPLMAvionicsID) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  arg1 = (XPLMAvionicsID)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  {
    try {
      XPLMSetAvionicsGeometry(arg1,arg2,arg3,arg4,arg5);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetAvionicsGeometryOS___(void * jarg1, void * jarg2, void * jarg3, void * jarg4, void * jarg5) {
  XPLMAvionicsID arg1 = (XPLMAvionicsID) 0 ;
  int *arg2 = (int *) 0 ;
  int *arg3 = (int *) 0 ;
  int *arg4 = (int *) 0 ;
  int *arg5 = (int *) 0 ;
  
  arg1 = (XPLMAvionicsID)jarg1; 
  arg2 = (int *)jarg2; 
  arg3 = (int *)jarg3; 
  arg4 = (int *)jarg4; 
  arg5 = (int *)jarg5; 
  {
    try {
      XPLMGetAvionicsGeometryOS(arg1,arg2,arg3,arg4,arg5);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSetAvionicsGeometryOS___(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  XPLMAvionicsID arg1 = (XPLMAvionicsID) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  arg1 = (XPLMAvionicsID)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  {
    try {
      XPLMSetAvionicsGeometryOS(arg1,arg2,arg3,arg4,arg5);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_WindowLayerFlightOverlay_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_WindowLayerFlightOverlay;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_WindowLayerFloatingWindows_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_WindowLayerFloatingWindows;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_WindowLayerModal_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_WindowLayerModal;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_WindowLayerGrowlNotifications_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_WindowLayerGrowlNotifications;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_WindowDecorationNone_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_WindowDecorationNone;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_WindowDecorationRoundRectangle_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_WindowDecorationRoundRectangle;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_WindowDecorationSelfDecorated_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_WindowDecorationSelfDecorated;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_WindowDecorationSelfDecoratedResizable_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_WindowDecorationSelfDecoratedResizable;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateWindow_t_structSize_set___(void * jarg1, int jarg2) {
  XPLMCreateWindow_t *arg1 = (XPLMCreateWindow_t *) 0 ;
  int arg2 ;
  
  arg1 = (XPLMCreateWindow_t *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->structSize = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateWindow_t_structSize_get___(void * jarg1) {
  int jresult ;
  XPLMCreateWindow_t *arg1 = (XPLMCreateWindow_t *) 0 ;
  int result;
  
  arg1 = (XPLMCreateWindow_t *)jarg1; 
  result = (int) ((arg1)->structSize);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateWindow_t_left_set___(void * jarg1, int jarg2) {
  XPLMCreateWindow_t *arg1 = (XPLMCreateWindow_t *) 0 ;
  int arg2 ;
  
  arg1 = (XPLMCreateWindow_t *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->left = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateWindow_t_left_get___(void * jarg1) {
  int jresult ;
  XPLMCreateWindow_t *arg1 = (XPLMCreateWindow_t *) 0 ;
  int result;
  
  arg1 = (XPLMCreateWindow_t *)jarg1; 
  result = (int) ((arg1)->left);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateWindow_t_top_set___(void * jarg1, int jarg2) {
  XPLMCreateWindow_t *arg1 = (XPLMCreateWindow_t *) 0 ;
  int arg2 ;
  
  arg1 = (XPLMCreateWindow_t *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->top = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateWindow_t_top_get___(void * jarg1) {
  int jresult ;
  XPLMCreateWindow_t *arg1 = (XPLMCreateWindow_t *) 0 ;
  int result;
  
  arg1 = (XPLMCreateWindow_t *)jarg1; 
  result = (int) ((arg1)->top);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateWindow_t_right_set___(void * jarg1, int jarg2) {
  XPLMCreateWindow_t *arg1 = (XPLMCreateWindow_t *) 0 ;
  int arg2 ;
  
  arg1 = (XPLMCreateWindow_t *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->right = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateWindow_t_right_get___(void * jarg1) {
  int jresult ;
  XPLMCreateWindow_t *arg1 = (XPLMCreateWindow_t *) 0 ;
  int result;
  
  arg1 = (XPLMCreateWindow_t *)jarg1; 
  result = (int) ((arg1)->right);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateWindow_t_bottom_set___(void * jarg1, int jarg2) {
  XPLMCreateWindow_t *arg1 = (XPLMCreateWindow_t *) 0 ;
  int arg2 ;
  
  arg1 = (XPLMCreateWindow_t *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->bottom = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateWindow_t_bottom_get___(void * jarg1) {
  int jresult ;
  XPLMCreateWindow_t *arg1 = (XPLMCreateWindow_t *) 0 ;
  int result;
  
  arg1 = (XPLMCreateWindow_t *)jarg1; 
  result = (int) ((arg1)->bottom);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateWindow_t_visible_set___(void * jarg1, int jarg2) {
  XPLMCreateWindow_t *arg1 = (XPLMCreateWindow_t *) 0 ;
  int arg2 ;
  
  arg1 = (XPLMCreateWindow_t *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->visible = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateWindow_t_visible_get___(void * jarg1) {
  int jresult ;
  XPLMCreateWindow_t *arg1 = (XPLMCreateWindow_t *) 0 ;
  int result;
  
  arg1 = (XPLMCreateWindow_t *)jarg1; 
  result = (int) ((arg1)->visible);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateWindow_t_drawWindowFunc_set___(void * jarg1, void * jarg2) {
  XPLMCreateWindow_t *arg1 = (XPLMCreateWindow_t *) 0 ;
  XPLMDrawWindow_f arg2 = (XPLMDrawWindow_f) 0 ;
  
  arg1 = (XPLMCreateWindow_t *)jarg1; 
  arg2 = (XPLMDrawWindow_f)jarg2; 
  if (arg1) (arg1)->drawWindowFunc = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateWindow_t_drawWindowFunc_get___(void * jarg1) {
  void * jresult ;
  XPLMCreateWindow_t *arg1 = (XPLMCreateWindow_t *) 0 ;
  XPLMDrawWindow_f result;
  
  arg1 = (XPLMCreateWindow_t *)jarg1; 
  result = (XPLMDrawWindow_f) ((arg1)->drawWindowFunc);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateWindow_t_handleMouseClickFunc_set___(void * jarg1, void * jarg2) {
  XPLMCreateWindow_t *arg1 = (XPLMCreateWindow_t *) 0 ;
  XPLMHandleMouseClick_f arg2 = (XPLMHandleMouseClick_f) 0 ;
  
  arg1 = (XPLMCreateWindow_t *)jarg1; 
  arg2 = (XPLMHandleMouseClick_f)jarg2; 
  if (arg1) (arg1)->handleMouseClickFunc = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateWindow_t_handleMouseClickFunc_get___(void * jarg1) {
  void * jresult ;
  XPLMCreateWindow_t *arg1 = (XPLMCreateWindow_t *) 0 ;
  XPLMHandleMouseClick_f result;
  
  arg1 = (XPLMCreateWindow_t *)jarg1; 
  result = (XPLMHandleMouseClick_f) ((arg1)->handleMouseClickFunc);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateWindow_t_handleKeyFunc_set___(void * jarg1, void * jarg2) {
  XPLMCreateWindow_t *arg1 = (XPLMCreateWindow_t *) 0 ;
  XPLMHandleKey_f arg2 = (XPLMHandleKey_f) 0 ;
  
  arg1 = (XPLMCreateWindow_t *)jarg1; 
  arg2 = (XPLMHandleKey_f)jarg2; 
  if (arg1) (arg1)->handleKeyFunc = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateWindow_t_handleKeyFunc_get___(void * jarg1) {
  void * jresult ;
  XPLMCreateWindow_t *arg1 = (XPLMCreateWindow_t *) 0 ;
  XPLMHandleKey_f result;
  
  arg1 = (XPLMCreateWindow_t *)jarg1; 
  result = (XPLMHandleKey_f) ((arg1)->handleKeyFunc);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateWindow_t_handleCursorFunc_set___(void * jarg1, void * jarg2) {
  XPLMCreateWindow_t *arg1 = (XPLMCreateWindow_t *) 0 ;
  XPLMHandleCursor_f arg2 = (XPLMHandleCursor_f) 0 ;
  
  arg1 = (XPLMCreateWindow_t *)jarg1; 
  arg2 = (XPLMHandleCursor_f)jarg2; 
  if (arg1) (arg1)->handleCursorFunc = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateWindow_t_handleCursorFunc_get___(void * jarg1) {
  void * jresult ;
  XPLMCreateWindow_t *arg1 = (XPLMCreateWindow_t *) 0 ;
  XPLMHandleCursor_f result;
  
  arg1 = (XPLMCreateWindow_t *)jarg1; 
  result = (XPLMHandleCursor_f) ((arg1)->handleCursorFunc);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateWindow_t_handleMouseWheelFunc_set___(void * jarg1, void * jarg2) {
  XPLMCreateWindow_t *arg1 = (XPLMCreateWindow_t *) 0 ;
  XPLMHandleMouseWheel_f arg2 = (XPLMHandleMouseWheel_f) 0 ;
  
  arg1 = (XPLMCreateWindow_t *)jarg1; 
  arg2 = (XPLMHandleMouseWheel_f)jarg2; 
  if (arg1) (arg1)->handleMouseWheelFunc = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateWindow_t_handleMouseWheelFunc_get___(void * jarg1) {
  void * jresult ;
  XPLMCreateWindow_t *arg1 = (XPLMCreateWindow_t *) 0 ;
  XPLMHandleMouseWheel_f result;
  
  arg1 = (XPLMCreateWindow_t *)jarg1; 
  result = (XPLMHandleMouseWheel_f) ((arg1)->handleMouseWheelFunc);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateWindow_t_refcon_set___(void * jarg1, void * jarg2) {
  XPLMCreateWindow_t *arg1 = (XPLMCreateWindow_t *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = (XPLMCreateWindow_t *)jarg1; 
  arg2 = (void *)jarg2; 
  if (arg1) (arg1)->refcon = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateWindow_t_refcon_get___(void * jarg1) {
  void * jresult ;
  XPLMCreateWindow_t *arg1 = (XPLMCreateWindow_t *) 0 ;
  void *result = 0 ;
  
  arg1 = (XPLMCreateWindow_t *)jarg1; 
  result = (void *) ((arg1)->refcon);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateWindow_t_decorateAsFloatingWindow_set___(void * jarg1, int jarg2) {
  XPLMCreateWindow_t *arg1 = (XPLMCreateWindow_t *) 0 ;
  XPLMWindowDecoration arg2 ;
  
  arg1 = (XPLMCreateWindow_t *)jarg1; 
  arg2 = (XPLMWindowDecoration)jarg2; 
  if (arg1) (arg1)->decorateAsFloatingWindow = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateWindow_t_decorateAsFloatingWindow_get___(void * jarg1) {
  int jresult ;
  XPLMCreateWindow_t *arg1 = (XPLMCreateWindow_t *) 0 ;
  XPLMWindowDecoration result;
  
  arg1 = (XPLMCreateWindow_t *)jarg1; 
  result = (XPLMWindowDecoration) ((arg1)->decorateAsFloatingWindow);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateWindow_t_layer_set___(void * jarg1, int jarg2) {
  XPLMCreateWindow_t *arg1 = (XPLMCreateWindow_t *) 0 ;
  XPLMWindowLayer arg2 ;
  
  arg1 = (XPLMCreateWindow_t *)jarg1; 
  arg2 = (XPLMWindowLayer)jarg2; 
  if (arg1) (arg1)->layer = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateWindow_t_layer_get___(void * jarg1) {
  int jresult ;
  XPLMCreateWindow_t *arg1 = (XPLMCreateWindow_t *) 0 ;
  XPLMWindowLayer result;
  
  arg1 = (XPLMCreateWindow_t *)jarg1; 
  result = (XPLMWindowLayer) ((arg1)->layer);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateWindow_t_handleRightClickFunc_set___(void * jarg1, void * jarg2) {
  XPLMCreateWindow_t *arg1 = (XPLMCreateWindow_t *) 0 ;
  XPLMHandleMouseClick_f arg2 = (XPLMHandleMouseClick_f) 0 ;
  
  arg1 = (XPLMCreateWindow_t *)jarg1; 
  arg2 = (XPLMHandleMouseClick_f)jarg2; 
  if (arg1) (arg1)->handleRightClickFunc = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateWindow_t_handleRightClickFunc_get___(void * jarg1) {
  void * jresult ;
  XPLMCreateWindow_t *arg1 = (XPLMCreateWindow_t *) 0 ;
  XPLMHandleMouseClick_f result;
  
  arg1 = (XPLMCreateWindow_t *)jarg1; 
  result = (XPLMHandleMouseClick_f) ((arg1)->handleRightClickFunc);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_new_XPLMCreateWindow_t___() {
  void * jresult ;
  XPLMCreateWindow_t *result = 0 ;
  
  {
    try {
      result = (XPLMCreateWindow_t *)new XPLMCreateWindow_t();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_delete_XPLMCreateWindow_t___(void * jarg1) {
  XPLMCreateWindow_t *arg1 = (XPLMCreateWindow_t *) 0 ;
  
  arg1 = (XPLMCreateWindow_t *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateWindowEx___(void * jarg1) {
  void * jresult ;
  XPLMCreateWindow_t *arg1 = (XPLMCreateWindow_t *) 0 ;
  XPLMWindowID result;
  
  arg1 = (XPLMCreateWindow_t *)jarg1; 
  {
    try {
      result = (XPLMWindowID)XPLMCreateWindowEx(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateWindow___(int jarg1, int jarg2, int jarg3, int jarg4, int jarg5, void * jarg6, void * jarg7, void * jarg8, void * jarg9) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  XPLMDrawWindow_f arg6 = (XPLMDrawWindow_f) 0 ;
  XPLMHandleKey_f arg7 = (XPLMHandleKey_f) 0 ;
  XPLMHandleMouseClick_f arg8 = (XPLMHandleMouseClick_f) 0 ;
  void *arg9 = (void *) 0 ;
  XPLMWindowID result;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (XPLMDrawWindow_f)jarg6; 
  arg7 = (XPLMHandleKey_f)jarg7; 
  arg8 = (XPLMHandleMouseClick_f)jarg8; 
  arg9 = (void *)jarg9; 
  {
    try {
      result = (XPLMWindowID)XPLMCreateWindow(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMDestroyWindow___(void * jarg1) {
  XPLMWindowID arg1 = (XPLMWindowID) 0 ;
  
  arg1 = (XPLMWindowID)jarg1; 
  {
    try {
      XPLMDestroyWindow(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetScreenSize___(void * jarg1, void * jarg2) {
  int *arg1 = (int *) 0 ;
  int *arg2 = (int *) 0 ;
  
  arg1 = (int *)jarg1; 
  arg2 = (int *)jarg2; 
  {
    try {
      XPLMGetScreenSize(arg1,arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetScreenBoundsGlobal___(void * jarg1, void * jarg2, void * jarg3, void * jarg4) {
  int *arg1 = (int *) 0 ;
  int *arg2 = (int *) 0 ;
  int *arg3 = (int *) 0 ;
  int *arg4 = (int *) 0 ;
  
  arg1 = (int *)jarg1; 
  arg2 = (int *)jarg2; 
  arg3 = (int *)jarg3; 
  arg4 = (int *)jarg4; 
  {
    try {
      XPLMGetScreenBoundsGlobal(arg1,arg2,arg3,arg4);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetAllMonitorBoundsGlobal___(void * jarg1, void * jarg2) {
  XPLMReceiveMonitorBoundsGlobal_f arg1 = (XPLMReceiveMonitorBoundsGlobal_f) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = (XPLMReceiveMonitorBoundsGlobal_f)jarg1; 
  arg2 = (void *)jarg2; 
  {
    try {
      XPLMGetAllMonitorBoundsGlobal(arg1,arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetAllMonitorBoundsOS___(void * jarg1, void * jarg2) {
  XPLMReceiveMonitorBoundsOS_f arg1 = (XPLMReceiveMonitorBoundsOS_f) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = (XPLMReceiveMonitorBoundsOS_f)jarg1; 
  arg2 = (void *)jarg2; 
  {
    try {
      XPLMGetAllMonitorBoundsOS(arg1,arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetMouseLocation___(void * jarg1, void * jarg2) {
  int *arg1 = (int *) 0 ;
  int *arg2 = (int *) 0 ;
  
  arg1 = (int *)jarg1; 
  arg2 = (int *)jarg2; 
  {
    try {
      XPLMGetMouseLocation(arg1,arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetMouseLocationGlobal___(void * jarg1, void * jarg2) {
  int *arg1 = (int *) 0 ;
  int *arg2 = (int *) 0 ;
  
  arg1 = (int *)jarg1; 
  arg2 = (int *)jarg2; 
  {
    try {
      XPLMGetMouseLocationGlobal(arg1,arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetWindowGeometry___(void * jarg1, void * jarg2, void * jarg3, void * jarg4, void * jarg5) {
  XPLMWindowID arg1 = (XPLMWindowID) 0 ;
  int *arg2 = (int *) 0 ;
  int *arg3 = (int *) 0 ;
  int *arg4 = (int *) 0 ;
  int *arg5 = (int *) 0 ;
  
  arg1 = (XPLMWindowID)jarg1; 
  arg2 = (int *)jarg2; 
  arg3 = (int *)jarg3; 
  arg4 = (int *)jarg4; 
  arg5 = (int *)jarg5; 
  {
    try {
      XPLMGetWindowGeometry(arg1,arg2,arg3,arg4,arg5);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSetWindowGeometry___(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  XPLMWindowID arg1 = (XPLMWindowID) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  arg1 = (XPLMWindowID)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  {
    try {
      XPLMSetWindowGeometry(arg1,arg2,arg3,arg4,arg5);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetWindowGeometryOS___(void * jarg1, void * jarg2, void * jarg3, void * jarg4, void * jarg5) {
  XPLMWindowID arg1 = (XPLMWindowID) 0 ;
  int *arg2 = (int *) 0 ;
  int *arg3 = (int *) 0 ;
  int *arg4 = (int *) 0 ;
  int *arg5 = (int *) 0 ;
  
  arg1 = (XPLMWindowID)jarg1; 
  arg2 = (int *)jarg2; 
  arg3 = (int *)jarg3; 
  arg4 = (int *)jarg4; 
  arg5 = (int *)jarg5; 
  {
    try {
      XPLMGetWindowGeometryOS(arg1,arg2,arg3,arg4,arg5);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSetWindowGeometryOS___(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  XPLMWindowID arg1 = (XPLMWindowID) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  arg1 = (XPLMWindowID)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  {
    try {
      XPLMSetWindowGeometryOS(arg1,arg2,arg3,arg4,arg5);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetWindowGeometryVR___(void * jarg1, void * jarg2, void * jarg3) {
  XPLMWindowID arg1 = (XPLMWindowID) 0 ;
  int *arg2 = (int *) 0 ;
  int *arg3 = (int *) 0 ;
  
  arg1 = (XPLMWindowID)jarg1; 
  arg2 = (int *)jarg2; 
  arg3 = (int *)jarg3; 
  {
    try {
      XPLMGetWindowGeometryVR(arg1,arg2,arg3);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSetWindowGeometryVR___(void * jarg1, int jarg2, int jarg3) {
  XPLMWindowID arg1 = (XPLMWindowID) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (XPLMWindowID)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      XPLMSetWindowGeometryVR(arg1,arg2,arg3);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetWindowIsVisible___(void * jarg1) {
  int jresult ;
  XPLMWindowID arg1 = (XPLMWindowID) 0 ;
  int result;
  
  arg1 = (XPLMWindowID)jarg1; 
  {
    try {
      result = (int)XPLMGetWindowIsVisible(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSetWindowIsVisible___(void * jarg1, int jarg2) {
  XPLMWindowID arg1 = (XPLMWindowID) 0 ;
  int arg2 ;
  
  arg1 = (XPLMWindowID)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      XPLMSetWindowIsVisible(arg1,arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWindowIsPoppedOut___(void * jarg1) {
  int jresult ;
  XPLMWindowID arg1 = (XPLMWindowID) 0 ;
  int result;
  
  arg1 = (XPLMWindowID)jarg1; 
  {
    try {
      result = (int)XPLMWindowIsPoppedOut(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWindowIsInVR___(void * jarg1) {
  int jresult ;
  XPLMWindowID arg1 = (XPLMWindowID) 0 ;
  int result;
  
  arg1 = (XPLMWindowID)jarg1; 
  {
    try {
      result = (int)XPLMWindowIsInVR(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSetWindowGravity___(void * jarg1, float jarg2, float jarg3, float jarg4, float jarg5) {
  XPLMWindowID arg1 = (XPLMWindowID) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  
  arg1 = (XPLMWindowID)jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  {
    try {
      XPLMSetWindowGravity(arg1,arg2,arg3,arg4,arg5);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSetWindowResizingLimits___(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  XPLMWindowID arg1 = (XPLMWindowID) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  arg1 = (XPLMWindowID)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  {
    try {
      XPLMSetWindowResizingLimits(arg1,arg2,arg3,arg4,arg5);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_WindowPositionFree_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_WindowPositionFree;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_WindowCenterOnMonitor_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_WindowCenterOnMonitor;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_WindowFullScreenOnMonitor_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_WindowFullScreenOnMonitor;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_WindowFullScreenOnAllMonitors_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_WindowFullScreenOnAllMonitors;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_WindowPopOut_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_WindowPopOut;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_WindowVR_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_WindowVR;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSetWindowPositioningMode___(void * jarg1, int jarg2, int jarg3) {
  XPLMWindowID arg1 = (XPLMWindowID) 0 ;
  XPLMWindowPositioningMode arg2 ;
  int arg3 ;
  
  arg1 = (XPLMWindowID)jarg1; 
  arg2 = (XPLMWindowPositioningMode)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      XPLMSetWindowPositioningMode(arg1,arg2,arg3);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSetWindowTitle___(void * jarg1, char * jarg2) {
  XPLMWindowID arg1 = (XPLMWindowID) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (XPLMWindowID)jarg1; 
  arg2 = (char *)jarg2; 
  {
    try {
      XPLMSetWindowTitle(arg1,(char const *)arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetWindowRefCon___(void * jarg1) {
  void * jresult ;
  XPLMWindowID arg1 = (XPLMWindowID) 0 ;
  void *result = 0 ;
  
  arg1 = (XPLMWindowID)jarg1; 
  {
    try {
      result = (void *)XPLMGetWindowRefCon(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSetWindowRefCon___(void * jarg1, void * jarg2) {
  XPLMWindowID arg1 = (XPLMWindowID) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = (XPLMWindowID)jarg1; 
  arg2 = (void *)jarg2; 
  {
    try {
      XPLMSetWindowRefCon(arg1,arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMTakeKeyboardFocus___(void * jarg1) {
  XPLMWindowID arg1 = (XPLMWindowID) 0 ;
  
  arg1 = (XPLMWindowID)jarg1; 
  {
    try {
      XPLMTakeKeyboardFocus(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMHasKeyboardFocus___(void * jarg1) {
  int jresult ;
  XPLMWindowID arg1 = (XPLMWindowID) 0 ;
  int result;
  
  arg1 = (XPLMWindowID)jarg1; 
  {
    try {
      result = (int)XPLMHasKeyboardFocus(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMBringWindowToFront___(void * jarg1) {
  XPLMWindowID arg1 = (XPLMWindowID) 0 ;
  
  arg1 = (XPLMWindowID)jarg1; 
  {
    try {
      XPLMBringWindowToFront(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMIsWindowInFront___(void * jarg1) {
  int jresult ;
  XPLMWindowID arg1 = (XPLMWindowID) 0 ;
  int result;
  
  arg1 = (XPLMWindowID)jarg1; 
  {
    try {
      result = (int)XPLMIsWindowInFront(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMRegisterKeySniffer___(void * jarg1, int jarg2, void * jarg3) {
  int jresult ;
  XPLMKeySniffer_f arg1 = (XPLMKeySniffer_f) 0 ;
  int arg2 ;
  void *arg3 = (void *) 0 ;
  int result;
  
  arg1 = (XPLMKeySniffer_f)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (void *)jarg3; 
  {
    try {
      result = (int)XPLMRegisterKeySniffer(arg1,arg2,arg3);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMUnregisterKeySniffer___(void * jarg1, int jarg2, void * jarg3) {
  int jresult ;
  XPLMKeySniffer_f arg1 = (XPLMKeySniffer_f) 0 ;
  int arg2 ;
  void *arg3 = (void *) 0 ;
  int result;
  
  arg1 = (XPLMKeySniffer_f)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (void *)jarg3; 
  {
    try {
      result = (int)XPLMUnregisterKeySniffer(arg1,arg2,arg3);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMRegisterHotKey___(char jarg1, int jarg2, char * jarg3, void * jarg4, void * jarg5) {
  void * jresult ;
  char arg1 ;
  XPLMKeyFlags arg2 ;
  char *arg3 = (char *) 0 ;
  XPLMHotKey_f arg4 = (XPLMHotKey_f) 0 ;
  void *arg5 = (void *) 0 ;
  XPLMHotKeyID result;
  
  arg1 = (char)jarg1; 
  arg2 = (XPLMKeyFlags)jarg2; 
  arg3 = (char *)jarg3; 
  arg4 = (XPLMHotKey_f)jarg4; 
  arg5 = (void *)jarg5; 
  {
    try {
      result = (XPLMHotKeyID)XPLMRegisterHotKey(arg1,arg2,(char const *)arg3,arg4,arg5);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMUnregisterHotKey___(void * jarg1) {
  XPLMHotKeyID arg1 = (XPLMHotKeyID) 0 ;
  
  arg1 = (XPLMHotKeyID)jarg1; 
  {
    try {
      XPLMUnregisterHotKey(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCountHotKeys___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)XPLMCountHotKeys();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetNthHotKey___(int jarg1) {
  void * jresult ;
  int arg1 ;
  XPLMHotKeyID result;
  
  arg1 = (int)jarg1; 
  {
    try {
      result = (XPLMHotKeyID)XPLMGetNthHotKey(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetHotKeyInfo___(void * jarg1, char * jarg2, void * jarg3, char * jarg4, void * jarg5) {
  XPLMHotKeyID arg1 = (XPLMHotKeyID) 0 ;
  char *arg2 = (char *) 0 ;
  XPLMKeyFlags *arg3 = (XPLMKeyFlags *) 0 ;
  char *arg4 = (char *) 0 ;
  XPLMPluginID *arg5 = (XPLMPluginID *) 0 ;
  
  arg1 = (XPLMHotKeyID)jarg1; 
  arg2 = (char *)jarg2; 
  arg3 = (XPLMKeyFlags *)jarg3; 
  arg4 = (char *)jarg4; 
  arg5 = (XPLMPluginID *)jarg5; 
  {
    try {
      XPLMGetHotKeyInfo(arg1,arg2,arg3,arg4,arg5);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSetHotKeyCombination___(void * jarg1, char jarg2, int jarg3) {
  XPLMHotKeyID arg1 = (XPLMHotKeyID) 0 ;
  char arg2 ;
  XPLMKeyFlags arg3 ;
  
  arg1 = (XPLMHotKeyID)jarg1; 
  arg2 = (char)jarg2; 
  arg3 = (XPLMKeyFlags)jarg3; 
  {
    try {
      XPLMSetHotKeyCombination(arg1,arg2,arg3);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_FlightLoop_Phase_BeforeFlightModel_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_FlightLoop_Phase_BeforeFlightModel;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_FlightLoop_Phase_AfterFlightModel_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_FlightLoop_Phase_AfterFlightModel;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateFlightLoop_t_structSize_set___(void * jarg1, int jarg2) {
  XPLMCreateFlightLoop_t *arg1 = (XPLMCreateFlightLoop_t *) 0 ;
  int arg2 ;
  
  arg1 = (XPLMCreateFlightLoop_t *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->structSize = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateFlightLoop_t_structSize_get___(void * jarg1) {
  int jresult ;
  XPLMCreateFlightLoop_t *arg1 = (XPLMCreateFlightLoop_t *) 0 ;
  int result;
  
  arg1 = (XPLMCreateFlightLoop_t *)jarg1; 
  result = (int) ((arg1)->structSize);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateFlightLoop_t_phase_set___(void * jarg1, int jarg2) {
  XPLMCreateFlightLoop_t *arg1 = (XPLMCreateFlightLoop_t *) 0 ;
  XPLMFlightLoopPhaseType arg2 ;
  
  arg1 = (XPLMCreateFlightLoop_t *)jarg1; 
  arg2 = (XPLMFlightLoopPhaseType)jarg2; 
  if (arg1) (arg1)->phase = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateFlightLoop_t_phase_get___(void * jarg1) {
  int jresult ;
  XPLMCreateFlightLoop_t *arg1 = (XPLMCreateFlightLoop_t *) 0 ;
  XPLMFlightLoopPhaseType result;
  
  arg1 = (XPLMCreateFlightLoop_t *)jarg1; 
  result = (XPLMFlightLoopPhaseType) ((arg1)->phase);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateFlightLoop_t_callbackFunc_set___(void * jarg1, void * jarg2) {
  XPLMCreateFlightLoop_t *arg1 = (XPLMCreateFlightLoop_t *) 0 ;
  XPLMFlightLoop_f arg2 = (XPLMFlightLoop_f) 0 ;
  
  arg1 = (XPLMCreateFlightLoop_t *)jarg1; 
  arg2 = (XPLMFlightLoop_f)jarg2; 
  if (arg1) (arg1)->callbackFunc = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateFlightLoop_t_callbackFunc_get___(void * jarg1) {
  void * jresult ;
  XPLMCreateFlightLoop_t *arg1 = (XPLMCreateFlightLoop_t *) 0 ;
  XPLMFlightLoop_f result;
  
  arg1 = (XPLMCreateFlightLoop_t *)jarg1; 
  result = (XPLMFlightLoop_f) ((arg1)->callbackFunc);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateFlightLoop_t_refcon_set___(void * jarg1, void * jarg2) {
  XPLMCreateFlightLoop_t *arg1 = (XPLMCreateFlightLoop_t *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = (XPLMCreateFlightLoop_t *)jarg1; 
  arg2 = (void *)jarg2; 
  if (arg1) (arg1)->refcon = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateFlightLoop_t_refcon_get___(void * jarg1) {
  void * jresult ;
  XPLMCreateFlightLoop_t *arg1 = (XPLMCreateFlightLoop_t *) 0 ;
  void *result = 0 ;
  
  arg1 = (XPLMCreateFlightLoop_t *)jarg1; 
  result = (void *) ((arg1)->refcon);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_new_XPLMCreateFlightLoop_t___() {
  void * jresult ;
  XPLMCreateFlightLoop_t *result = 0 ;
  
  {
    try {
      result = (XPLMCreateFlightLoop_t *)new XPLMCreateFlightLoop_t();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_delete_XPLMCreateFlightLoop_t___(void * jarg1) {
  XPLMCreateFlightLoop_t *arg1 = (XPLMCreateFlightLoop_t *) 0 ;
  
  arg1 = (XPLMCreateFlightLoop_t *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetElapsedTime___() {
  float jresult ;
  float result;
  
  {
    try {
      result = (float)XPLMGetElapsedTime();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetCycleNumber___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)XPLMGetCycleNumber();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMRegisterFlightLoopCallback___(void * jarg1, float jarg2, void * jarg3) {
  XPLMFlightLoop_f arg1 = (XPLMFlightLoop_f) 0 ;
  float arg2 ;
  void *arg3 = (void *) 0 ;
  
  arg1 = (XPLMFlightLoop_f)jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (void *)jarg3; 
  {
    try {
      XPLMRegisterFlightLoopCallback(arg1,arg2,arg3);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMUnregisterFlightLoopCallback___(void * jarg1, void * jarg2) {
  XPLMFlightLoop_f arg1 = (XPLMFlightLoop_f) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = (XPLMFlightLoop_f)jarg1; 
  arg2 = (void *)jarg2; 
  {
    try {
      XPLMUnregisterFlightLoopCallback(arg1,arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSetFlightLoopCallbackInterval___(void * jarg1, float jarg2, int jarg3, void * jarg4) {
  XPLMFlightLoop_f arg1 = (XPLMFlightLoop_f) 0 ;
  float arg2 ;
  int arg3 ;
  void *arg4 = (void *) 0 ;
  
  arg1 = (XPLMFlightLoop_f)jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (void *)jarg4; 
  {
    try {
      XPLMSetFlightLoopCallbackInterval(arg1,arg2,arg3,arg4);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateFlightLoop___(void * jarg1) {
  void * jresult ;
  XPLMCreateFlightLoop_t *arg1 = (XPLMCreateFlightLoop_t *) 0 ;
  XPLMFlightLoopID result;
  
  arg1 = (XPLMCreateFlightLoop_t *)jarg1; 
  {
    try {
      result = (XPLMFlightLoopID)XPLMCreateFlightLoop(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMDestroyFlightLoop___(void * jarg1) {
  XPLMFlightLoopID arg1 = (XPLMFlightLoopID) 0 ;
  
  arg1 = (XPLMFlightLoopID)jarg1; 
  {
    try {
      XPLMDestroyFlightLoop(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMScheduleFlightLoop___(void * jarg1, float jarg2, int jarg3) {
  XPLMFlightLoopID arg1 = (XPLMFlightLoopID) 0 ;
  float arg2 ;
  int arg3 ;
  
  arg1 = (XPLMFlightLoopID)jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      XPLMScheduleFlightLoop(arg1,arg2,arg3);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_DataFile_Situation_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_DataFile_Situation;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_DataFile_ReplayMovie_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_DataFile_ReplayMovie;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetSystemPath___(char * jarg1) {
  char *arg1 = (char *) 0 ;
  
  arg1 = (char *)jarg1; 
  {
    try {
      XPLMGetSystemPath(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetPrefsPath___(char * jarg1) {
  char *arg1 = (char *) 0 ;
  
  arg1 = (char *)jarg1; 
  {
    try {
      XPLMGetPrefsPath(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetDirectorySeparator___() {
  char * jresult ;
  char *result = 0 ;
  
  {
    try {
      result = (char *)XPLMGetDirectorySeparator();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMExtractFileAndPath___(char * jarg1) {
  char * jresult ;
  char *arg1 = (char *) 0 ;
  char *result = 0 ;
  
  arg1 = (char *)jarg1; 
  {
    try {
      result = (char *)XPLMExtractFileAndPath(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetDirectoryContents___(char * jarg1, int jarg2, char * jarg3, int jarg4, void * jarg5, int jarg6, void * jarg7, void * jarg8) {
  int jresult ;
  char *arg1 = (char *) 0 ;
  int arg2 ;
  char *arg3 = (char *) 0 ;
  int arg4 ;
  char **arg5 = (char **) 0 ;
  int arg6 ;
  int *arg7 = (int *) 0 ;
  int *arg8 = (int *) 0 ;
  int result;
  
  arg1 = (char *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (char *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (char **)jarg5; 
  arg6 = (int)jarg6; 
  arg7 = (int *)jarg7; 
  arg8 = (int *)jarg8; 
  {
    try {
      result = (int)XPLMGetDirectoryContents((char const *)arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMLoadDataFile___(int jarg1, char * jarg2) {
  int jresult ;
  XPLMDataFileType arg1 ;
  char *arg2 = (char *) 0 ;
  int result;
  
  arg1 = (XPLMDataFileType)jarg1; 
  arg2 = (char *)jarg2; 
  {
    try {
      result = (int)XPLMLoadDataFile(arg1,(char const *)arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSaveDataFile___(int jarg1, char * jarg2) {
  int jresult ;
  XPLMDataFileType arg1 ;
  char *arg2 = (char *) 0 ;
  int result;
  
  arg1 = (XPLMDataFileType)jarg1; 
  arg2 = (char *)jarg2; 
  {
    try {
      result = (int)XPLMSaveDataFile(arg1,(char const *)arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Host_Unknown_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Host_Unknown;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Host_XPlane_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Host_XPlane;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Language_Unknown_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Language_Unknown;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Language_English_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Language_English;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Language_French_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Language_French;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Language_German_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Language_German;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Language_Italian_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Language_Italian;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Language_Spanish_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Language_Spanish;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Language_Korean_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Language_Korean;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Language_Russian_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Language_Russian;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Language_Greek_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Language_Greek;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Language_Japanese_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Language_Japanese;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Language_Chinese_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Language_Chinese;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Language_Ukrainian_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Language_Ukrainian;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetVersions___(void * jarg1, void * jarg2, void * jarg3) {
  int *arg1 = (int *) 0 ;
  int *arg2 = (int *) 0 ;
  XPLMHostApplicationID *arg3 = (XPLMHostApplicationID *) 0 ;
  
  arg1 = (int *)jarg1; 
  arg2 = (int *)jarg2; 
  arg3 = (XPLMHostApplicationID *)jarg3; 
  {
    try {
      XPLMGetVersions(arg1,arg2,arg3);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetLanguage___() {
  int jresult ;
  XPLMLanguageCode result;
  
  {
    try {
      result = (XPLMLanguageCode)XPLMGetLanguage();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMFindSymbol___(char * jarg1) {
  void * jresult ;
  char *arg1 = (char *) 0 ;
  void *result = 0 ;
  
  arg1 = (char *)jarg1; 
  {
    try {
      result = (void *)XPLMFindSymbol((char const *)arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSetErrorCallback___(void * jarg1) {
  XPLMError_f arg1 = (XPLMError_f) 0 ;
  
  arg1 = (XPLMError_f)jarg1; 
  {
    try {
      XPLMSetErrorCallback(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMDebugString___(char * jarg1) {
  char *arg1 = (char *) 0 ;
  
  arg1 = (char *)jarg1; 
  {
    try {
      XPLMDebugString((char const *)arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSpeakString___(char * jarg1) {
  char *arg1 = (char *) 0 ;
  
  arg1 = (char *)jarg1; 
  {
    try {
      XPLMSpeakString((char const *)arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetVirtualKeyDescription___(char jarg1) {
  char * jresult ;
  char arg1 ;
  char *result = 0 ;
  
  arg1 = (char)jarg1; 
  {
    try {
      result = (char *)XPLMGetVirtualKeyDescription(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMReloadScenery___() {
  {
    try {
      XPLMReloadScenery();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_CommandBegin_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_CommandBegin;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_CommandContinue_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_CommandContinue;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_CommandEnd_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_CommandEnd;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMFindCommand___(char * jarg1) {
  void * jresult ;
  char *arg1 = (char *) 0 ;
  XPLMCommandRef result;
  
  arg1 = (char *)jarg1; 
  {
    try {
      result = (XPLMCommandRef)XPLMFindCommand((char const *)arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCommandBegin___(void * jarg1) {
  XPLMCommandRef arg1 = (XPLMCommandRef) 0 ;
  
  arg1 = (XPLMCommandRef)jarg1; 
  {
    try {
      XPLMCommandBegin(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCommandEnd___(void * jarg1) {
  XPLMCommandRef arg1 = (XPLMCommandRef) 0 ;
  
  arg1 = (XPLMCommandRef)jarg1; 
  {
    try {
      XPLMCommandEnd(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCommandOnce___(void * jarg1) {
  XPLMCommandRef arg1 = (XPLMCommandRef) 0 ;
  
  arg1 = (XPLMCommandRef)jarg1; 
  {
    try {
      XPLMCommandOnce(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateCommand___(char * jarg1, char * jarg2) {
  void * jresult ;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  XPLMCommandRef result;
  
  arg1 = (char *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    try {
      result = (XPLMCommandRef)XPLMCreateCommand((char const *)arg1,(char const *)arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMRegisterCommandHandler___(void * jarg1, void * jarg2, int jarg3, void * jarg4) {
  XPLMCommandRef arg1 = (XPLMCommandRef) 0 ;
  XPLMCommandCallback_f arg2 = (XPLMCommandCallback_f) 0 ;
  int arg3 ;
  void *arg4 = (void *) 0 ;
  
  arg1 = (XPLMCommandRef)jarg1; 
  arg2 = (XPLMCommandCallback_f)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (void *)jarg4; 
  {
    try {
      XPLMRegisterCommandHandler(arg1,arg2,arg3,arg4);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMUnregisterCommandHandler___(void * jarg1, void * jarg2, int jarg3, void * jarg4) {
  XPLMCommandRef arg1 = (XPLMCommandRef) 0 ;
  XPLMCommandCallback_f arg2 = (XPLMCommandCallback_f) 0 ;
  int arg3 ;
  void *arg4 = (void *) 0 ;
  
  arg1 = (XPLMCommandRef)jarg1; 
  arg2 = (XPLMCommandCallback_f)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (void *)jarg4; 
  {
    try {
      XPLMUnregisterCommandHandler(arg1,arg2,arg3,arg4);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Menu_NoCheck_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Menu_NoCheck;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Menu_Unchecked_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Menu_Unchecked;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_Menu_Checked_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_Menu_Checked;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMFindPluginsMenu___() {
  void * jresult ;
  XPLMMenuID result;
  
  {
    try {
      result = (XPLMMenuID)XPLMFindPluginsMenu();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMFindAircraftMenu___() {
  void * jresult ;
  XPLMMenuID result;
  
  {
    try {
      result = (XPLMMenuID)XPLMFindAircraftMenu();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateMenu___(char * jarg1, void * jarg2, int jarg3, void * jarg4, void * jarg5) {
  void * jresult ;
  char *arg1 = (char *) 0 ;
  XPLMMenuID arg2 = (XPLMMenuID) 0 ;
  int arg3 ;
  XPLMMenuHandler_f arg4 = (XPLMMenuHandler_f) 0 ;
  void *arg5 = (void *) 0 ;
  XPLMMenuID result;
  
  arg1 = (char *)jarg1; 
  arg2 = (XPLMMenuID)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (XPLMMenuHandler_f)jarg4; 
  arg5 = (void *)jarg5; 
  {
    try {
      result = (XPLMMenuID)XPLMCreateMenu((char const *)arg1,arg2,arg3,arg4,arg5);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMDestroyMenu___(void * jarg1) {
  XPLMMenuID arg1 = (XPLMMenuID) 0 ;
  
  arg1 = (XPLMMenuID)jarg1; 
  {
    try {
      XPLMDestroyMenu(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMClearAllMenuItems___(void * jarg1) {
  XPLMMenuID arg1 = (XPLMMenuID) 0 ;
  
  arg1 = (XPLMMenuID)jarg1; 
  {
    try {
      XPLMClearAllMenuItems(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMAppendMenuItem___(void * jarg1, char * jarg2, void * jarg3, int jarg4) {
  int jresult ;
  XPLMMenuID arg1 = (XPLMMenuID) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = (void *) 0 ;
  int arg4 ;
  int result;
  
  arg1 = (XPLMMenuID)jarg1; 
  arg2 = (char *)jarg2; 
  arg3 = (void *)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      result = (int)XPLMAppendMenuItem(arg1,(char const *)arg2,arg3,arg4);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMAppendMenuItemWithCommand___(void * jarg1, char * jarg2, void * jarg3) {
  int jresult ;
  XPLMMenuID arg1 = (XPLMMenuID) 0 ;
  char *arg2 = (char *) 0 ;
  XPLMCommandRef arg3 = (XPLMCommandRef) 0 ;
  int result;
  
  arg1 = (XPLMMenuID)jarg1; 
  arg2 = (char *)jarg2; 
  arg3 = (XPLMCommandRef)jarg3; 
  {
    try {
      result = (int)XPLMAppendMenuItemWithCommand(arg1,(char const *)arg2,arg3);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMAppendMenuSeparator___(void * jarg1) {
  XPLMMenuID arg1 = (XPLMMenuID) 0 ;
  
  arg1 = (XPLMMenuID)jarg1; 
  {
    try {
      XPLMAppendMenuSeparator(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMSetMenuItemName___(void * jarg1, int jarg2, char * jarg3, int jarg4) {
  XPLMMenuID arg1 = (XPLMMenuID) 0 ;
  int arg2 ;
  char *arg3 = (char *) 0 ;
  int arg4 ;
  
  arg1 = (XPLMMenuID)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (char *)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      XPLMSetMenuItemName(arg1,arg2,(char const *)arg3,arg4);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCheckMenuItem___(void * jarg1, int jarg2, int jarg3) {
  XPLMMenuID arg1 = (XPLMMenuID) 0 ;
  int arg2 ;
  XPLMMenuCheck arg3 ;
  
  arg1 = (XPLMMenuID)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (XPLMMenuCheck)jarg3; 
  {
    try {
      XPLMCheckMenuItem(arg1,arg2,arg3);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCheckMenuItemState___(void * jarg1, int jarg2, void * jarg3) {
  XPLMMenuID arg1 = (XPLMMenuID) 0 ;
  int arg2 ;
  XPLMMenuCheck *arg3 = (XPLMMenuCheck *) 0 ;
  
  arg1 = (XPLMMenuID)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (XPLMMenuCheck *)jarg3; 
  {
    try {
      XPLMCheckMenuItemState(arg1,arg2,arg3);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMEnableMenuItem___(void * jarg1, int jarg2, int jarg3) {
  XPLMMenuID arg1 = (XPLMMenuID) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (XPLMMenuID)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      XPLMEnableMenuItem(arg1,arg2,arg3);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMRemoveMenuItem___(void * jarg1, int jarg2) {
  XPLMMenuID arg1 = (XPLMMenuID) 0 ;
  int arg2 ;
  
  arg1 = (XPLMMenuID)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      XPLMRemoveMenuItem(arg1,arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfoWinds_t_alt_msl_set___(void * jarg1, float jarg2) {
  XPLMWeatherInfoWinds_t *arg1 = (XPLMWeatherInfoWinds_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMWeatherInfoWinds_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->alt_msl = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfoWinds_t_alt_msl_get___(void * jarg1) {
  float jresult ;
  XPLMWeatherInfoWinds_t *arg1 = (XPLMWeatherInfoWinds_t *) 0 ;
  float result;
  
  arg1 = (XPLMWeatherInfoWinds_t *)jarg1; 
  result = (float) ((arg1)->alt_msl);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfoWinds_t_speed_set___(void * jarg1, float jarg2) {
  XPLMWeatherInfoWinds_t *arg1 = (XPLMWeatherInfoWinds_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMWeatherInfoWinds_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->speed = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfoWinds_t_speed_get___(void * jarg1) {
  float jresult ;
  XPLMWeatherInfoWinds_t *arg1 = (XPLMWeatherInfoWinds_t *) 0 ;
  float result;
  
  arg1 = (XPLMWeatherInfoWinds_t *)jarg1; 
  result = (float) ((arg1)->speed);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfoWinds_t_direction_set___(void * jarg1, float jarg2) {
  XPLMWeatherInfoWinds_t *arg1 = (XPLMWeatherInfoWinds_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMWeatherInfoWinds_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->direction = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfoWinds_t_direction_get___(void * jarg1) {
  float jresult ;
  XPLMWeatherInfoWinds_t *arg1 = (XPLMWeatherInfoWinds_t *) 0 ;
  float result;
  
  arg1 = (XPLMWeatherInfoWinds_t *)jarg1; 
  result = (float) ((arg1)->direction);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfoWinds_t_gust_speed_set___(void * jarg1, float jarg2) {
  XPLMWeatherInfoWinds_t *arg1 = (XPLMWeatherInfoWinds_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMWeatherInfoWinds_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->gust_speed = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfoWinds_t_gust_speed_get___(void * jarg1) {
  float jresult ;
  XPLMWeatherInfoWinds_t *arg1 = (XPLMWeatherInfoWinds_t *) 0 ;
  float result;
  
  arg1 = (XPLMWeatherInfoWinds_t *)jarg1; 
  result = (float) ((arg1)->gust_speed);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfoWinds_t_shear_set___(void * jarg1, float jarg2) {
  XPLMWeatherInfoWinds_t *arg1 = (XPLMWeatherInfoWinds_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMWeatherInfoWinds_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->shear = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfoWinds_t_shear_get___(void * jarg1) {
  float jresult ;
  XPLMWeatherInfoWinds_t *arg1 = (XPLMWeatherInfoWinds_t *) 0 ;
  float result;
  
  arg1 = (XPLMWeatherInfoWinds_t *)jarg1; 
  result = (float) ((arg1)->shear);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfoWinds_t_turbulence_set___(void * jarg1, float jarg2) {
  XPLMWeatherInfoWinds_t *arg1 = (XPLMWeatherInfoWinds_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMWeatherInfoWinds_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->turbulence = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfoWinds_t_turbulence_get___(void * jarg1) {
  float jresult ;
  XPLMWeatherInfoWinds_t *arg1 = (XPLMWeatherInfoWinds_t *) 0 ;
  float result;
  
  arg1 = (XPLMWeatherInfoWinds_t *)jarg1; 
  result = (float) ((arg1)->turbulence);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_new_XPLMWeatherInfoWinds_t___() {
  void * jresult ;
  XPLMWeatherInfoWinds_t *result = 0 ;
  
  {
    try {
      result = (XPLMWeatherInfoWinds_t *)new XPLMWeatherInfoWinds_t();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_delete_XPLMWeatherInfoWinds_t___(void * jarg1) {
  XPLMWeatherInfoWinds_t *arg1 = (XPLMWeatherInfoWinds_t *) 0 ;
  
  arg1 = (XPLMWeatherInfoWinds_t *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfoClouds_t_cloud_type_set___(void * jarg1, float jarg2) {
  XPLMWeatherInfoClouds_t *arg1 = (XPLMWeatherInfoClouds_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMWeatherInfoClouds_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->cloud_type = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfoClouds_t_cloud_type_get___(void * jarg1) {
  float jresult ;
  XPLMWeatherInfoClouds_t *arg1 = (XPLMWeatherInfoClouds_t *) 0 ;
  float result;
  
  arg1 = (XPLMWeatherInfoClouds_t *)jarg1; 
  result = (float) ((arg1)->cloud_type);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfoClouds_t_coverage_set___(void * jarg1, float jarg2) {
  XPLMWeatherInfoClouds_t *arg1 = (XPLMWeatherInfoClouds_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMWeatherInfoClouds_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->coverage = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfoClouds_t_coverage_get___(void * jarg1) {
  float jresult ;
  XPLMWeatherInfoClouds_t *arg1 = (XPLMWeatherInfoClouds_t *) 0 ;
  float result;
  
  arg1 = (XPLMWeatherInfoClouds_t *)jarg1; 
  result = (float) ((arg1)->coverage);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfoClouds_t_alt_top_set___(void * jarg1, float jarg2) {
  XPLMWeatherInfoClouds_t *arg1 = (XPLMWeatherInfoClouds_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMWeatherInfoClouds_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->alt_top = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfoClouds_t_alt_top_get___(void * jarg1) {
  float jresult ;
  XPLMWeatherInfoClouds_t *arg1 = (XPLMWeatherInfoClouds_t *) 0 ;
  float result;
  
  arg1 = (XPLMWeatherInfoClouds_t *)jarg1; 
  result = (float) ((arg1)->alt_top);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfoClouds_t_alt_base_set___(void * jarg1, float jarg2) {
  XPLMWeatherInfoClouds_t *arg1 = (XPLMWeatherInfoClouds_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMWeatherInfoClouds_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->alt_base = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfoClouds_t_alt_base_get___(void * jarg1) {
  float jresult ;
  XPLMWeatherInfoClouds_t *arg1 = (XPLMWeatherInfoClouds_t *) 0 ;
  float result;
  
  arg1 = (XPLMWeatherInfoClouds_t *)jarg1; 
  result = (float) ((arg1)->alt_base);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_new_XPLMWeatherInfoClouds_t___() {
  void * jresult ;
  XPLMWeatherInfoClouds_t *result = 0 ;
  
  {
    try {
      result = (XPLMWeatherInfoClouds_t *)new XPLMWeatherInfoClouds_t();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_delete_XPLMWeatherInfoClouds_t___(void * jarg1) {
  XPLMWeatherInfoClouds_t *arg1 = (XPLMWeatherInfoClouds_t *) 0 ;
  
  arg1 = (XPLMWeatherInfoClouds_t *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfo_t_structSize_set___(void * jarg1, int jarg2) {
  XPLMWeatherInfo_t *arg1 = (XPLMWeatherInfo_t *) 0 ;
  int arg2 ;
  
  arg1 = (XPLMWeatherInfo_t *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->structSize = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfo_t_structSize_get___(void * jarg1) {
  int jresult ;
  XPLMWeatherInfo_t *arg1 = (XPLMWeatherInfo_t *) 0 ;
  int result;
  
  arg1 = (XPLMWeatherInfo_t *)jarg1; 
  result = (int) ((arg1)->structSize);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfo_t_temperature_alt_set___(void * jarg1, float jarg2) {
  XPLMWeatherInfo_t *arg1 = (XPLMWeatherInfo_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMWeatherInfo_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->temperature_alt = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfo_t_temperature_alt_get___(void * jarg1) {
  float jresult ;
  XPLMWeatherInfo_t *arg1 = (XPLMWeatherInfo_t *) 0 ;
  float result;
  
  arg1 = (XPLMWeatherInfo_t *)jarg1; 
  result = (float) ((arg1)->temperature_alt);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfo_t_dewpoint_alt_set___(void * jarg1, float jarg2) {
  XPLMWeatherInfo_t *arg1 = (XPLMWeatherInfo_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMWeatherInfo_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->dewpoint_alt = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfo_t_dewpoint_alt_get___(void * jarg1) {
  float jresult ;
  XPLMWeatherInfo_t *arg1 = (XPLMWeatherInfo_t *) 0 ;
  float result;
  
  arg1 = (XPLMWeatherInfo_t *)jarg1; 
  result = (float) ((arg1)->dewpoint_alt);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfo_t_pressure_alt_set___(void * jarg1, float jarg2) {
  XPLMWeatherInfo_t *arg1 = (XPLMWeatherInfo_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMWeatherInfo_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->pressure_alt = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfo_t_pressure_alt_get___(void * jarg1) {
  float jresult ;
  XPLMWeatherInfo_t *arg1 = (XPLMWeatherInfo_t *) 0 ;
  float result;
  
  arg1 = (XPLMWeatherInfo_t *)jarg1; 
  result = (float) ((arg1)->pressure_alt);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfo_t_precip_rate_alt_set___(void * jarg1, float jarg2) {
  XPLMWeatherInfo_t *arg1 = (XPLMWeatherInfo_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMWeatherInfo_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->precip_rate_alt = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfo_t_precip_rate_alt_get___(void * jarg1) {
  float jresult ;
  XPLMWeatherInfo_t *arg1 = (XPLMWeatherInfo_t *) 0 ;
  float result;
  
  arg1 = (XPLMWeatherInfo_t *)jarg1; 
  result = (float) ((arg1)->precip_rate_alt);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfo_t_wind_dir_alt_set___(void * jarg1, float jarg2) {
  XPLMWeatherInfo_t *arg1 = (XPLMWeatherInfo_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMWeatherInfo_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->wind_dir_alt = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfo_t_wind_dir_alt_get___(void * jarg1) {
  float jresult ;
  XPLMWeatherInfo_t *arg1 = (XPLMWeatherInfo_t *) 0 ;
  float result;
  
  arg1 = (XPLMWeatherInfo_t *)jarg1; 
  result = (float) ((arg1)->wind_dir_alt);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfo_t_wind_spd_alt_set___(void * jarg1, float jarg2) {
  XPLMWeatherInfo_t *arg1 = (XPLMWeatherInfo_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMWeatherInfo_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->wind_spd_alt = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfo_t_wind_spd_alt_get___(void * jarg1) {
  float jresult ;
  XPLMWeatherInfo_t *arg1 = (XPLMWeatherInfo_t *) 0 ;
  float result;
  
  arg1 = (XPLMWeatherInfo_t *)jarg1; 
  result = (float) ((arg1)->wind_spd_alt);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfo_t_turbulence_alt_set___(void * jarg1, float jarg2) {
  XPLMWeatherInfo_t *arg1 = (XPLMWeatherInfo_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMWeatherInfo_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->turbulence_alt = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfo_t_turbulence_alt_get___(void * jarg1) {
  float jresult ;
  XPLMWeatherInfo_t *arg1 = (XPLMWeatherInfo_t *) 0 ;
  float result;
  
  arg1 = (XPLMWeatherInfo_t *)jarg1; 
  result = (float) ((arg1)->turbulence_alt);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfo_t_wave_height_set___(void * jarg1, float jarg2) {
  XPLMWeatherInfo_t *arg1 = (XPLMWeatherInfo_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMWeatherInfo_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->wave_height = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfo_t_wave_height_get___(void * jarg1) {
  float jresult ;
  XPLMWeatherInfo_t *arg1 = (XPLMWeatherInfo_t *) 0 ;
  float result;
  
  arg1 = (XPLMWeatherInfo_t *)jarg1; 
  result = (float) ((arg1)->wave_height);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfo_t_wave_length_set___(void * jarg1, float jarg2) {
  XPLMWeatherInfo_t *arg1 = (XPLMWeatherInfo_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMWeatherInfo_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->wave_length = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfo_t_wave_length_get___(void * jarg1) {
  float jresult ;
  XPLMWeatherInfo_t *arg1 = (XPLMWeatherInfo_t *) 0 ;
  float result;
  
  arg1 = (XPLMWeatherInfo_t *)jarg1; 
  result = (float) ((arg1)->wave_length);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfo_t_wave_dir_set___(void * jarg1, int jarg2) {
  XPLMWeatherInfo_t *arg1 = (XPLMWeatherInfo_t *) 0 ;
  int arg2 ;
  
  arg1 = (XPLMWeatherInfo_t *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->wave_dir = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfo_t_wave_dir_get___(void * jarg1) {
  int jresult ;
  XPLMWeatherInfo_t *arg1 = (XPLMWeatherInfo_t *) 0 ;
  int result;
  
  arg1 = (XPLMWeatherInfo_t *)jarg1; 
  result = (int) ((arg1)->wave_dir);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfo_t_wave_speed_set___(void * jarg1, float jarg2) {
  XPLMWeatherInfo_t *arg1 = (XPLMWeatherInfo_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMWeatherInfo_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->wave_speed = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfo_t_wave_speed_get___(void * jarg1) {
  float jresult ;
  XPLMWeatherInfo_t *arg1 = (XPLMWeatherInfo_t *) 0 ;
  float result;
  
  arg1 = (XPLMWeatherInfo_t *)jarg1; 
  result = (float) ((arg1)->wave_speed);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfo_t_visibility_set___(void * jarg1, float jarg2) {
  XPLMWeatherInfo_t *arg1 = (XPLMWeatherInfo_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMWeatherInfo_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->visibility = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfo_t_visibility_get___(void * jarg1) {
  float jresult ;
  XPLMWeatherInfo_t *arg1 = (XPLMWeatherInfo_t *) 0 ;
  float result;
  
  arg1 = (XPLMWeatherInfo_t *)jarg1; 
  result = (float) ((arg1)->visibility);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfo_t_precip_rate_set___(void * jarg1, float jarg2) {
  XPLMWeatherInfo_t *arg1 = (XPLMWeatherInfo_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMWeatherInfo_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->precip_rate = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfo_t_precip_rate_get___(void * jarg1) {
  float jresult ;
  XPLMWeatherInfo_t *arg1 = (XPLMWeatherInfo_t *) 0 ;
  float result;
  
  arg1 = (XPLMWeatherInfo_t *)jarg1; 
  result = (float) ((arg1)->precip_rate);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfo_t_thermal_climb_set___(void * jarg1, float jarg2) {
  XPLMWeatherInfo_t *arg1 = (XPLMWeatherInfo_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMWeatherInfo_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->thermal_climb = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfo_t_thermal_climb_get___(void * jarg1) {
  float jresult ;
  XPLMWeatherInfo_t *arg1 = (XPLMWeatherInfo_t *) 0 ;
  float result;
  
  arg1 = (XPLMWeatherInfo_t *)jarg1; 
  result = (float) ((arg1)->thermal_climb);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfo_t_pressure_sl_set___(void * jarg1, float jarg2) {
  XPLMWeatherInfo_t *arg1 = (XPLMWeatherInfo_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMWeatherInfo_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->pressure_sl = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfo_t_pressure_sl_get___(void * jarg1) {
  float jresult ;
  XPLMWeatherInfo_t *arg1 = (XPLMWeatherInfo_t *) 0 ;
  float result;
  
  arg1 = (XPLMWeatherInfo_t *)jarg1; 
  result = (float) ((arg1)->pressure_sl);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfo_t_wind_layers_set___(void * jarg1, void * jarg2) {
  XPLMWeatherInfo_t *arg1 = (XPLMWeatherInfo_t *) 0 ;
  XPLMWeatherInfoWinds_t *arg2 = (XPLMWeatherInfoWinds_t *) (XPLMWeatherInfoWinds_t *)0 ;
  
  arg1 = (XPLMWeatherInfo_t *)jarg1; 
  arg2 = (XPLMWeatherInfoWinds_t *)jarg2; 
  {
    size_t ii;
    XPLMWeatherInfoWinds_t *b = (XPLMWeatherInfoWinds_t *) arg1->wind_layers;
    for (ii = 0; ii < (size_t)13; ii++) b[ii] = *((XPLMWeatherInfoWinds_t *) arg2 + ii);
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfo_t_wind_layers_get___(void * jarg1) {
  void * jresult ;
  XPLMWeatherInfo_t *arg1 = (XPLMWeatherInfo_t *) 0 ;
  XPLMWeatherInfoWinds_t *result = 0 ;
  
  arg1 = (XPLMWeatherInfo_t *)jarg1; 
  result = (XPLMWeatherInfoWinds_t *)(XPLMWeatherInfoWinds_t *) ((arg1)->wind_layers);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfo_t_cloud_layers_set___(void * jarg1, void * jarg2) {
  XPLMWeatherInfo_t *arg1 = (XPLMWeatherInfo_t *) 0 ;
  XPLMWeatherInfoClouds_t *arg2 = (XPLMWeatherInfoClouds_t *) (XPLMWeatherInfoClouds_t *)0 ;
  
  arg1 = (XPLMWeatherInfo_t *)jarg1; 
  arg2 = (XPLMWeatherInfoClouds_t *)jarg2; 
  {
    size_t ii;
    XPLMWeatherInfoClouds_t *b = (XPLMWeatherInfoClouds_t *) arg1->cloud_layers;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((XPLMWeatherInfoClouds_t *) arg2 + ii);
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMWeatherInfo_t_cloud_layers_get___(void * jarg1) {
  void * jresult ;
  XPLMWeatherInfo_t *arg1 = (XPLMWeatherInfo_t *) 0 ;
  XPLMWeatherInfoClouds_t *result = 0 ;
  
  arg1 = (XPLMWeatherInfo_t *)jarg1; 
  result = (XPLMWeatherInfoClouds_t *)(XPLMWeatherInfoClouds_t *) ((arg1)->cloud_layers);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_new_XPLMWeatherInfo_t___() {
  void * jresult ;
  XPLMWeatherInfo_t *result = 0 ;
  
  {
    try {
      result = (XPLMWeatherInfo_t *)new XPLMWeatherInfo_t();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_delete_XPLMWeatherInfo_t___(void * jarg1) {
  XPLMWeatherInfo_t *arg1 = (XPLMWeatherInfo_t *) 0 ;
  
  arg1 = (XPLMWeatherInfo_t *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetMETARForAirport___(char * jarg1, void * jarg2) {
  char *arg1 = (char *) 0 ;
  XPLMFixedString150_t *arg2 = (XPLMFixedString150_t *) 0 ;
  
  arg1 = (char *)jarg1; 
  arg2 = (XPLMFixedString150_t *)jarg2; 
  {
    try {
      XPLMGetMETARForAirport((char const *)arg1,arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetWeatherAtLocation___(double jarg1, double jarg2, double jarg3, void * jarg4) {
  int jresult ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  XPLMWeatherInfo_t *arg4 = (XPLMWeatherInfo_t *) 0 ;
  int result;
  
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (XPLMWeatherInfo_t *)jarg4; 
  {
    try {
      result = (int)XPLMGetWeatherAtLocation(arg1,arg2,arg3,arg4);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_ControlCameraUntilViewChanges_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_ControlCameraUntilViewChanges;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_ControlCameraForever_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_ControlCameraForever;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCameraPosition_t_x_set___(void * jarg1, float jarg2) {
  XPLMCameraPosition_t *arg1 = (XPLMCameraPosition_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMCameraPosition_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->x = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCameraPosition_t_x_get___(void * jarg1) {
  float jresult ;
  XPLMCameraPosition_t *arg1 = (XPLMCameraPosition_t *) 0 ;
  float result;
  
  arg1 = (XPLMCameraPosition_t *)jarg1; 
  result = (float) ((arg1)->x);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCameraPosition_t_y_set___(void * jarg1, float jarg2) {
  XPLMCameraPosition_t *arg1 = (XPLMCameraPosition_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMCameraPosition_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->y = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCameraPosition_t_y_get___(void * jarg1) {
  float jresult ;
  XPLMCameraPosition_t *arg1 = (XPLMCameraPosition_t *) 0 ;
  float result;
  
  arg1 = (XPLMCameraPosition_t *)jarg1; 
  result = (float) ((arg1)->y);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCameraPosition_t_z_set___(void * jarg1, float jarg2) {
  XPLMCameraPosition_t *arg1 = (XPLMCameraPosition_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMCameraPosition_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->z = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCameraPosition_t_z_get___(void * jarg1) {
  float jresult ;
  XPLMCameraPosition_t *arg1 = (XPLMCameraPosition_t *) 0 ;
  float result;
  
  arg1 = (XPLMCameraPosition_t *)jarg1; 
  result = (float) ((arg1)->z);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCameraPosition_t_pitch_set___(void * jarg1, float jarg2) {
  XPLMCameraPosition_t *arg1 = (XPLMCameraPosition_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMCameraPosition_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->pitch = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCameraPosition_t_pitch_get___(void * jarg1) {
  float jresult ;
  XPLMCameraPosition_t *arg1 = (XPLMCameraPosition_t *) 0 ;
  float result;
  
  arg1 = (XPLMCameraPosition_t *)jarg1; 
  result = (float) ((arg1)->pitch);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCameraPosition_t_heading_set___(void * jarg1, float jarg2) {
  XPLMCameraPosition_t *arg1 = (XPLMCameraPosition_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMCameraPosition_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->heading = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCameraPosition_t_heading_get___(void * jarg1) {
  float jresult ;
  XPLMCameraPosition_t *arg1 = (XPLMCameraPosition_t *) 0 ;
  float result;
  
  arg1 = (XPLMCameraPosition_t *)jarg1; 
  result = (float) ((arg1)->heading);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCameraPosition_t_roll_set___(void * jarg1, float jarg2) {
  XPLMCameraPosition_t *arg1 = (XPLMCameraPosition_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMCameraPosition_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->roll = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCameraPosition_t_roll_get___(void * jarg1) {
  float jresult ;
  XPLMCameraPosition_t *arg1 = (XPLMCameraPosition_t *) 0 ;
  float result;
  
  arg1 = (XPLMCameraPosition_t *)jarg1; 
  result = (float) ((arg1)->roll);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCameraPosition_t_zoom_set___(void * jarg1, float jarg2) {
  XPLMCameraPosition_t *arg1 = (XPLMCameraPosition_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMCameraPosition_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->zoom = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCameraPosition_t_zoom_get___(void * jarg1) {
  float jresult ;
  XPLMCameraPosition_t *arg1 = (XPLMCameraPosition_t *) 0 ;
  float result;
  
  arg1 = (XPLMCameraPosition_t *)jarg1; 
  result = (float) ((arg1)->zoom);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_new_XPLMCameraPosition_t___() {
  void * jresult ;
  XPLMCameraPosition_t *result = 0 ;
  
  {
    try {
      result = (XPLMCameraPosition_t *)new XPLMCameraPosition_t();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_delete_XPLMCameraPosition_t___(void * jarg1) {
  XPLMCameraPosition_t *arg1 = (XPLMCameraPosition_t *) 0 ;
  
  arg1 = (XPLMCameraPosition_t *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMControlCamera___(int jarg1, void * jarg2, void * jarg3) {
  XPLMCameraControlDuration arg1 ;
  XPLMCameraControl_f arg2 = (XPLMCameraControl_f) 0 ;
  void *arg3 = (void *) 0 ;
  
  arg1 = (XPLMCameraControlDuration)jarg1; 
  arg2 = (XPLMCameraControl_f)jarg2; 
  arg3 = (void *)jarg3; 
  {
    try {
      XPLMControlCamera(arg1,arg2,arg3);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMDontControlCamera___() {
  {
    try {
      XPLMDontControlCamera();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMIsCameraBeingControlled___(void * jarg1) {
  int jresult ;
  XPLMCameraControlDuration *arg1 = (XPLMCameraControlDuration *) 0 ;
  int result;
  
  arg1 = (XPLMCameraControlDuration *)jarg1; 
  {
    try {
      result = (int)XPLMIsCameraBeingControlled(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMReadCameraPosition___(void * jarg1) {
  XPLMCameraPosition_t *arg1 = (XPLMCameraPosition_t *) 0 ;
  
  arg1 = (XPLMCameraPosition_t *)jarg1; 
  {
    try {
      XPLMReadCameraPosition(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_MapStyle_VFR_Sectional_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_MapStyle_VFR_Sectional;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_MapStyle_IFR_LowEnroute_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_MapStyle_IFR_LowEnroute;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_MapStyle_IFR_HighEnroute_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_MapStyle_IFR_HighEnroute;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_MapLayer_Fill_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_MapLayer_Fill;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_MapLayer_Markings_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_MapLayer_Markings;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_MAP_USER_INTERFACE_get___() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)("XPLM_MAP_USER_INTERFACE");
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLM_MAP_IOS_get___() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)("XPLM_MAP_IOS");
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateMapLayer_t_structSize_set___(void * jarg1, int jarg2) {
  XPLMCreateMapLayer_t *arg1 = (XPLMCreateMapLayer_t *) 0 ;
  int arg2 ;
  
  arg1 = (XPLMCreateMapLayer_t *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->structSize = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateMapLayer_t_structSize_get___(void * jarg1) {
  int jresult ;
  XPLMCreateMapLayer_t *arg1 = (XPLMCreateMapLayer_t *) 0 ;
  int result;
  
  arg1 = (XPLMCreateMapLayer_t *)jarg1; 
  result = (int) ((arg1)->structSize);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateMapLayer_t_mapToCreateLayerIn_set___(void * jarg1, char * jarg2) {
  XPLMCreateMapLayer_t *arg1 = (XPLMCreateMapLayer_t *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (XPLMCreateMapLayer_t *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->mapToCreateLayerIn = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->mapToCreateLayerIn, (const char *)arg2);
    } else {
      arg1->mapToCreateLayerIn = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateMapLayer_t_mapToCreateLayerIn_get___(void * jarg1) {
  char * jresult ;
  XPLMCreateMapLayer_t *arg1 = (XPLMCreateMapLayer_t *) 0 ;
  char *result = 0 ;
  
  arg1 = (XPLMCreateMapLayer_t *)jarg1; 
  result = (char *) ((arg1)->mapToCreateLayerIn);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateMapLayer_t_layerType_set___(void * jarg1, int jarg2) {
  XPLMCreateMapLayer_t *arg1 = (XPLMCreateMapLayer_t *) 0 ;
  XPLMMapLayerType arg2 ;
  
  arg1 = (XPLMCreateMapLayer_t *)jarg1; 
  arg2 = (XPLMMapLayerType)jarg2; 
  if (arg1) (arg1)->layerType = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateMapLayer_t_layerType_get___(void * jarg1) {
  int jresult ;
  XPLMCreateMapLayer_t *arg1 = (XPLMCreateMapLayer_t *) 0 ;
  XPLMMapLayerType result;
  
  arg1 = (XPLMCreateMapLayer_t *)jarg1; 
  result = (XPLMMapLayerType) ((arg1)->layerType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateMapLayer_t_willBeDeletedCallback_set___(void * jarg1, void * jarg2) {
  XPLMCreateMapLayer_t *arg1 = (XPLMCreateMapLayer_t *) 0 ;
  XPLMMapWillBeDeletedCallback_f arg2 = (XPLMMapWillBeDeletedCallback_f) 0 ;
  
  arg1 = (XPLMCreateMapLayer_t *)jarg1; 
  arg2 = (XPLMMapWillBeDeletedCallback_f)jarg2; 
  if (arg1) (arg1)->willBeDeletedCallback = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateMapLayer_t_willBeDeletedCallback_get___(void * jarg1) {
  void * jresult ;
  XPLMCreateMapLayer_t *arg1 = (XPLMCreateMapLayer_t *) 0 ;
  XPLMMapWillBeDeletedCallback_f result;
  
  arg1 = (XPLMCreateMapLayer_t *)jarg1; 
  result = (XPLMMapWillBeDeletedCallback_f) ((arg1)->willBeDeletedCallback);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateMapLayer_t_prepCacheCallback_set___(void * jarg1, void * jarg2) {
  XPLMCreateMapLayer_t *arg1 = (XPLMCreateMapLayer_t *) 0 ;
  XPLMMapPrepareCacheCallback_f arg2 = (XPLMMapPrepareCacheCallback_f) 0 ;
  
  arg1 = (XPLMCreateMapLayer_t *)jarg1; 
  arg2 = (XPLMMapPrepareCacheCallback_f)jarg2; 
  if (arg1) (arg1)->prepCacheCallback = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateMapLayer_t_prepCacheCallback_get___(void * jarg1) {
  void * jresult ;
  XPLMCreateMapLayer_t *arg1 = (XPLMCreateMapLayer_t *) 0 ;
  XPLMMapPrepareCacheCallback_f result;
  
  arg1 = (XPLMCreateMapLayer_t *)jarg1; 
  result = (XPLMMapPrepareCacheCallback_f) ((arg1)->prepCacheCallback);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateMapLayer_t_drawCallback_set___(void * jarg1, void * jarg2) {
  XPLMCreateMapLayer_t *arg1 = (XPLMCreateMapLayer_t *) 0 ;
  XPLMMapDrawingCallback_f arg2 = (XPLMMapDrawingCallback_f) 0 ;
  
  arg1 = (XPLMCreateMapLayer_t *)jarg1; 
  arg2 = (XPLMMapDrawingCallback_f)jarg2; 
  if (arg1) (arg1)->drawCallback = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateMapLayer_t_drawCallback_get___(void * jarg1) {
  void * jresult ;
  XPLMCreateMapLayer_t *arg1 = (XPLMCreateMapLayer_t *) 0 ;
  XPLMMapDrawingCallback_f result;
  
  arg1 = (XPLMCreateMapLayer_t *)jarg1; 
  result = (XPLMMapDrawingCallback_f) ((arg1)->drawCallback);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateMapLayer_t_iconCallback_set___(void * jarg1, void * jarg2) {
  XPLMCreateMapLayer_t *arg1 = (XPLMCreateMapLayer_t *) 0 ;
  XPLMMapIconDrawingCallback_f arg2 = (XPLMMapIconDrawingCallback_f) 0 ;
  
  arg1 = (XPLMCreateMapLayer_t *)jarg1; 
  arg2 = (XPLMMapIconDrawingCallback_f)jarg2; 
  if (arg1) (arg1)->iconCallback = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateMapLayer_t_iconCallback_get___(void * jarg1) {
  void * jresult ;
  XPLMCreateMapLayer_t *arg1 = (XPLMCreateMapLayer_t *) 0 ;
  XPLMMapIconDrawingCallback_f result;
  
  arg1 = (XPLMCreateMapLayer_t *)jarg1; 
  result = (XPLMMapIconDrawingCallback_f) ((arg1)->iconCallback);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateMapLayer_t_labelCallback_set___(void * jarg1, void * jarg2) {
  XPLMCreateMapLayer_t *arg1 = (XPLMCreateMapLayer_t *) 0 ;
  XPLMMapLabelDrawingCallback_f arg2 = (XPLMMapLabelDrawingCallback_f) 0 ;
  
  arg1 = (XPLMCreateMapLayer_t *)jarg1; 
  arg2 = (XPLMMapLabelDrawingCallback_f)jarg2; 
  if (arg1) (arg1)->labelCallback = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateMapLayer_t_labelCallback_get___(void * jarg1) {
  void * jresult ;
  XPLMCreateMapLayer_t *arg1 = (XPLMCreateMapLayer_t *) 0 ;
  XPLMMapLabelDrawingCallback_f result;
  
  arg1 = (XPLMCreateMapLayer_t *)jarg1; 
  result = (XPLMMapLabelDrawingCallback_f) ((arg1)->labelCallback);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateMapLayer_t_showUiToggle_set___(void * jarg1, int jarg2) {
  XPLMCreateMapLayer_t *arg1 = (XPLMCreateMapLayer_t *) 0 ;
  int arg2 ;
  
  arg1 = (XPLMCreateMapLayer_t *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->showUiToggle = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateMapLayer_t_showUiToggle_get___(void * jarg1) {
  int jresult ;
  XPLMCreateMapLayer_t *arg1 = (XPLMCreateMapLayer_t *) 0 ;
  int result;
  
  arg1 = (XPLMCreateMapLayer_t *)jarg1; 
  result = (int) ((arg1)->showUiToggle);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateMapLayer_t_layerName_set___(void * jarg1, char * jarg2) {
  XPLMCreateMapLayer_t *arg1 = (XPLMCreateMapLayer_t *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (XPLMCreateMapLayer_t *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->layerName = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->layerName, (const char *)arg2);
    } else {
      arg1->layerName = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateMapLayer_t_layerName_get___(void * jarg1) {
  char * jresult ;
  XPLMCreateMapLayer_t *arg1 = (XPLMCreateMapLayer_t *) 0 ;
  char *result = 0 ;
  
  arg1 = (XPLMCreateMapLayer_t *)jarg1; 
  result = (char *) ((arg1)->layerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateMapLayer_t_refcon_set___(void * jarg1, void * jarg2) {
  XPLMCreateMapLayer_t *arg1 = (XPLMCreateMapLayer_t *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = (XPLMCreateMapLayer_t *)jarg1; 
  arg2 = (void *)jarg2; 
  if (arg1) (arg1)->refcon = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateMapLayer_t_refcon_get___(void * jarg1) {
  void * jresult ;
  XPLMCreateMapLayer_t *arg1 = (XPLMCreateMapLayer_t *) 0 ;
  void *result = 0 ;
  
  arg1 = (XPLMCreateMapLayer_t *)jarg1; 
  result = (void *) ((arg1)->refcon);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_new_XPLMCreateMapLayer_t___() {
  void * jresult ;
  XPLMCreateMapLayer_t *result = 0 ;
  
  {
    try {
      result = (XPLMCreateMapLayer_t *)new XPLMCreateMapLayer_t();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_delete_XPLMCreateMapLayer_t___(void * jarg1) {
  XPLMCreateMapLayer_t *arg1 = (XPLMCreateMapLayer_t *) 0 ;
  
  arg1 = (XPLMCreateMapLayer_t *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateMapLayer___(void * jarg1) {
  void * jresult ;
  XPLMCreateMapLayer_t *arg1 = (XPLMCreateMapLayer_t *) 0 ;
  XPLMMapLayerID result;
  
  arg1 = (XPLMCreateMapLayer_t *)jarg1; 
  {
    try {
      result = (XPLMMapLayerID)XPLMCreateMapLayer(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMDestroyMapLayer___(void * jarg1) {
  int jresult ;
  XPLMMapLayerID arg1 = (XPLMMapLayerID) 0 ;
  int result;
  
  arg1 = (XPLMMapLayerID)jarg1; 
  {
    try {
      result = (int)XPLMDestroyMapLayer(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMRegisterMapCreationHook___(void * jarg1, void * jarg2) {
  XPLMMapCreatedCallback_f arg1 = (XPLMMapCreatedCallback_f) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = (XPLMMapCreatedCallback_f)jarg1; 
  arg2 = (void *)jarg2; 
  {
    try {
      XPLMRegisterMapCreationHook(arg1,arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMMapExists___(char * jarg1) {
  int jresult ;
  char *arg1 = (char *) 0 ;
  int result;
  
  arg1 = (char *)jarg1; 
  {
    try {
      result = (int)XPLMMapExists((char const *)arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_MapOrientation_Map_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_MapOrientation_Map;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_MapOrientation_UI_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_MapOrientation_UI;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMDrawMapIconFromSheet___(void * jarg1, char * jarg2, int jarg3, int jarg4, int jarg5, int jarg6, float jarg7, float jarg8, int jarg9, float jarg10, float jarg11) {
  XPLMMapLayerID arg1 = (XPLMMapLayerID) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  float arg7 ;
  float arg8 ;
  XPLMMapOrientation arg9 ;
  float arg10 ;
  float arg11 ;
  
  arg1 = (XPLMMapLayerID)jarg1; 
  arg2 = (char *)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (int)jarg6; 
  arg7 = (float)jarg7; 
  arg8 = (float)jarg8; 
  arg9 = (XPLMMapOrientation)jarg9; 
  arg10 = (float)jarg10; 
  arg11 = (float)jarg11; 
  {
    try {
      XPLMDrawMapIconFromSheet(arg1,(char const *)arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMDrawMapLabel___(void * jarg1, char * jarg2, float jarg3, float jarg4, int jarg5, float jarg6) {
  XPLMMapLayerID arg1 = (XPLMMapLayerID) 0 ;
  char *arg2 = (char *) 0 ;
  float arg3 ;
  float arg4 ;
  XPLMMapOrientation arg5 ;
  float arg6 ;
  
  arg1 = (XPLMMapLayerID)jarg1; 
  arg2 = (char *)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = (float)jarg4; 
  arg5 = (XPLMMapOrientation)jarg5; 
  arg6 = (float)jarg6; 
  {
    try {
      XPLMDrawMapLabel(arg1,(char const *)arg2,arg3,arg4,arg5,arg6);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMMapProject___(void * jarg1, double jarg2, double jarg3, void * jarg4, void * jarg5) {
  XPLMMapProjectionID arg1 = (XPLMMapProjectionID) 0 ;
  double arg2 ;
  double arg3 ;
  float *arg4 = (float *) 0 ;
  float *arg5 = (float *) 0 ;
  
  arg1 = (XPLMMapProjectionID)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (float *)jarg4; 
  arg5 = (float *)jarg5; 
  {
    try {
      XPLMMapProject(arg1,arg2,arg3,arg4,arg5);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMMapUnproject___(void * jarg1, float jarg2, float jarg3, void * jarg4, void * jarg5) {
  XPLMMapProjectionID arg1 = (XPLMMapProjectionID) 0 ;
  float arg2 ;
  float arg3 ;
  double *arg4 = (double *) 0 ;
  double *arg5 = (double *) 0 ;
  
  arg1 = (XPLMMapProjectionID)jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = (double *)jarg4; 
  arg5 = (double *)jarg5; 
  {
    try {
      XPLMMapUnproject(arg1,arg2,arg3,arg4,arg5);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMMapScaleMeter___(void * jarg1, float jarg2, float jarg3) {
  float jresult ;
  XPLMMapProjectionID arg1 = (XPLMMapProjectionID) 0 ;
  float arg2 ;
  float arg3 ;
  float result;
  
  arg1 = (XPLMMapProjectionID)jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  {
    try {
      result = (float)XPLMMapScaleMeter(arg1,arg2,arg3);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMMapGetNorthHeading___(void * jarg1, float jarg2, float jarg3) {
  float jresult ;
  XPLMMapProjectionID arg1 = (XPLMMapProjectionID) 0 ;
  float arg2 ;
  float arg3 ;
  float result;
  
  arg1 = (XPLMMapProjectionID)jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  {
    try {
      result = (float)XPLMMapGetNorthHeading(arg1,arg2,arg3);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_ProbeY_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_ProbeY;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_ProbeHitTerrain_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_ProbeHitTerrain;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_ProbeError_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_ProbeError;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xplm_ProbeMissed_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xplm_ProbeMissed;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMProbeInfo_t_structSize_set___(void * jarg1, int jarg2) {
  XPLMProbeInfo_t *arg1 = (XPLMProbeInfo_t *) 0 ;
  int arg2 ;
  
  arg1 = (XPLMProbeInfo_t *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->structSize = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMProbeInfo_t_structSize_get___(void * jarg1) {
  int jresult ;
  XPLMProbeInfo_t *arg1 = (XPLMProbeInfo_t *) 0 ;
  int result;
  
  arg1 = (XPLMProbeInfo_t *)jarg1; 
  result = (int) ((arg1)->structSize);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMProbeInfo_t_locationX_set___(void * jarg1, float jarg2) {
  XPLMProbeInfo_t *arg1 = (XPLMProbeInfo_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMProbeInfo_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->locationX = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMProbeInfo_t_locationX_get___(void * jarg1) {
  float jresult ;
  XPLMProbeInfo_t *arg1 = (XPLMProbeInfo_t *) 0 ;
  float result;
  
  arg1 = (XPLMProbeInfo_t *)jarg1; 
  result = (float) ((arg1)->locationX);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMProbeInfo_t_locationY_set___(void * jarg1, float jarg2) {
  XPLMProbeInfo_t *arg1 = (XPLMProbeInfo_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMProbeInfo_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->locationY = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMProbeInfo_t_locationY_get___(void * jarg1) {
  float jresult ;
  XPLMProbeInfo_t *arg1 = (XPLMProbeInfo_t *) 0 ;
  float result;
  
  arg1 = (XPLMProbeInfo_t *)jarg1; 
  result = (float) ((arg1)->locationY);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMProbeInfo_t_locationZ_set___(void * jarg1, float jarg2) {
  XPLMProbeInfo_t *arg1 = (XPLMProbeInfo_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMProbeInfo_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->locationZ = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMProbeInfo_t_locationZ_get___(void * jarg1) {
  float jresult ;
  XPLMProbeInfo_t *arg1 = (XPLMProbeInfo_t *) 0 ;
  float result;
  
  arg1 = (XPLMProbeInfo_t *)jarg1; 
  result = (float) ((arg1)->locationZ);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMProbeInfo_t_normalX_set___(void * jarg1, float jarg2) {
  XPLMProbeInfo_t *arg1 = (XPLMProbeInfo_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMProbeInfo_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->normalX = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMProbeInfo_t_normalX_get___(void * jarg1) {
  float jresult ;
  XPLMProbeInfo_t *arg1 = (XPLMProbeInfo_t *) 0 ;
  float result;
  
  arg1 = (XPLMProbeInfo_t *)jarg1; 
  result = (float) ((arg1)->normalX);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMProbeInfo_t_normalY_set___(void * jarg1, float jarg2) {
  XPLMProbeInfo_t *arg1 = (XPLMProbeInfo_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMProbeInfo_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->normalY = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMProbeInfo_t_normalY_get___(void * jarg1) {
  float jresult ;
  XPLMProbeInfo_t *arg1 = (XPLMProbeInfo_t *) 0 ;
  float result;
  
  arg1 = (XPLMProbeInfo_t *)jarg1; 
  result = (float) ((arg1)->normalY);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMProbeInfo_t_normalZ_set___(void * jarg1, float jarg2) {
  XPLMProbeInfo_t *arg1 = (XPLMProbeInfo_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMProbeInfo_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->normalZ = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMProbeInfo_t_normalZ_get___(void * jarg1) {
  float jresult ;
  XPLMProbeInfo_t *arg1 = (XPLMProbeInfo_t *) 0 ;
  float result;
  
  arg1 = (XPLMProbeInfo_t *)jarg1; 
  result = (float) ((arg1)->normalZ);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMProbeInfo_t_velocityX_set___(void * jarg1, float jarg2) {
  XPLMProbeInfo_t *arg1 = (XPLMProbeInfo_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMProbeInfo_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->velocityX = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMProbeInfo_t_velocityX_get___(void * jarg1) {
  float jresult ;
  XPLMProbeInfo_t *arg1 = (XPLMProbeInfo_t *) 0 ;
  float result;
  
  arg1 = (XPLMProbeInfo_t *)jarg1; 
  result = (float) ((arg1)->velocityX);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMProbeInfo_t_velocityY_set___(void * jarg1, float jarg2) {
  XPLMProbeInfo_t *arg1 = (XPLMProbeInfo_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMProbeInfo_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->velocityY = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMProbeInfo_t_velocityY_get___(void * jarg1) {
  float jresult ;
  XPLMProbeInfo_t *arg1 = (XPLMProbeInfo_t *) 0 ;
  float result;
  
  arg1 = (XPLMProbeInfo_t *)jarg1; 
  result = (float) ((arg1)->velocityY);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMProbeInfo_t_velocityZ_set___(void * jarg1, float jarg2) {
  XPLMProbeInfo_t *arg1 = (XPLMProbeInfo_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMProbeInfo_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->velocityZ = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMProbeInfo_t_velocityZ_get___(void * jarg1) {
  float jresult ;
  XPLMProbeInfo_t *arg1 = (XPLMProbeInfo_t *) 0 ;
  float result;
  
  arg1 = (XPLMProbeInfo_t *)jarg1; 
  result = (float) ((arg1)->velocityZ);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMProbeInfo_t_is_wet_set___(void * jarg1, int jarg2) {
  XPLMProbeInfo_t *arg1 = (XPLMProbeInfo_t *) 0 ;
  int arg2 ;
  
  arg1 = (XPLMProbeInfo_t *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->is_wet = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMProbeInfo_t_is_wet_get___(void * jarg1) {
  int jresult ;
  XPLMProbeInfo_t *arg1 = (XPLMProbeInfo_t *) 0 ;
  int result;
  
  arg1 = (XPLMProbeInfo_t *)jarg1; 
  result = (int) ((arg1)->is_wet);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_new_XPLMProbeInfo_t___() {
  void * jresult ;
  XPLMProbeInfo_t *result = 0 ;
  
  {
    try {
      result = (XPLMProbeInfo_t *)new XPLMProbeInfo_t();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_delete_XPLMProbeInfo_t___(void * jarg1) {
  XPLMProbeInfo_t *arg1 = (XPLMProbeInfo_t *) 0 ;
  
  arg1 = (XPLMProbeInfo_t *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMCreateProbe___(int jarg1) {
  void * jresult ;
  XPLMProbeType arg1 ;
  XPLMProbeRef result;
  
  arg1 = (XPLMProbeType)jarg1; 
  {
    try {
      result = (XPLMProbeRef)XPLMCreateProbe(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMDestroyProbe___(void * jarg1) {
  XPLMProbeRef arg1 = (XPLMProbeRef) 0 ;
  
  arg1 = (XPLMProbeRef)jarg1; 
  {
    try {
      XPLMDestroyProbe(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMProbeTerrainXYZ___(void * jarg1, float jarg2, float jarg3, float jarg4, void * jarg5) {
  int jresult ;
  XPLMProbeRef arg1 = (XPLMProbeRef) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  XPLMProbeInfo_t *arg5 = (XPLMProbeInfo_t *) 0 ;
  XPLMProbeResult result;
  
  arg1 = (XPLMProbeRef)jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = (float)jarg4; 
  arg5 = (XPLMProbeInfo_t *)jarg5; 
  {
    try {
      result = (XPLMProbeResult)XPLMProbeTerrainXYZ(arg1,arg2,arg3,arg4,arg5);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMGetMagneticVariation___(double jarg1, double jarg2) {
  float jresult ;
  double arg1 ;
  double arg2 ;
  float result;
  
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  {
    try {
      result = (float)XPLMGetMagneticVariation(arg1,arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMDegTrueToDegMagnetic___(float jarg1) {
  float jresult ;
  float arg1 ;
  float result;
  
  arg1 = (float)jarg1; 
  {
    try {
      result = (float)XPLMDegTrueToDegMagnetic(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMDegMagneticToDegTrue___(float jarg1) {
  float jresult ;
  float arg1 ;
  float result;
  
  arg1 = (float)jarg1; 
  {
    try {
      result = (float)XPLMDegMagneticToDegTrue(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMDrawInfo_t_structSize_set___(void * jarg1, int jarg2) {
  XPLMDrawInfo_t *arg1 = (XPLMDrawInfo_t *) 0 ;
  int arg2 ;
  
  arg1 = (XPLMDrawInfo_t *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->structSize = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMDrawInfo_t_structSize_get___(void * jarg1) {
  int jresult ;
  XPLMDrawInfo_t *arg1 = (XPLMDrawInfo_t *) 0 ;
  int result;
  
  arg1 = (XPLMDrawInfo_t *)jarg1; 
  result = (int) ((arg1)->structSize);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMDrawInfo_t_x_set___(void * jarg1, float jarg2) {
  XPLMDrawInfo_t *arg1 = (XPLMDrawInfo_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMDrawInfo_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->x = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMDrawInfo_t_x_get___(void * jarg1) {
  float jresult ;
  XPLMDrawInfo_t *arg1 = (XPLMDrawInfo_t *) 0 ;
  float result;
  
  arg1 = (XPLMDrawInfo_t *)jarg1; 
  result = (float) ((arg1)->x);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMDrawInfo_t_y_set___(void * jarg1, float jarg2) {
  XPLMDrawInfo_t *arg1 = (XPLMDrawInfo_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMDrawInfo_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->y = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMDrawInfo_t_y_get___(void * jarg1) {
  float jresult ;
  XPLMDrawInfo_t *arg1 = (XPLMDrawInfo_t *) 0 ;
  float result;
  
  arg1 = (XPLMDrawInfo_t *)jarg1; 
  result = (float) ((arg1)->y);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMDrawInfo_t_z_set___(void * jarg1, float jarg2) {
  XPLMDrawInfo_t *arg1 = (XPLMDrawInfo_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMDrawInfo_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->z = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMDrawInfo_t_z_get___(void * jarg1) {
  float jresult ;
  XPLMDrawInfo_t *arg1 = (XPLMDrawInfo_t *) 0 ;
  float result;
  
  arg1 = (XPLMDrawInfo_t *)jarg1; 
  result = (float) ((arg1)->z);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMDrawInfo_t_pitch_set___(void * jarg1, float jarg2) {
  XPLMDrawInfo_t *arg1 = (XPLMDrawInfo_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMDrawInfo_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->pitch = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMDrawInfo_t_pitch_get___(void * jarg1) {
  float jresult ;
  XPLMDrawInfo_t *arg1 = (XPLMDrawInfo_t *) 0 ;
  float result;
  
  arg1 = (XPLMDrawInfo_t *)jarg1; 
  result = (float) ((arg1)->pitch);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMDrawInfo_t_heading_set___(void * jarg1, float jarg2) {
  XPLMDrawInfo_t *arg1 = (XPLMDrawInfo_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMDrawInfo_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->heading = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMDrawInfo_t_heading_get___(void * jarg1) {
  float jresult ;
  XPLMDrawInfo_t *arg1 = (XPLMDrawInfo_t *) 0 ;
  float result;
  
  arg1 = (XPLMDrawInfo_t *)jarg1; 
  result = (float) ((arg1)->heading);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMDrawInfo_t_roll_set___(void * jarg1, float jarg2) {
  XPLMDrawInfo_t *arg1 = (XPLMDrawInfo_t *) 0 ;
  float arg2 ;
  
  arg1 = (XPLMDrawInfo_t *)jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->roll = arg2;
}


SWIGEXPORT float SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMDrawInfo_t_roll_get___(void * jarg1) {
  float jresult ;
  XPLMDrawInfo_t *arg1 = (XPLMDrawInfo_t *) 0 ;
  float result;
  
  arg1 = (XPLMDrawInfo_t *)jarg1; 
  result = (float) ((arg1)->roll);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_new_XPLMDrawInfo_t___() {
  void * jresult ;
  XPLMDrawInfo_t *result = 0 ;
  
  {
    try {
      result = (XPLMDrawInfo_t *)new XPLMDrawInfo_t();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_delete_XPLMDrawInfo_t___(void * jarg1) {
  XPLMDrawInfo_t *arg1 = (XPLMDrawInfo_t *) 0 ;
  
  arg1 = (XPLMDrawInfo_t *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMLoadObject___(char * jarg1) {
  void * jresult ;
  char *arg1 = (char *) 0 ;
  XPLMObjectRef result;
  
  arg1 = (char *)jarg1; 
  {
    try {
      result = (XPLMObjectRef)XPLMLoadObject((char const *)arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMLoadObjectAsync___(char * jarg1, void * jarg2, void * jarg3) {
  char *arg1 = (char *) 0 ;
  XPLMObjectLoaded_f arg2 = (XPLMObjectLoaded_f) 0 ;
  void *arg3 = (void *) 0 ;
  
  arg1 = (char *)jarg1; 
  arg2 = (XPLMObjectLoaded_f)jarg2; 
  arg3 = (void *)jarg3; 
  {
    try {
      XPLMLoadObjectAsync((char const *)arg1,arg2,arg3);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMUnloadObject___(void * jarg1) {
  XPLMObjectRef arg1 = (XPLMObjectRef) 0 ;
  
  arg1 = (XPLMObjectRef)jarg1; 
  {
    try {
      XPLMUnloadObject(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLMLookupObjects___(char * jarg1, float jarg2, float jarg3, void * jarg4, void * jarg5) {
  int jresult ;
  char *arg1 = (char *) 0 ;
  float arg2 ;
  float arg3 ;
  XPLMLibraryEnumerator_f arg4 = (XPLMLibraryEnumerator_f) 0 ;
  void *arg5 = (void *) 0 ;
  int result;
  
  arg1 = (char *)jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = (XPLMLibraryEnumerator_f)jarg4; 
  arg5 = (void *)jarg5; 
  {
    try {
      result = (int)XPLMLookupObjects((char const *)arg1,arg2,arg3,arg4,arg5);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpProperty_Refcon_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpProperty_Refcon;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpProperty_Dragging_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpProperty_Dragging;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpProperty_DragXOff_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpProperty_DragXOff;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpProperty_DragYOff_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpProperty_DragYOff;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpProperty_Hilited_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpProperty_Hilited;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpProperty_Object_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpProperty_Object;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpProperty_Clip_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpProperty_Clip;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpProperty_Enabled_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpProperty_Enabled;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpProperty_UserStart_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpProperty_UserStart;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPMouseState_t_x_set___(void * jarg1, int jarg2) {
  XPMouseState_t *arg1 = (XPMouseState_t *) 0 ;
  int arg2 ;
  
  arg1 = (XPMouseState_t *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->x = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPMouseState_t_x_get___(void * jarg1) {
  int jresult ;
  XPMouseState_t *arg1 = (XPMouseState_t *) 0 ;
  int result;
  
  arg1 = (XPMouseState_t *)jarg1; 
  result = (int) ((arg1)->x);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPMouseState_t_y_set___(void * jarg1, int jarg2) {
  XPMouseState_t *arg1 = (XPMouseState_t *) 0 ;
  int arg2 ;
  
  arg1 = (XPMouseState_t *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->y = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPMouseState_t_y_get___(void * jarg1) {
  int jresult ;
  XPMouseState_t *arg1 = (XPMouseState_t *) 0 ;
  int result;
  
  arg1 = (XPMouseState_t *)jarg1; 
  result = (int) ((arg1)->y);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPMouseState_t_button_set___(void * jarg1, int jarg2) {
  XPMouseState_t *arg1 = (XPMouseState_t *) 0 ;
  int arg2 ;
  
  arg1 = (XPMouseState_t *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->button = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPMouseState_t_button_get___(void * jarg1) {
  int jresult ;
  XPMouseState_t *arg1 = (XPMouseState_t *) 0 ;
  int result;
  
  arg1 = (XPMouseState_t *)jarg1; 
  result = (int) ((arg1)->button);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPMouseState_t_delta_set___(void * jarg1, int jarg2) {
  XPMouseState_t *arg1 = (XPMouseState_t *) 0 ;
  int arg2 ;
  
  arg1 = (XPMouseState_t *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->delta = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPMouseState_t_delta_get___(void * jarg1) {
  int jresult ;
  XPMouseState_t *arg1 = (XPMouseState_t *) 0 ;
  int result;
  
  arg1 = (XPMouseState_t *)jarg1; 
  result = (int) ((arg1)->delta);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_new_XPMouseState_t___() {
  void * jresult ;
  XPMouseState_t *result = 0 ;
  
  {
    try {
      result = (XPMouseState_t *)new XPMouseState_t();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_delete_XPMouseState_t___(void * jarg1) {
  XPMouseState_t *arg1 = (XPMouseState_t *) 0 ;
  
  arg1 = (XPMouseState_t *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPKeyState_t_key_set___(void * jarg1, char jarg2) {
  XPKeyState_t *arg1 = (XPKeyState_t *) 0 ;
  char arg2 ;
  
  arg1 = (XPKeyState_t *)jarg1; 
  arg2 = (char)jarg2; 
  if (arg1) (arg1)->key = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPKeyState_t_key_get___(void * jarg1) {
  char jresult ;
  XPKeyState_t *arg1 = (XPKeyState_t *) 0 ;
  char result;
  
  arg1 = (XPKeyState_t *)jarg1; 
  result = (char) ((arg1)->key);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPKeyState_t_flags_set___(void * jarg1, int jarg2) {
  XPKeyState_t *arg1 = (XPKeyState_t *) 0 ;
  XPLMKeyFlags arg2 ;
  
  arg1 = (XPKeyState_t *)jarg1; 
  arg2 = (XPLMKeyFlags)jarg2; 
  if (arg1) (arg1)->flags = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPKeyState_t_flags_get___(void * jarg1) {
  int jresult ;
  XPKeyState_t *arg1 = (XPKeyState_t *) 0 ;
  XPLMKeyFlags result;
  
  arg1 = (XPKeyState_t *)jarg1; 
  result = (XPLMKeyFlags) ((arg1)->flags);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPKeyState_t_vkey_set___(void * jarg1, char jarg2) {
  XPKeyState_t *arg1 = (XPKeyState_t *) 0 ;
  char arg2 ;
  
  arg1 = (XPKeyState_t *)jarg1; 
  arg2 = (char)jarg2; 
  if (arg1) (arg1)->vkey = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPKeyState_t_vkey_get___(void * jarg1) {
  char jresult ;
  XPKeyState_t *arg1 = (XPKeyState_t *) 0 ;
  char result;
  
  arg1 = (XPKeyState_t *)jarg1; 
  result = (char) ((arg1)->vkey);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_new_XPKeyState_t___() {
  void * jresult ;
  XPKeyState_t *result = 0 ;
  
  {
    try {
      result = (XPKeyState_t *)new XPKeyState_t();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_delete_XPKeyState_t___(void * jarg1) {
  XPKeyState_t *arg1 = (XPKeyState_t *) 0 ;
  
  arg1 = (XPKeyState_t *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPWidgetGeometryChange_t_dx_set___(void * jarg1, int jarg2) {
  XPWidgetGeometryChange_t *arg1 = (XPWidgetGeometryChange_t *) 0 ;
  int arg2 ;
  
  arg1 = (XPWidgetGeometryChange_t *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->dx = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPWidgetGeometryChange_t_dx_get___(void * jarg1) {
  int jresult ;
  XPWidgetGeometryChange_t *arg1 = (XPWidgetGeometryChange_t *) 0 ;
  int result;
  
  arg1 = (XPWidgetGeometryChange_t *)jarg1; 
  result = (int) ((arg1)->dx);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPWidgetGeometryChange_t_dy_set___(void * jarg1, int jarg2) {
  XPWidgetGeometryChange_t *arg1 = (XPWidgetGeometryChange_t *) 0 ;
  int arg2 ;
  
  arg1 = (XPWidgetGeometryChange_t *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->dy = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPWidgetGeometryChange_t_dy_get___(void * jarg1) {
  int jresult ;
  XPWidgetGeometryChange_t *arg1 = (XPWidgetGeometryChange_t *) 0 ;
  int result;
  
  arg1 = (XPWidgetGeometryChange_t *)jarg1; 
  result = (int) ((arg1)->dy);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPWidgetGeometryChange_t_dwidth_set___(void * jarg1, int jarg2) {
  XPWidgetGeometryChange_t *arg1 = (XPWidgetGeometryChange_t *) 0 ;
  int arg2 ;
  
  arg1 = (XPWidgetGeometryChange_t *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->dwidth = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPWidgetGeometryChange_t_dwidth_get___(void * jarg1) {
  int jresult ;
  XPWidgetGeometryChange_t *arg1 = (XPWidgetGeometryChange_t *) 0 ;
  int result;
  
  arg1 = (XPWidgetGeometryChange_t *)jarg1; 
  result = (int) ((arg1)->dwidth);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPWidgetGeometryChange_t_dheight_set___(void * jarg1, int jarg2) {
  XPWidgetGeometryChange_t *arg1 = (XPWidgetGeometryChange_t *) 0 ;
  int arg2 ;
  
  arg1 = (XPWidgetGeometryChange_t *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->dheight = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPWidgetGeometryChange_t_dheight_get___(void * jarg1) {
  int jresult ;
  XPWidgetGeometryChange_t *arg1 = (XPWidgetGeometryChange_t *) 0 ;
  int result;
  
  arg1 = (XPWidgetGeometryChange_t *)jarg1; 
  result = (int) ((arg1)->dheight);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_new_XPWidgetGeometryChange_t___() {
  void * jresult ;
  XPWidgetGeometryChange_t *result = 0 ;
  
  {
    try {
      result = (XPWidgetGeometryChange_t *)new XPWidgetGeometryChange_t();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_delete_XPWidgetGeometryChange_t___(void * jarg1) {
  XPWidgetGeometryChange_t *arg1 = (XPWidgetGeometryChange_t *) 0 ;
  
  arg1 = (XPWidgetGeometryChange_t *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpMode_Direct_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpMode_Direct;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpMode_UpChain_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpMode_UpChain;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpMode_Recursive_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpMode_Recursive;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpMode_DirectAllCallbacks_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpMode_DirectAllCallbacks;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpMode_Once_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpMode_Once;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpWidgetClass_None_get___() {
  int jresult ;
  int result;
  
  result = (int)(0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpMsg_None_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpMsg_None;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpMsg_Create_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpMsg_Create;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpMsg_Destroy_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpMsg_Destroy;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpMsg_Paint_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpMsg_Paint;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpMsg_Draw_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpMsg_Draw;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpMsg_KeyPress_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpMsg_KeyPress;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpMsg_KeyTakeFocus_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpMsg_KeyTakeFocus;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpMsg_KeyLoseFocus_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpMsg_KeyLoseFocus;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpMsg_MouseDown_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpMsg_MouseDown;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpMsg_MouseDrag_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpMsg_MouseDrag;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpMsg_MouseUp_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpMsg_MouseUp;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpMsg_Reshape_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpMsg_Reshape;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpMsg_ExposedChanged_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpMsg_ExposedChanged;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpMsg_AcceptChild_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpMsg_AcceptChild;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpMsg_LoseChild_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpMsg_LoseChild;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpMsg_AcceptParent_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpMsg_AcceptParent;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpMsg_Shown_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpMsg_Shown;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpMsg_Hidden_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpMsg_Hidden;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpMsg_DescriptorChanged_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpMsg_DescriptorChanged;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpMsg_PropertyChanged_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpMsg_PropertyChanged;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpMsg_MouseWheel_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpMsg_MouseWheel;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpMsg_CursorAdjust_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpMsg_CursorAdjust;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpMsg_UserStart_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpMsg_UserStart;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpWidgetClass_MainWindow_get___() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpMainWindowStyle_MainWindow_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpMainWindowStyle_MainWindow;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpMainWindowStyle_Translucent_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpMainWindowStyle_Translucent;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpProperty_MainWindowType_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpProperty_MainWindowType;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpProperty_MainWindowHasCloseBoxes_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpProperty_MainWindowHasCloseBoxes;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpMessage_CloseButtonPushed_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpMessage_CloseButtonPushed;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpWidgetClass_SubWindow_get___() {
  int jresult ;
  int result;
  
  result = (int)(2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpSubWindowStyle_SubWindow_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpSubWindowStyle_SubWindow;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpSubWindowStyle_Screen_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpSubWindowStyle_Screen;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpSubWindowStyle_ListView_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpSubWindowStyle_ListView;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpProperty_SubWindowType_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpProperty_SubWindowType;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpWidgetClass_Button_get___() {
  int jresult ;
  int result;
  
  result = (int)(3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpPushButton_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpPushButton;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpRadioButton_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpRadioButton;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpWindowCloseBox_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpWindowCloseBox;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpLittleDownArrow_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpLittleDownArrow;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpLittleUpArrow_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpLittleUpArrow;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpButtonBehaviorPushButton_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpButtonBehaviorPushButton;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpButtonBehaviorCheckBox_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpButtonBehaviorCheckBox;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpButtonBehaviorRadioButton_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpButtonBehaviorRadioButton;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpProperty_ButtonType_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpProperty_ButtonType;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpProperty_ButtonBehavior_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpProperty_ButtonBehavior;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpProperty_ButtonState_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpProperty_ButtonState;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpMsg_PushButtonPressed_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpMsg_PushButtonPressed;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpMsg_ButtonStateChanged_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpMsg_ButtonStateChanged;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpWidgetClass_TextField_get___() {
  int jresult ;
  int result;
  
  result = (int)(4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpTextEntryField_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpTextEntryField;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpTextTransparent_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpTextTransparent;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpTextTranslucent_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpTextTranslucent;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpProperty_EditFieldSelStart_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpProperty_EditFieldSelStart;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpProperty_EditFieldSelEnd_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpProperty_EditFieldSelEnd;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpProperty_EditFieldSelDragStart_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpProperty_EditFieldSelDragStart;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpProperty_TextFieldType_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpProperty_TextFieldType;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpProperty_PasswordMode_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpProperty_PasswordMode;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpProperty_MaxCharacters_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpProperty_MaxCharacters;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpProperty_ScrollPosition_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpProperty_ScrollPosition;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpProperty_Font_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpProperty_Font;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpProperty_ActiveEditSide_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpProperty_ActiveEditSide;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpMsg_TextFieldChanged_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpMsg_TextFieldChanged;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpWidgetClass_ScrollBar_get___() {
  int jresult ;
  int result;
  
  result = (int)(5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpScrollBarTypeScrollBar_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpScrollBarTypeScrollBar;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpScrollBarTypeSlider_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpScrollBarTypeSlider;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpProperty_ScrollBarSliderPosition_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpProperty_ScrollBarSliderPosition;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpProperty_ScrollBarMin_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpProperty_ScrollBarMin;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpProperty_ScrollBarMax_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpProperty_ScrollBarMax;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpProperty_ScrollBarPageAmount_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpProperty_ScrollBarPageAmount;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpProperty_ScrollBarType_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpProperty_ScrollBarType;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpProperty_ScrollBarSlop_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpProperty_ScrollBarSlop;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpMsg_ScrollBarSliderPositionChanged_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpMsg_ScrollBarSliderPositionChanged;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpWidgetClass_Caption_get___() {
  int jresult ;
  int result;
  
  result = (int)(6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpProperty_CaptionLit_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpProperty_CaptionLit;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpWidgetClass_GeneralGraphics_get___() {
  int jresult ;
  int result;
  
  result = (int)(7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpShip_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpShip;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpILSGlideScope_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpILSGlideScope;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpMarkerLeft_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpMarkerLeft;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xp_Airport_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xp_Airport;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpNDB_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpNDB;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpVOR_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpVOR;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpRadioTower_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpRadioTower;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpAircraftCarrier_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpAircraftCarrier;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpFire_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpFire;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpMarkerRight_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpMarkerRight;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpCustomObject_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpCustomObject;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpCoolingTower_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpCoolingTower;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpSmokeStack_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpSmokeStack;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpBuilding_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpBuilding;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpPowerLine_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpPowerLine;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpVORWithCompassRose_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpVORWithCompassRose;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpOilPlatform_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpOilPlatform;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpOilPlatformSmall_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpOilPlatformSmall;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpWayPoint_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpWayPoint;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpProperty_GeneralGraphicsType_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpProperty_GeneralGraphicsType;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpWidgetClass_Progress_get___() {
  int jresult ;
  int result;
  
  result = (int)(8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpProperty_ProgressPosition_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpProperty_ProgressPosition;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpProperty_ProgressMin_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpProperty_ProgressMin;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpProperty_ProgressMax_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpProperty_ProgressMax;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPWidgetCreate_t_left_set___(void * jarg1, int jarg2) {
  XPWidgetCreate_t *arg1 = (XPWidgetCreate_t *) 0 ;
  int arg2 ;
  
  arg1 = (XPWidgetCreate_t *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->left = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPWidgetCreate_t_left_get___(void * jarg1) {
  int jresult ;
  XPWidgetCreate_t *arg1 = (XPWidgetCreate_t *) 0 ;
  int result;
  
  arg1 = (XPWidgetCreate_t *)jarg1; 
  result = (int) ((arg1)->left);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPWidgetCreate_t_top_set___(void * jarg1, int jarg2) {
  XPWidgetCreate_t *arg1 = (XPWidgetCreate_t *) 0 ;
  int arg2 ;
  
  arg1 = (XPWidgetCreate_t *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->top = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPWidgetCreate_t_top_get___(void * jarg1) {
  int jresult ;
  XPWidgetCreate_t *arg1 = (XPWidgetCreate_t *) 0 ;
  int result;
  
  arg1 = (XPWidgetCreate_t *)jarg1; 
  result = (int) ((arg1)->top);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPWidgetCreate_t_right_set___(void * jarg1, int jarg2) {
  XPWidgetCreate_t *arg1 = (XPWidgetCreate_t *) 0 ;
  int arg2 ;
  
  arg1 = (XPWidgetCreate_t *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->right = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPWidgetCreate_t_right_get___(void * jarg1) {
  int jresult ;
  XPWidgetCreate_t *arg1 = (XPWidgetCreate_t *) 0 ;
  int result;
  
  arg1 = (XPWidgetCreate_t *)jarg1; 
  result = (int) ((arg1)->right);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPWidgetCreate_t_bottom_set___(void * jarg1, int jarg2) {
  XPWidgetCreate_t *arg1 = (XPWidgetCreate_t *) 0 ;
  int arg2 ;
  
  arg1 = (XPWidgetCreate_t *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->bottom = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPWidgetCreate_t_bottom_get___(void * jarg1) {
  int jresult ;
  XPWidgetCreate_t *arg1 = (XPWidgetCreate_t *) 0 ;
  int result;
  
  arg1 = (XPWidgetCreate_t *)jarg1; 
  result = (int) ((arg1)->bottom);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPWidgetCreate_t_visible_set___(void * jarg1, int jarg2) {
  XPWidgetCreate_t *arg1 = (XPWidgetCreate_t *) 0 ;
  int arg2 ;
  
  arg1 = (XPWidgetCreate_t *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->visible = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPWidgetCreate_t_visible_get___(void * jarg1) {
  int jresult ;
  XPWidgetCreate_t *arg1 = (XPWidgetCreate_t *) 0 ;
  int result;
  
  arg1 = (XPWidgetCreate_t *)jarg1; 
  result = (int) ((arg1)->visible);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPWidgetCreate_t_descriptor_set___(void * jarg1, char * jarg2) {
  XPWidgetCreate_t *arg1 = (XPWidgetCreate_t *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (XPWidgetCreate_t *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->descriptor = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->descriptor, (const char *)arg2);
    } else {
      arg1->descriptor = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPWidgetCreate_t_descriptor_get___(void * jarg1) {
  char * jresult ;
  XPWidgetCreate_t *arg1 = (XPWidgetCreate_t *) 0 ;
  char *result = 0 ;
  
  arg1 = (XPWidgetCreate_t *)jarg1; 
  result = (char *) ((arg1)->descriptor);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPWidgetCreate_t_isRoot_set___(void * jarg1, int jarg2) {
  XPWidgetCreate_t *arg1 = (XPWidgetCreate_t *) 0 ;
  int arg2 ;
  
  arg1 = (XPWidgetCreate_t *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->isRoot = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPWidgetCreate_t_isRoot_get___(void * jarg1) {
  int jresult ;
  XPWidgetCreate_t *arg1 = (XPWidgetCreate_t *) 0 ;
  int result;
  
  arg1 = (XPWidgetCreate_t *)jarg1; 
  result = (int) ((arg1)->isRoot);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPWidgetCreate_t_containerIndex_set___(void * jarg1, int jarg2) {
  XPWidgetCreate_t *arg1 = (XPWidgetCreate_t *) 0 ;
  int arg2 ;
  
  arg1 = (XPWidgetCreate_t *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->containerIndex = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPWidgetCreate_t_containerIndex_get___(void * jarg1) {
  int jresult ;
  XPWidgetCreate_t *arg1 = (XPWidgetCreate_t *) 0 ;
  int result;
  
  arg1 = (XPWidgetCreate_t *)jarg1; 
  result = (int) ((arg1)->containerIndex);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPWidgetCreate_t_widgetClass_set___(void * jarg1, int jarg2) {
  XPWidgetCreate_t *arg1 = (XPWidgetCreate_t *) 0 ;
  XPWidgetClass arg2 ;
  
  arg1 = (XPWidgetCreate_t *)jarg1; 
  arg2 = (XPWidgetClass)jarg2; 
  if (arg1) (arg1)->widgetClass = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPWidgetCreate_t_widgetClass_get___(void * jarg1) {
  int jresult ;
  XPWidgetCreate_t *arg1 = (XPWidgetCreate_t *) 0 ;
  XPWidgetClass result;
  
  arg1 = (XPWidgetCreate_t *)jarg1; 
  result = (XPWidgetClass) ((arg1)->widgetClass);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_new_XPWidgetCreate_t___() {
  void * jresult ;
  XPWidgetCreate_t *result = 0 ;
  
  {
    try {
      result = (XPWidgetCreate_t *)new XPWidgetCreate_t();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_delete_XPWidgetCreate_t___(void * jarg1) {
  XPWidgetCreate_t *arg1 = (XPWidgetCreate_t *) 0 ;
  
  arg1 = (XPWidgetCreate_t *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_NO_PARENT_get___() {
  int jresult ;
  int result;
  
  result = (int)(-1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_PARAM_PARENT_get___() {
  int jresult ;
  int result;
  
  result = (int)(-2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPUCreateWidgets___(void * jarg1, int jarg2, void * jarg3, void * jarg4) {
  XPWidgetCreate_t *arg1 = (XPWidgetCreate_t *) 0 ;
  int arg2 ;
  XPWidgetID arg3 = (XPWidgetID) 0 ;
  XPWidgetID *arg4 = (XPWidgetID *) 0 ;
  
  arg1 = (XPWidgetCreate_t *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (XPWidgetID)jarg3; 
  arg4 = (XPWidgetID *)jarg4; 
  {
    try {
      XPUCreateWidgets((XPWidgetCreate_t const *)arg1,arg2,arg3,arg4);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPUMoveWidgetBy___(void * jarg1, int jarg2, int jarg3) {
  XPWidgetID arg1 = (XPWidgetID) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (XPWidgetID)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      XPUMoveWidgetBy(arg1,arg2,arg3);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPUFixedLayout___(int jarg1, void * jarg2, void * jarg3, void * jarg4) {
  int jresult ;
  XPWidgetMessage arg1 ;
  XPWidgetID arg2 = (XPWidgetID) 0 ;
  intptr_t arg3 ;
  intptr_t arg4 ;
  intptr_t *argp3 ;
  intptr_t *argp4 ;
  int result;
  
  arg1 = (XPWidgetMessage)jarg1; 
  arg2 = (XPWidgetID)jarg2; 
  argp3 = (intptr_t *)jarg3; 
  if (!argp3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null intptr_t", 0);
    return 0;
  }
  arg3 = *argp3; 
  argp4 = (intptr_t *)jarg4; 
  if (!argp4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null intptr_t", 0);
    return 0;
  }
  arg4 = *argp4; 
  {
    try {
      result = (int)XPUFixedLayout(arg1,arg2,SWIG_STD_MOVE(arg3),SWIG_STD_MOVE(arg4));
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPUSelectIfNeeded___(int jarg1, void * jarg2, void * jarg3, void * jarg4, int jarg5) {
  int jresult ;
  XPWidgetMessage arg1 ;
  XPWidgetID arg2 = (XPWidgetID) 0 ;
  intptr_t arg3 ;
  intptr_t arg4 ;
  int arg5 ;
  intptr_t *argp3 ;
  intptr_t *argp4 ;
  int result;
  
  arg1 = (XPWidgetMessage)jarg1; 
  arg2 = (XPWidgetID)jarg2; 
  argp3 = (intptr_t *)jarg3; 
  if (!argp3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null intptr_t", 0);
    return 0;
  }
  arg3 = *argp3; 
  argp4 = (intptr_t *)jarg4; 
  if (!argp4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null intptr_t", 0);
    return 0;
  }
  arg4 = *argp4; 
  arg5 = (int)jarg5; 
  {
    try {
      result = (int)XPUSelectIfNeeded(arg1,arg2,SWIG_STD_MOVE(arg3),SWIG_STD_MOVE(arg4),arg5);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPUDefocusKeyboard___(int jarg1, void * jarg2, void * jarg3, void * jarg4, int jarg5) {
  int jresult ;
  XPWidgetMessage arg1 ;
  XPWidgetID arg2 = (XPWidgetID) 0 ;
  intptr_t arg3 ;
  intptr_t arg4 ;
  int arg5 ;
  intptr_t *argp3 ;
  intptr_t *argp4 ;
  int result;
  
  arg1 = (XPWidgetMessage)jarg1; 
  arg2 = (XPWidgetID)jarg2; 
  argp3 = (intptr_t *)jarg3; 
  if (!argp3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null intptr_t", 0);
    return 0;
  }
  arg3 = *argp3; 
  argp4 = (intptr_t *)jarg4; 
  if (!argp4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null intptr_t", 0);
    return 0;
  }
  arg4 = *argp4; 
  arg5 = (int)jarg5; 
  {
    try {
      result = (int)XPUDefocusKeyboard(arg1,arg2,SWIG_STD_MOVE(arg3),SWIG_STD_MOVE(arg4),arg5);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPUDragWidget___(int jarg1, void * jarg2, void * jarg3, void * jarg4, int jarg5, int jarg6, int jarg7, int jarg8) {
  int jresult ;
  XPWidgetMessage arg1 ;
  XPWidgetID arg2 = (XPWidgetID) 0 ;
  intptr_t arg3 ;
  intptr_t arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  intptr_t *argp3 ;
  intptr_t *argp4 ;
  int result;
  
  arg1 = (XPWidgetMessage)jarg1; 
  arg2 = (XPWidgetID)jarg2; 
  argp3 = (intptr_t *)jarg3; 
  if (!argp3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null intptr_t", 0);
    return 0;
  }
  arg3 = *argp3; 
  argp4 = (intptr_t *)jarg4; 
  if (!argp4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null intptr_t", 0);
    return 0;
  }
  arg4 = *argp4; 
  arg5 = (int)jarg5; 
  arg6 = (int)jarg6; 
  arg7 = (int)jarg7; 
  arg8 = (int)jarg8; 
  {
    try {
      result = (int)XPUDragWidget(arg1,arg2,SWIG_STD_MOVE(arg3),SWIG_STD_MOVE(arg4),arg5,arg6,arg7,arg8);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPCreateWidget___(int jarg1, int jarg2, int jarg3, int jarg4, int jarg5, char * jarg6, int jarg7, void * jarg8, int jarg9) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  char *arg6 = (char *) 0 ;
  int arg7 ;
  XPWidgetID arg8 = (XPWidgetID) 0 ;
  XPWidgetClass arg9 ;
  XPWidgetID result;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (char *)jarg6; 
  arg7 = (int)jarg7; 
  arg8 = (XPWidgetID)jarg8; 
  arg9 = (XPWidgetClass)jarg9; 
  {
    try {
      result = (XPWidgetID)XPCreateWidget(arg1,arg2,arg3,arg4,arg5,(char const *)arg6,arg7,arg8,arg9);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPCreateCustomWidget___(int jarg1, int jarg2, int jarg3, int jarg4, int jarg5, char * jarg6, int jarg7, void * jarg8, void * jarg9) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  char *arg6 = (char *) 0 ;
  int arg7 ;
  XPWidgetID arg8 = (XPWidgetID) 0 ;
  XPWidgetFunc_t arg9 = (XPWidgetFunc_t) 0 ;
  XPWidgetID result;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (char *)jarg6; 
  arg7 = (int)jarg7; 
  arg8 = (XPWidgetID)jarg8; 
  arg9 = (XPWidgetFunc_t)jarg9; 
  {
    try {
      result = (XPWidgetID)XPCreateCustomWidget(arg1,arg2,arg3,arg4,arg5,(char const *)arg6,arg7,arg8,arg9);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPDestroyWidget___(void * jarg1, int jarg2) {
  XPWidgetID arg1 = (XPWidgetID) 0 ;
  int arg2 ;
  
  arg1 = (XPWidgetID)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      XPDestroyWidget(arg1,arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPSendMessageToWidget___(void * jarg1, int jarg2, int jarg3, void * jarg4, void * jarg5) {
  int jresult ;
  XPWidgetID arg1 = (XPWidgetID) 0 ;
  XPWidgetMessage arg2 ;
  XPDispatchMode arg3 ;
  intptr_t arg4 ;
  intptr_t arg5 ;
  intptr_t *argp4 ;
  intptr_t *argp5 ;
  int result;
  
  arg1 = (XPWidgetID)jarg1; 
  arg2 = (XPWidgetMessage)jarg2; 
  arg3 = (XPDispatchMode)jarg3; 
  argp4 = (intptr_t *)jarg4; 
  if (!argp4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null intptr_t", 0);
    return 0;
  }
  arg4 = *argp4; 
  argp5 = (intptr_t *)jarg5; 
  if (!argp5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null intptr_t", 0);
    return 0;
  }
  arg5 = *argp5; 
  {
    try {
      result = (int)XPSendMessageToWidget(arg1,arg2,arg3,SWIG_STD_MOVE(arg4),SWIG_STD_MOVE(arg5));
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPPlaceWidgetWithin___(void * jarg1, void * jarg2) {
  XPWidgetID arg1 = (XPWidgetID) 0 ;
  XPWidgetID arg2 = (XPWidgetID) 0 ;
  
  arg1 = (XPWidgetID)jarg1; 
  arg2 = (XPWidgetID)jarg2; 
  {
    try {
      XPPlaceWidgetWithin(arg1,arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPCountChildWidgets___(void * jarg1) {
  int jresult ;
  XPWidgetID arg1 = (XPWidgetID) 0 ;
  int result;
  
  arg1 = (XPWidgetID)jarg1; 
  {
    try {
      result = (int)XPCountChildWidgets(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPGetNthChildWidget___(void * jarg1, int jarg2) {
  void * jresult ;
  XPWidgetID arg1 = (XPWidgetID) 0 ;
  int arg2 ;
  XPWidgetID result;
  
  arg1 = (XPWidgetID)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      result = (XPWidgetID)XPGetNthChildWidget(arg1,arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPGetParentWidget___(void * jarg1) {
  void * jresult ;
  XPWidgetID arg1 = (XPWidgetID) 0 ;
  XPWidgetID result;
  
  arg1 = (XPWidgetID)jarg1; 
  {
    try {
      result = (XPWidgetID)XPGetParentWidget(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPShowWidget___(void * jarg1) {
  XPWidgetID arg1 = (XPWidgetID) 0 ;
  
  arg1 = (XPWidgetID)jarg1; 
  {
    try {
      XPShowWidget(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPHideWidget___(void * jarg1) {
  XPWidgetID arg1 = (XPWidgetID) 0 ;
  
  arg1 = (XPWidgetID)jarg1; 
  {
    try {
      XPHideWidget(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPIsWidgetVisible___(void * jarg1) {
  int jresult ;
  XPWidgetID arg1 = (XPWidgetID) 0 ;
  int result;
  
  arg1 = (XPWidgetID)jarg1; 
  {
    try {
      result = (int)XPIsWidgetVisible(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPFindRootWidget___(void * jarg1) {
  void * jresult ;
  XPWidgetID arg1 = (XPWidgetID) 0 ;
  XPWidgetID result;
  
  arg1 = (XPWidgetID)jarg1; 
  {
    try {
      result = (XPWidgetID)XPFindRootWidget(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPBringRootWidgetToFront___(void * jarg1) {
  XPWidgetID arg1 = (XPWidgetID) 0 ;
  
  arg1 = (XPWidgetID)jarg1; 
  {
    try {
      XPBringRootWidgetToFront(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPIsWidgetInFront___(void * jarg1) {
  int jresult ;
  XPWidgetID arg1 = (XPWidgetID) 0 ;
  int result;
  
  arg1 = (XPWidgetID)jarg1; 
  {
    try {
      result = (int)XPIsWidgetInFront(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPGetWidgetGeometry___(void * jarg1, void * jarg2, void * jarg3, void * jarg4, void * jarg5) {
  XPWidgetID arg1 = (XPWidgetID) 0 ;
  int *arg2 = (int *) 0 ;
  int *arg3 = (int *) 0 ;
  int *arg4 = (int *) 0 ;
  int *arg5 = (int *) 0 ;
  
  arg1 = (XPWidgetID)jarg1; 
  arg2 = (int *)jarg2; 
  arg3 = (int *)jarg3; 
  arg4 = (int *)jarg4; 
  arg5 = (int *)jarg5; 
  {
    try {
      XPGetWidgetGeometry(arg1,arg2,arg3,arg4,arg5);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPSetWidgetGeometry___(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  XPWidgetID arg1 = (XPWidgetID) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  arg1 = (XPWidgetID)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  {
    try {
      XPSetWidgetGeometry(arg1,arg2,arg3,arg4,arg5);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPGetWidgetForLocation___(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  void * jresult ;
  XPWidgetID arg1 = (XPWidgetID) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  XPWidgetID result;
  
  arg1 = (XPWidgetID)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  {
    try {
      result = (XPWidgetID)XPGetWidgetForLocation(arg1,arg2,arg3,arg4,arg5);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPGetWidgetExposedGeometry___(void * jarg1, void * jarg2, void * jarg3, void * jarg4, void * jarg5) {
  XPWidgetID arg1 = (XPWidgetID) 0 ;
  int *arg2 = (int *) 0 ;
  int *arg3 = (int *) 0 ;
  int *arg4 = (int *) 0 ;
  int *arg5 = (int *) 0 ;
  
  arg1 = (XPWidgetID)jarg1; 
  arg2 = (int *)jarg2; 
  arg3 = (int *)jarg3; 
  arg4 = (int *)jarg4; 
  arg5 = (int *)jarg5; 
  {
    try {
      XPGetWidgetExposedGeometry(arg1,arg2,arg3,arg4,arg5);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPSetWidgetDescriptor___(void * jarg1, char * jarg2) {
  XPWidgetID arg1 = (XPWidgetID) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (XPWidgetID)jarg1; 
  arg2 = (char *)jarg2; 
  {
    try {
      XPSetWidgetDescriptor(arg1,(char const *)arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPGetWidgetDescriptor___(void * jarg1, char * jarg2, int jarg3) {
  int jresult ;
  XPWidgetID arg1 = (XPWidgetID) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (XPWidgetID)jarg1; 
  arg2 = (char *)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      result = (int)XPGetWidgetDescriptor(arg1,arg2,arg3);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPGetWidgetUnderlyingWindow___(void * jarg1) {
  void * jresult ;
  XPWidgetID arg1 = (XPWidgetID) 0 ;
  XPLMWindowID result;
  
  arg1 = (XPWidgetID)jarg1; 
  {
    try {
      result = (XPLMWindowID)XPGetWidgetUnderlyingWindow(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPSetWidgetProperty___(void * jarg1, int jarg2, void * jarg3) {
  XPWidgetID arg1 = (XPWidgetID) 0 ;
  XPWidgetPropertyID arg2 ;
  intptr_t arg3 ;
  intptr_t *argp3 ;
  
  arg1 = (XPWidgetID)jarg1; 
  arg2 = (XPWidgetPropertyID)jarg2; 
  argp3 = (intptr_t *)jarg3; 
  if (!argp3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null intptr_t", 0);
    return ;
  }
  arg3 = *argp3; 
  {
    try {
      XPSetWidgetProperty(arg1,arg2,SWIG_STD_MOVE(arg3));
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPGetWidgetProperty___(void * jarg1, int jarg2, void * jarg3) {
  void * jresult ;
  XPWidgetID arg1 = (XPWidgetID) 0 ;
  XPWidgetPropertyID arg2 ;
  int *arg3 = (int *) 0 ;
  intptr_t result;
  
  arg1 = (XPWidgetID)jarg1; 
  arg2 = (XPWidgetPropertyID)jarg2; 
  arg3 = (int *)jarg3; 
  {
    try {
      result = XPGetWidgetProperty(arg1,arg2,arg3);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = new intptr_t(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPSetKeyboardFocus___(void * jarg1) {
  void * jresult ;
  XPWidgetID arg1 = (XPWidgetID) 0 ;
  XPWidgetID result;
  
  arg1 = (XPWidgetID)jarg1; 
  {
    try {
      result = (XPWidgetID)XPSetKeyboardFocus(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPLoseKeyboardFocus___(void * jarg1) {
  XPWidgetID arg1 = (XPWidgetID) 0 ;
  
  arg1 = (XPWidgetID)jarg1; 
  {
    try {
      XPLoseKeyboardFocus(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPGetWidgetWithFocus___() {
  void * jresult ;
  XPWidgetID result;
  
  {
    try {
      result = (XPWidgetID)XPGetWidgetWithFocus();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPAddWidgetCallback___(void * jarg1, void * jarg2) {
  XPWidgetID arg1 = (XPWidgetID) 0 ;
  XPWidgetFunc_t arg2 = (XPWidgetFunc_t) 0 ;
  
  arg1 = (XPWidgetID)jarg1; 
  arg2 = (XPWidgetFunc_t)jarg2; 
  {
    try {
      XPAddWidgetCallback(arg1,arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPGetWidgetClassFunc___(int jarg1) {
  void * jresult ;
  XPWidgetClass arg1 ;
  XPWidgetFunc_t result;
  
  arg1 = (XPWidgetClass)jarg1; 
  {
    try {
      result = (XPWidgetFunc_t)XPGetWidgetClassFunc(arg1);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpWindow_Help_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpWindow_Help;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpWindow_MainWindow_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpWindow_MainWindow;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpWindow_SubWindow_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpWindow_SubWindow;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpWindow_Screen_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpWindow_Screen;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpWindow_ListView_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpWindow_ListView;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPDrawWindow___(int jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  XPWindowStyle arg5 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (XPWindowStyle)jarg5; 
  {
    try {
      XPDrawWindow(arg1,arg2,arg3,arg4,arg5);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPGetWindowDefaultDimensions___(int jarg1, void * jarg2, void * jarg3) {
  XPWindowStyle arg1 ;
  int *arg2 = (int *) 0 ;
  int *arg3 = (int *) 0 ;
  
  arg1 = (XPWindowStyle)jarg1; 
  arg2 = (int *)jarg2; 
  arg3 = (int *)jarg3; 
  {
    try {
      XPGetWindowDefaultDimensions(arg1,arg2,arg3);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpElement_TextField_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpElement_TextField;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpElement_CheckBox_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpElement_CheckBox;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpElement_CheckBoxLit_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpElement_CheckBoxLit;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpElement_WindowCloseBox_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpElement_WindowCloseBox;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpElement_WindowCloseBoxPressed_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpElement_WindowCloseBoxPressed;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpElement_PushButton_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpElement_PushButton;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpElement_PushButtonLit_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpElement_PushButtonLit;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpElement_OilPlatform_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpElement_OilPlatform;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpElement_OilPlatformSmall_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpElement_OilPlatformSmall;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpElement_Ship_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpElement_Ship;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpElement_ILSGlideScope_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpElement_ILSGlideScope;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpElement_MarkerLeft_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpElement_MarkerLeft;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpElement_Airport_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpElement_Airport;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpElement_Waypoint_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpElement_Waypoint;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpElement_NDB_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpElement_NDB;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpElement_VOR_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpElement_VOR;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpElement_RadioTower_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpElement_RadioTower;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpElement_AircraftCarrier_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpElement_AircraftCarrier;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpElement_Fire_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpElement_Fire;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpElement_MarkerRight_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpElement_MarkerRight;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpElement_CustomObject_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpElement_CustomObject;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpElement_CoolingTower_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpElement_CoolingTower;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpElement_SmokeStack_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpElement_SmokeStack;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpElement_Building_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpElement_Building;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpElement_PowerLine_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpElement_PowerLine;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpElement_CopyButtons_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpElement_CopyButtons;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpElement_CopyButtonsWithEditingGrid_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpElement_CopyButtonsWithEditingGrid;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpElement_EditingGrid_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpElement_EditingGrid;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpElement_ScrollBar_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpElement_ScrollBar;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpElement_VORWithCompassRose_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpElement_VORWithCompassRose;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpElement_Zoomer_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpElement_Zoomer;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpElement_TextFieldMiddle_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpElement_TextFieldMiddle;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpElement_LittleDownArrow_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpElement_LittleDownArrow;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpElement_LittleUpArrow_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpElement_LittleUpArrow;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpElement_WindowDragBar_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpElement_WindowDragBar;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpElement_WindowDragBarSmooth_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpElement_WindowDragBarSmooth;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPDrawElement___(int jarg1, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6) {
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  XPElementStyle arg5 ;
  int arg6 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (XPElementStyle)jarg5; 
  arg6 = (int)jarg6; 
  {
    try {
      XPDrawElement(arg1,arg2,arg3,arg4,arg5,arg6);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPGetElementDefaultDimensions___(int jarg1, void * jarg2, void * jarg3, void * jarg4) {
  XPElementStyle arg1 ;
  int *arg2 = (int *) 0 ;
  int *arg3 = (int *) 0 ;
  int *arg4 = (int *) 0 ;
  
  arg1 = (XPElementStyle)jarg1; 
  arg2 = (int *)jarg2; 
  arg3 = (int *)jarg3; 
  arg4 = (int *)jarg4; 
  {
    try {
      XPGetElementDefaultDimensions(arg1,arg2,arg3,arg4);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpTrack_ScrollBar_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpTrack_ScrollBar;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpTrack_Slider_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpTrack_Slider;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_xpTrack_Progress_get___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)xpTrack_Progress;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPDrawTrack___(int jarg1, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7, int jarg8, int jarg9) {
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  XPTrackStyle arg8 ;
  int arg9 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (int)jarg6; 
  arg7 = (int)jarg7; 
  arg8 = (XPTrackStyle)jarg8; 
  arg9 = (int)jarg9; 
  {
    try {
      XPDrawTrack(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPGetTrackDefaultDimensions___(int jarg1, void * jarg2, void * jarg3) {
  XPTrackStyle arg1 ;
  int *arg2 = (int *) 0 ;
  int *arg3 = (int *) 0 ;
  
  arg1 = (XPTrackStyle)jarg1; 
  arg2 = (int *)jarg2; 
  arg3 = (int *)jarg3; 
  {
    try {
      XPGetTrackDefaultDimensions(arg1,arg2,arg3);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPGetTrackMetrics___(int jarg1, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7, int jarg8, void * jarg9, void * jarg10, void * jarg11, void * jarg12, void * jarg13, void * jarg14) {
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  XPTrackStyle arg8 ;
  int *arg9 = (int *) 0 ;
  int *arg10 = (int *) 0 ;
  int *arg11 = (int *) 0 ;
  int *arg12 = (int *) 0 ;
  int *arg13 = (int *) 0 ;
  int *arg14 = (int *) 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (int)jarg6; 
  arg7 = (int)jarg7; 
  arg8 = (XPTrackStyle)jarg8; 
  arg9 = (int *)jarg9; 
  arg10 = (int *)jarg10; 
  arg11 = (int *)jarg11; 
  arg12 = (int *)jarg12; 
  arg13 = (int *)jarg13; 
  arg14 = (int *)jarg14; 
  {
    try {
      XPGetTrackMetrics(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_new_XPCKeyFilterAttachment___(char * jarg1, char * jarg2) {
  void * jresult ;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  XPCKeyFilterAttachment *result = 0 ;
  
  arg1 = (char *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    try {
      result = (XPCKeyFilterAttachment *)new XPCKeyFilterAttachment((char const *)arg1,(char const *)arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_delete_XPCKeyFilterAttachment___(void * jarg1) {
  XPCKeyFilterAttachment *arg1 = (XPCKeyFilterAttachment *) 0 ;
  
  arg1 = (XPCKeyFilterAttachment *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPCKeyFilterAttachment_HandleWidgetMessage___(void * jarg1, void * jarg2, int jarg3, void * jarg4, void * jarg5, void * jarg6) {
  int jresult ;
  XPCKeyFilterAttachment *arg1 = (XPCKeyFilterAttachment *) 0 ;
  XPCWidget *arg2 = (XPCWidget *) 0 ;
  XPWidgetMessage arg3 ;
  XPWidgetID arg4 = (XPWidgetID) 0 ;
  intptr_t arg5 ;
  intptr_t arg6 ;
  intptr_t *argp5 ;
  intptr_t *argp6 ;
  int result;
  
  arg1 = (XPCKeyFilterAttachment *)jarg1; 
  arg2 = (XPCWidget *)jarg2; 
  arg3 = (XPWidgetMessage)jarg3; 
  arg4 = (XPWidgetID)jarg4; 
  argp5 = (intptr_t *)jarg5; 
  if (!argp5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null intptr_t", 0);
    return 0;
  }
  arg5 = *argp5; 
  argp6 = (intptr_t *)jarg6; 
  if (!argp6) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null intptr_t", 0);
    return 0;
  }
  arg6 = *argp6; 
  {
    try {
      result = (int)(arg1)->HandleWidgetMessage(arg2,arg3,arg4,arg5,arg6);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_new_XPCKeyMessageAttachment___(char jarg1, int jarg2, void * jarg3, unsigned int jarg4, unsigned int jarg5, void * jarg6) {
  void * jresult ;
  char arg1 ;
  int arg2 ;
  void *arg3 = (void *) 0 ;
  bool arg4 ;
  bool arg5 ;
  XPCListener *arg6 = (XPCListener *) 0 ;
  XPCKeyMessageAttachment *result = 0 ;
  
  arg1 = (char)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (void *)jarg3; 
  arg4 = jarg4 ? true : false; 
  arg5 = jarg5 ? true : false; 
  arg6 = (XPCListener *)jarg6; 
  {
    try {
      result = (XPCKeyMessageAttachment *)new XPCKeyMessageAttachment(arg1,arg2,arg3,arg4,arg5,arg6);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_delete_XPCKeyMessageAttachment___(void * jarg1) {
  XPCKeyMessageAttachment *arg1 = (XPCKeyMessageAttachment *) 0 ;
  
  arg1 = (XPCKeyMessageAttachment *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPCKeyMessageAttachment_HandleWidgetMessage___(void * jarg1, void * jarg2, int jarg3, void * jarg4, void * jarg5, void * jarg6) {
  int jresult ;
  XPCKeyMessageAttachment *arg1 = (XPCKeyMessageAttachment *) 0 ;
  XPCWidget *arg2 = (XPCWidget *) 0 ;
  XPWidgetMessage arg3 ;
  XPWidgetID arg4 = (XPWidgetID) 0 ;
  intptr_t arg5 ;
  intptr_t arg6 ;
  intptr_t *argp5 ;
  intptr_t *argp6 ;
  int result;
  
  arg1 = (XPCKeyMessageAttachment *)jarg1; 
  arg2 = (XPCWidget *)jarg2; 
  arg3 = (XPWidgetMessage)jarg3; 
  arg4 = (XPWidgetID)jarg4; 
  argp5 = (intptr_t *)jarg5; 
  if (!argp5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null intptr_t", 0);
    return 0;
  }
  arg5 = *argp5; 
  argp6 = (intptr_t *)jarg6; 
  if (!argp6) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null intptr_t", 0);
    return 0;
  }
  arg6 = *argp6; 
  {
    try {
      result = (int)(arg1)->HandleWidgetMessage(arg2,arg3,arg4,arg5,arg6);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_new_XPCPushButtonMessageAttachment___(void * jarg1, int jarg2, void * jarg3, void * jarg4) {
  void * jresult ;
  XPWidgetID arg1 = (XPWidgetID) 0 ;
  int arg2 ;
  void *arg3 = (void *) 0 ;
  XPCListener *arg4 = (XPCListener *) 0 ;
  XPCPushButtonMessageAttachment *result = 0 ;
  
  arg1 = (XPWidgetID)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (void *)jarg3; 
  arg4 = (XPCListener *)jarg4; 
  {
    try {
      result = (XPCPushButtonMessageAttachment *)new XPCPushButtonMessageAttachment(arg1,arg2,arg3,arg4);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_delete_XPCPushButtonMessageAttachment___(void * jarg1) {
  XPCPushButtonMessageAttachment *arg1 = (XPCPushButtonMessageAttachment *) 0 ;
  
  arg1 = (XPCPushButtonMessageAttachment *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPCPushButtonMessageAttachment_HandleWidgetMessage___(void * jarg1, void * jarg2, int jarg3, void * jarg4, void * jarg5, void * jarg6) {
  int jresult ;
  XPCPushButtonMessageAttachment *arg1 = (XPCPushButtonMessageAttachment *) 0 ;
  XPCWidget *arg2 = (XPCWidget *) 0 ;
  XPWidgetMessage arg3 ;
  XPWidgetID arg4 = (XPWidgetID) 0 ;
  intptr_t arg5 ;
  intptr_t arg6 ;
  intptr_t *argp5 ;
  intptr_t *argp6 ;
  int result;
  
  arg1 = (XPCPushButtonMessageAttachment *)jarg1; 
  arg2 = (XPCWidget *)jarg2; 
  arg3 = (XPWidgetMessage)jarg3; 
  arg4 = (XPWidgetID)jarg4; 
  argp5 = (intptr_t *)jarg5; 
  if (!argp5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null intptr_t", 0);
    return 0;
  }
  arg5 = *argp5; 
  argp6 = (intptr_t *)jarg6; 
  if (!argp6) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null intptr_t", 0);
    return 0;
  }
  arg6 = *argp6; 
  {
    try {
      result = (int)(arg1)->HandleWidgetMessage(arg2,arg3,arg4,arg5,arg6);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_new_XPCSliderMessageAttachment___(void * jarg1, int jarg2, void * jarg3, void * jarg4) {
  void * jresult ;
  XPWidgetID arg1 = (XPWidgetID) 0 ;
  int arg2 ;
  void *arg3 = (void *) 0 ;
  XPCListener *arg4 = (XPCListener *) 0 ;
  XPCSliderMessageAttachment *result = 0 ;
  
  arg1 = (XPWidgetID)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (void *)jarg3; 
  arg4 = (XPCListener *)jarg4; 
  {
    try {
      result = (XPCSliderMessageAttachment *)new XPCSliderMessageAttachment(arg1,arg2,arg3,arg4);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_delete_XPCSliderMessageAttachment___(void * jarg1) {
  XPCSliderMessageAttachment *arg1 = (XPCSliderMessageAttachment *) 0 ;
  
  arg1 = (XPCSliderMessageAttachment *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPCSliderMessageAttachment_HandleWidgetMessage___(void * jarg1, void * jarg2, int jarg3, void * jarg4, void * jarg5, void * jarg6) {
  int jresult ;
  XPCSliderMessageAttachment *arg1 = (XPCSliderMessageAttachment *) 0 ;
  XPCWidget *arg2 = (XPCWidget *) 0 ;
  XPWidgetMessage arg3 ;
  XPWidgetID arg4 = (XPWidgetID) 0 ;
  intptr_t arg5 ;
  intptr_t arg6 ;
  intptr_t *argp5 ;
  intptr_t *argp6 ;
  int result;
  
  arg1 = (XPCSliderMessageAttachment *)jarg1; 
  arg2 = (XPCWidget *)jarg2; 
  arg3 = (XPWidgetMessage)jarg3; 
  arg4 = (XPWidgetID)jarg4; 
  argp5 = (intptr_t *)jarg5; 
  if (!argp5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null intptr_t", 0);
    return 0;
  }
  arg5 = *argp5; 
  argp6 = (intptr_t *)jarg6; 
  if (!argp6) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null intptr_t", 0);
    return 0;
  }
  arg6 = *argp6; 
  {
    try {
      result = (int)(arg1)->HandleWidgetMessage(arg2,arg3,arg4,arg5,arg6);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_new_XPCCloseButtonMessageAttachment___(void * jarg1, int jarg2, void * jarg3, void * jarg4) {
  void * jresult ;
  XPWidgetID arg1 = (XPWidgetID) 0 ;
  int arg2 ;
  void *arg3 = (void *) 0 ;
  XPCListener *arg4 = (XPCListener *) 0 ;
  XPCCloseButtonMessageAttachment *result = 0 ;
  
  arg1 = (XPWidgetID)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (void *)jarg3; 
  arg4 = (XPCListener *)jarg4; 
  {
    try {
      result = (XPCCloseButtonMessageAttachment *)new XPCCloseButtonMessageAttachment(arg1,arg2,arg3,arg4);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_delete_XPCCloseButtonMessageAttachment___(void * jarg1) {
  XPCCloseButtonMessageAttachment *arg1 = (XPCCloseButtonMessageAttachment *) 0 ;
  
  arg1 = (XPCCloseButtonMessageAttachment *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPCCloseButtonMessageAttachment_HandleWidgetMessage___(void * jarg1, void * jarg2, int jarg3, void * jarg4, void * jarg5, void * jarg6) {
  int jresult ;
  XPCCloseButtonMessageAttachment *arg1 = (XPCCloseButtonMessageAttachment *) 0 ;
  XPCWidget *arg2 = (XPCWidget *) 0 ;
  XPWidgetMessage arg3 ;
  XPWidgetID arg4 = (XPWidgetID) 0 ;
  intptr_t arg5 ;
  intptr_t arg6 ;
  intptr_t *argp5 ;
  intptr_t *argp6 ;
  int result;
  
  arg1 = (XPCCloseButtonMessageAttachment *)jarg1; 
  arg2 = (XPCWidget *)jarg2; 
  arg3 = (XPWidgetMessage)jarg3; 
  arg4 = (XPWidgetID)jarg4; 
  argp5 = (intptr_t *)jarg5; 
  if (!argp5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null intptr_t", 0);
    return 0;
  }
  arg5 = *argp5; 
  argp6 = (intptr_t *)jarg6; 
  if (!argp6) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null intptr_t", 0);
    return 0;
  }
  arg6 = *argp6; 
  {
    try {
      result = (int)(arg1)->HandleWidgetMessage(arg2,arg3,arg4,arg5,arg6);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_new_XPCTabGroupAttachment___() {
  void * jresult ;
  XPCTabGroupAttachment *result = 0 ;
  
  {
    try {
      result = (XPCTabGroupAttachment *)new XPCTabGroupAttachment();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_delete_XPCTabGroupAttachment___(void * jarg1) {
  XPCTabGroupAttachment *arg1 = (XPCTabGroupAttachment *) 0 ;
  
  arg1 = (XPCTabGroupAttachment *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPCTabGroupAttachment_HandleWidgetMessage___(void * jarg1, void * jarg2, int jarg3, void * jarg4, void * jarg5, void * jarg6) {
  int jresult ;
  XPCTabGroupAttachment *arg1 = (XPCTabGroupAttachment *) 0 ;
  XPCWidget *arg2 = (XPCWidget *) 0 ;
  XPWidgetMessage arg3 ;
  XPWidgetID arg4 = (XPWidgetID) 0 ;
  intptr_t arg5 ;
  intptr_t arg6 ;
  intptr_t *argp5 ;
  intptr_t *argp6 ;
  int result;
  
  arg1 = (XPCTabGroupAttachment *)jarg1; 
  arg2 = (XPCWidget *)jarg2; 
  arg3 = (XPWidgetMessage)jarg3; 
  arg4 = (XPWidgetID)jarg4; 
  argp5 = (intptr_t *)jarg5; 
  if (!argp5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null intptr_t", 0);
    return 0;
  }
  arg5 = *argp5; 
  argp6 = (intptr_t *)jarg6; 
  if (!argp6) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null intptr_t", 0);
    return 0;
  }
  arg6 = *argp6; 
  {
    try {
      result = (int)(arg1)->HandleWidgetMessage(arg2,arg3,arg4,arg5,arg6);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_delete_XPCListener___(void * jarg1) {
  XPCListener *arg1 = (XPCListener *) 0 ;
  
  arg1 = (XPCListener *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPCListener_ListenToMessage___(void * jarg1, int jarg2, void * jarg3) {
  XPCListener *arg1 = (XPCListener *) 0 ;
  int arg2 ;
  void *arg3 = (void *) 0 ;
  
  arg1 = (XPCListener *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (void *)jarg3; 
  {
    try {
      (arg1)->ListenToMessage(arg2,arg3);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPCWidgetAttachment_HandleWidgetMessage___(void * jarg1, void * jarg2, int jarg3, void * jarg4, void * jarg5, void * jarg6) {
  int jresult ;
  XPCWidgetAttachment *arg1 = (XPCWidgetAttachment *) 0 ;
  XPCWidget *arg2 = (XPCWidget *) 0 ;
  XPWidgetMessage arg3 ;
  XPWidgetID arg4 = (XPWidgetID) 0 ;
  intptr_t arg5 ;
  intptr_t arg6 ;
  intptr_t *argp5 ;
  intptr_t *argp6 ;
  int result;
  
  arg1 = (XPCWidgetAttachment *)jarg1; 
  arg2 = (XPCWidget *)jarg2; 
  arg3 = (XPWidgetMessage)jarg3; 
  arg4 = (XPWidgetID)jarg4; 
  argp5 = (intptr_t *)jarg5; 
  if (!argp5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null intptr_t", 0);
    return 0;
  }
  arg5 = *argp5; 
  argp6 = (intptr_t *)jarg6; 
  if (!argp6) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null intptr_t", 0);
    return 0;
  }
  arg6 = *argp6; 
  {
    try {
      result = (int)(arg1)->HandleWidgetMessage(arg2,arg3,arg4,arg5,arg6);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_delete_XPCWidgetAttachment___(void * jarg1) {
  XPCWidgetAttachment *arg1 = (XPCWidgetAttachment *) 0 ;
  
  arg1 = (XPCWidgetAttachment *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_new_XPCWidget__SWIG_0___(int jarg1, int jarg2, int jarg3, int jarg4, unsigned int jarg5, char * jarg6, unsigned int jarg7, void * jarg8, int jarg9) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  bool arg5 ;
  char *arg6 = (char *) 0 ;
  bool arg7 ;
  XPWidgetID arg8 = (XPWidgetID) 0 ;
  XPWidgetClass arg9 ;
  XPCWidget *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  arg6 = (char *)jarg6; 
  arg7 = jarg7 ? true : false; 
  arg8 = (XPWidgetID)jarg8; 
  arg9 = (XPWidgetClass)jarg9; 
  {
    try {
      result = (XPCWidget *)new XPCWidget(arg1,arg2,arg3,arg4,arg5,(char const *)arg6,arg7,arg8,arg9);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_new_XPCWidget__SWIG_1___(void * jarg1, unsigned int jarg2) {
  void * jresult ;
  XPWidgetID arg1 = (XPWidgetID) 0 ;
  bool arg2 ;
  XPCWidget *result = 0 ;
  
  arg1 = (XPWidgetID)jarg1; 
  arg2 = jarg2 ? true : false; 
  {
    try {
      result = (XPCWidget *)new XPCWidget(arg1,arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_delete_XPCWidget___(void * jarg1) {
  XPCWidget *arg1 = (XPCWidget *) 0 ;
  
  arg1 = (XPCWidget *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPCWidget_SetOwnsWidget___(void * jarg1, unsigned int jarg2) {
  XPCWidget *arg1 = (XPCWidget *) 0 ;
  bool arg2 ;
  
  arg1 = (XPCWidget *)jarg1; 
  arg2 = jarg2 ? true : false; 
  {
    try {
      (arg1)->SetOwnsWidget(arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPCWidget_SetOwnsChildren___(void * jarg1, unsigned int jarg2) {
  XPCWidget *arg1 = (XPCWidget *) 0 ;
  bool arg2 ;
  
  arg1 = (XPCWidget *)jarg1; 
  arg2 = jarg2 ? true : false; 
  {
    try {
      (arg1)->SetOwnsChildren(arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPCWidget_Get___(void * jarg1) {
  void * jresult ;
  XPCWidget *arg1 = (XPCWidget *) 0 ;
  XPWidgetID result;
  
  arg1 = (XPCWidget *)jarg1; 
  {
    try {
      result = (XPWidgetID)((XPCWidget const *)arg1)->Get();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPCWidget_AddAttachment___(void * jarg1, void * jarg2, unsigned int jarg3, unsigned int jarg4) {
  XPCWidget *arg1 = (XPCWidget *) 0 ;
  XPCWidgetAttachment *arg2 = (XPCWidgetAttachment *) 0 ;
  bool arg3 ;
  bool arg4 ;
  
  arg1 = (XPCWidget *)jarg1; 
  arg2 = (XPCWidgetAttachment *)jarg2; 
  arg3 = jarg3 ? true : false; 
  arg4 = jarg4 ? true : false; 
  {
    try {
      (arg1)->AddAttachment(arg2,arg3,arg4);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPCWidget_RemoveAttachment___(void * jarg1, void * jarg2) {
  XPCWidget *arg1 = (XPCWidget *) 0 ;
  XPCWidgetAttachment *arg2 = (XPCWidgetAttachment *) 0 ;
  
  arg1 = (XPCWidget *)jarg1; 
  arg2 = (XPCWidgetAttachment *)jarg2; 
  {
    try {
      (arg1)->RemoveAttachment(arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPCWidget_HandleWidgetMessage___(void * jarg1, int jarg2, void * jarg3, void * jarg4, void * jarg5) {
  int jresult ;
  XPCWidget *arg1 = (XPCWidget *) 0 ;
  XPWidgetMessage arg2 ;
  XPWidgetID arg3 = (XPWidgetID) 0 ;
  intptr_t arg4 ;
  intptr_t arg5 ;
  intptr_t *argp4 ;
  intptr_t *argp5 ;
  int result;
  
  arg1 = (XPCWidget *)jarg1; 
  arg2 = (XPWidgetMessage)jarg2; 
  arg3 = (XPWidgetID)jarg3; 
  argp4 = (intptr_t *)jarg4; 
  if (!argp4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null intptr_t", 0);
    return 0;
  }
  arg4 = *argp4; 
  argp5 = (intptr_t *)jarg5; 
  if (!argp5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null intptr_t", 0);
    return 0;
  }
  arg5 = *argp5; 
  {
    try {
      result = (int)(arg1)->HandleWidgetMessage(arg2,arg3,arg4,arg5);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_delete_XPCProcess___(void * jarg1) {
  XPCProcess *arg1 = (XPCProcess *) 0 ;
  
  arg1 = (XPCProcess *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPCProcess_StartProcessTime___(void * jarg1, float jarg2) {
  XPCProcess *arg1 = (XPCProcess *) 0 ;
  float arg2 ;
  
  arg1 = (XPCProcess *)jarg1; 
  arg2 = (float)jarg2; 
  {
    try {
      (arg1)->StartProcessTime(arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPCProcess_StartProcessCycles___(void * jarg1, int jarg2) {
  XPCProcess *arg1 = (XPCProcess *) 0 ;
  int arg2 ;
  
  arg1 = (XPCProcess *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      (arg1)->StartProcessCycles(arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPCProcess_StopProcess___(void * jarg1) {
  XPCProcess *arg1 = (XPCProcess *) 0 ;
  
  arg1 = (XPCProcess *)jarg1; 
  {
    try {
      (arg1)->StopProcess();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPCProcess_DoProcessing___(void * jarg1, float jarg2, float jarg3, int jarg4) {
  XPCProcess *arg1 = (XPCProcess *) 0 ;
  float arg2 ;
  float arg3 ;
  int arg4 ;
  
  arg1 = (XPCProcess *)jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      (arg1)->DoProcessing(arg2,arg3,arg4);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_new_XPCBroadcaster___() {
  void * jresult ;
  XPCBroadcaster *result = 0 ;
  
  {
    try {
      result = (XPCBroadcaster *)new XPCBroadcaster();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_delete_XPCBroadcaster___(void * jarg1) {
  XPCBroadcaster *arg1 = (XPCBroadcaster *) 0 ;
  
  arg1 = (XPCBroadcaster *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPCBroadcaster_AddListener___(void * jarg1, void * jarg2) {
  XPCBroadcaster *arg1 = (XPCBroadcaster *) 0 ;
  XPCListener *arg2 = (XPCListener *) 0 ;
  
  arg1 = (XPCBroadcaster *)jarg1; 
  arg2 = (XPCListener *)jarg2; 
  {
    try {
      (arg1)->AddListener(arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPCBroadcaster_RemoveListener___(void * jarg1, void * jarg2) {
  XPCBroadcaster *arg1 = (XPCBroadcaster *) 0 ;
  XPCListener *arg2 = (XPCListener *) 0 ;
  
  arg1 = (XPCBroadcaster *)jarg1; 
  arg2 = (XPCListener *)jarg2; 
  {
    try {
      (arg1)->RemoveListener(arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_delete_XPCKeySniffer___(void * jarg1) {
  XPCKeySniffer *arg1 = (XPCKeySniffer *) 0 ;
  
  arg1 = (XPCKeySniffer *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPCKeySniffer_HandleKeyStroke___(void * jarg1, char jarg2, int jarg3, char jarg4) {
  int jresult ;
  XPCKeySniffer *arg1 = (XPCKeySniffer *) 0 ;
  char arg2 ;
  XPLMKeyFlags arg3 ;
  char arg4 ;
  int result;
  
  arg1 = (XPCKeySniffer *)jarg1; 
  arg2 = (char)jarg2; 
  arg3 = (XPLMKeyFlags)jarg3; 
  arg4 = (char)jarg4; 
  {
    try {
      result = (int)(arg1)->HandleKeyStroke(arg2,arg3,arg4);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_delete_XPCWindow___(void * jarg1) {
  XPCWindow *arg1 = (XPCWindow *) 0 ;
  
  arg1 = (XPCWindow *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPCWindow_DoDraw___(void * jarg1) {
  XPCWindow *arg1 = (XPCWindow *) 0 ;
  
  arg1 = (XPCWindow *)jarg1; 
  {
    try {
      (arg1)->DoDraw();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPCWindow_HandleKey___(void * jarg1, char jarg2, int jarg3, char jarg4) {
  XPCWindow *arg1 = (XPCWindow *) 0 ;
  char arg2 ;
  XPLMKeyFlags arg3 ;
  char arg4 ;
  
  arg1 = (XPCWindow *)jarg1; 
  arg2 = (char)jarg2; 
  arg3 = (XPLMKeyFlags)jarg3; 
  arg4 = (char)jarg4; 
  {
    try {
      (arg1)->HandleKey(arg2,arg3,arg4);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPCWindow_LoseFocus___(void * jarg1) {
  XPCWindow *arg1 = (XPCWindow *) 0 ;
  
  arg1 = (XPCWindow *)jarg1; 
  {
    try {
      (arg1)->LoseFocus();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPCWindow_HandleClick___(void * jarg1, int jarg2, int jarg3, int jarg4) {
  int jresult ;
  XPCWindow *arg1 = (XPCWindow *) 0 ;
  int arg2 ;
  int arg3 ;
  XPLMMouseStatus arg4 ;
  int result;
  
  arg1 = (XPCWindow *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (XPLMMouseStatus)jarg4; 
  {
    try {
      result = (int)(arg1)->HandleClick(arg2,arg3,arg4);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPCWindow_GetWindowGeometry___(void * jarg1, void * jarg2, void * jarg3, void * jarg4, void * jarg5) {
  XPCWindow *arg1 = (XPCWindow *) 0 ;
  int *arg2 = (int *) 0 ;
  int *arg3 = (int *) 0 ;
  int *arg4 = (int *) 0 ;
  int *arg5 = (int *) 0 ;
  
  arg1 = (XPCWindow *)jarg1; 
  arg2 = (int *)jarg2; 
  arg3 = (int *)jarg3; 
  arg4 = (int *)jarg4; 
  arg5 = (int *)jarg5; 
  {
    try {
      (arg1)->GetWindowGeometry(arg2,arg3,arg4,arg5);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPCWindow_SetWindowGeometry___(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  XPCWindow *arg1 = (XPCWindow *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  arg1 = (XPCWindow *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  {
    try {
      (arg1)->SetWindowGeometry(arg2,arg3,arg4,arg5);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPCWindow_GetWindowIsVisible___(void * jarg1) {
  int jresult ;
  XPCWindow *arg1 = (XPCWindow *) 0 ;
  int result;
  
  arg1 = (XPCWindow *)jarg1; 
  {
    try {
      result = (int)(arg1)->GetWindowIsVisible();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPCWindow_SetWindowIsVisible___(void * jarg1, int jarg2) {
  XPCWindow *arg1 = (XPCWindow *) 0 ;
  int arg2 ;
  
  arg1 = (XPCWindow *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      (arg1)->SetWindowIsVisible(arg2);
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPCWindow_TakeKeyboardFocus___(void * jarg1) {
  XPCWindow *arg1 = (XPCWindow *) 0 ;
  
  arg1 = (XPCWindow *)jarg1; 
  {
    try {
      (arg1)->TakeKeyboardFocus();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPCWindow_BringWindowToFront___(void * jarg1) {
  XPCWindow *arg1 = (XPCWindow *) 0 ;
  
  arg1 = (XPCWindow *)jarg1; 
  {
    try {
      (arg1)->BringWindowToFront();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_AeroformfUnmanagedfXPLMBindings_XPCWindow_IsWindowInFront___(void * jarg1) {
  int jresult ;
  XPCWindow *arg1 = (XPCWindow *) 0 ;
  int result;
  
  arg1 = (XPCWindow *)jarg1; 
  {
    try {
      result = (int)(arg1)->IsWindowInFront();
    } catch (const std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "Unknown exception occurred"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


#ifdef __cplusplus
}
#endif

